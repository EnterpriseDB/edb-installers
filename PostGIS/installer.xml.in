<project>
    <!-- Package details -->
    <shortName>postgis</shortName>
    <fullName>PostGIS_PGPG_CURRENT_VERSION</fullName>
    <version>PG_VERSION_POSTGIS-PG_BUILDNUM_POSTGIS</version>
    <!-- These options are used on Windows -->
    <startMenuGroupName>${branding}</startMenuGroupName>
    <!-- Product Specific Options -->
    <productDisplayName>PostGIS ${productVersion}</productDisplayName>
    <productComments>PostGIS ${productVersion}, packaged by EnterpriseDB</productComments>
    <productUrlHelpLink>http://www.enterprisedb.com</productUrlHelpLink>
    <productUrlInfoAbout>http://www.enterprisedb.com</productUrlInfoAbout>
    <!-- The options are used for RPM registration -->
    <description>PostGIS ${productVersion}, packaged by EnterpriseDB</description>
    <summary>${msg(install.summary)}</summary>
    <vendor>EnterpriseDB</vendor>
    <release>1</release>

    <!-- Installer Size -->
    <width>550</width>
    <height>400</height>

    <!-- Misc package options -->
    <installerFilename>${product_shortname}-pgPG_CURRENT_VERSION-${product_version}-${platform_name}.${platform_exec_suffix}</installerFilename>
    <enableRollback>0</enableRollback>
    <requireInstallationByRootUser>${admin_rights}</requireInstallationByRootUser>
    <windowsSoftwareRegistryPrefix/>
    <saveRelativePaths>1</saveRelativePaths>
    <outputDirectory>../output</outputDirectory>
    <uninstallerDirectory>${installdir}/PostGIS</uninstallerDirectory>
    <uninstallerName>uninstall-${product_shortname}</uninstallerName>
    <unattendedModeUI>minimal</unattendedModeUI>
    <compressionAlgorithm>lzma</compressionAlgorithm>
    <installationLogFile>${system_temp_directory}/install-${product_shortname}.log</installationLogFile>

    <!-- Images -->
    <disableSplashScreen>1</disableSplashScreen>
    <leftImage>../resources/pg-side.png</leftImage>

    <!-- i18n files for the UI -->
    <allowedLanguages>en</allowedLanguages>
    <customLanguageFileList>
        <language>
            <code>en</code>
            <encoding>iso8859-1</encoding>
            <file>i18n/en.lng</file>
        </language>
    </customLanguageFileList>
    <preShowHelpActionList>
	<!-- Set the PG Major Version -->
        <setInstallerVariable name="PGMajorVersion" value="PG_MAJOR_VERSION">
            <persist>1</persist>
        </setInstallerVariable>
        <setInstallerVariable name="defaultuser" value="postgres"/>
        <setInstallerVariable name="defaultpassword" value=""/>
        <!-- WIN: Set the    pghome default value when pghome not set -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}\PostgreSQL\${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>

	<!-- LIN: Set the    pghome default value when pghome not set -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}/PostgreSQL/${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC: Set the    pghome default value when pghome not set -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="/Library/PostgreSQL/${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
    </preShowHelpActionList>

    <!-- Prebuild Actons-->
    <preBuildActionList>
      <setInstallerVariable name="originalplatform" value="${platform_name}"/>
      <setInstallerVariable name="originalplatform" value="linux-x32">
          <ruleList>
              <compareText text="${platform_name}" value="linux"/>
          </ruleList>
      </setInstallerVariable>
    </preBuildActionList>
    <!-- Initialisation actions -->
    <initializationActionList>
        <setInstallerVariable name="project.parameter(extract_mode).ask" value="0"/>
	<setInstallerVariable name="productVersion" persist="1" value="PG_VERSION_POSTGIS" />
	<!-- Abort Installation as trying to  run a 32-bit installer on 64-bit machine -->
        <throwError>
          <customErrorMessage>${msg(platform.not.match)}</customErrorMessage>
          <text>Unknown Error</text>
          <ruleList>
            <platformTest type="linux-x64"/>
            <compareText text="${originalplatform}" value="linux-x32"/>
          </ruleList>
        </throwError>
        <!-- Set the pghost varaible to localhost -->
        <setInstallerVariable name="pghost" value="localhost">
            <persist>0</persist>
        </setInstallerVariable>
        <!-- Set the PG Current version(if exists) -->
        <setInstallerVariable name="PGCurrentVersion" value="PG_CURRENT_VERSION">
            <persist>1</persist>
        </setInstallerVariable>
        <!-- Set the PostGIS version(if exists) -->
        <setInstallerVariable name="PostGISVersion" value="">
            <persist>0</persist>
        </setInstallerVariable>
        <setInstallerVariable name="PostGISVersionInstalled" value="">
            <persist>0</persist>
        </setInstallerVariable>
	<!-- Set the PG Major Version -->
        <setInstallerVariable name="PGMajorVersion" value="PG_MAJOR_VERSION">
            <persist>1</persist>
        </setInstallerVariable>
        <!-- Set the default values -->
        <setInstallerVariable name="defaultuser" value="postgres"/>
        <setInstallerVariable name="defaultpassword" value=""/>
        <!-- Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultuser" value="postgres"/>
                <setInstallerVariable name="defaultpassword" value="postgres"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- WIN: Set the    pghome default value for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}\PostgreSQL\${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- LIN: Set the    pghome default value for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}/PostgreSQL/${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC: Set the    pghome default value for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="/Library/PostgreSQL/${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>

        <!-- WIN: Set the    pghome default value when pghome not set -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}\PostgreSQL\${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${pghome}</text>
                    <value/>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>

	<!-- LIN: Set the pghome default value when pghome not set -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}/PostgreSQL/${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${pghome}</text>
                    <value/>
                </compareText>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC: Set the pghome default value when pghome not set -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="/Library/PostgreSQL/${PGMajorVersion}"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${pghome}</text>
                    <value/>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
    </initializationActionList>
    <!-- Preinstallation actions -->
    <preInstallationActionList>

        <actionGroup>
            <actionList>
                <!-- Do not create uninstaller in case of extract-only mode -->
                <setInstallerVariable name="createUninstaller" value="0" persist="1"/>
                <setInstallerVariable name="branding" value="" persist="1"/>
                <setInstallerVariable name="pg_config" value="${installdir}/bin/pg_config"/>
                <setInstallerVariable name="pg_config" value="${installdir}\bin\pg_config.exe">
                  <ruleList>
                    <compareText logic="equals" text="${platform_name}" value="windows"/>
                  </ruleList>
                </setInstallerVariable>

                <setInstallerVariable name="parentlibdir" value="${installdir}"/>
                <setInstallerVariable name="libdir" value="${installdir}/lib"/>
                <setInstallerVariable name="sharedir" value="${installdir}/share"/>
                <setInstallerVariable name="mandir" value="${installdir}/man"/>
                <setInstallerVariable name="docdir" value="${installdir}/doc"/>

                <actionGroup>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <name>libdir</name>
                            <exec>${pg_config}</exec>
                            <execArgs>--libdir</execArgs>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>sharedir</name>
                            <exec>${pg_config}</exec>
                            <execArgs>--sharedir</execArgs>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>docdir</name>
                            <exec>${pg_config}</exec>
                            <execArgs>--docdir</execArgs>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>mandir</name>
                            <exec>${pg_config}</exec>
                            <execArgs>--mandir</execArgs>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromRegEx>
                            <name>parentlibdir</name>
                            <text>${libdir}</text>
                            <pattern>(.*)[/\\]lib</pattern>
                            <substitution>\1</substitution>
                        </setInstallerVariableFromRegEx>
                    </actionList>
                    <ruleList>
                        <fileExists path="${pg_config}"/>
                        <compareText logic="equals" text="${installer_ui}" value="unattended"/>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <isTrue value="${extract_mode}"/>
            </ruleList>
        </actionGroup>

        <!-- Do not perform the below actions in case of extract-only mode -->
        <actionGroup>
            <actionList>
                <!-- Abort installation if not super-user and not running in extract-only mode-->
                <throwError text="${msg(Installer.Warning.RootPrivileges)}">
                    <ruleList>
                       <isFalse value="${installer_is_root_install}"/>
                    </ruleList>
                </throwError>
                <setInstallerVariable name="windowsSoftwareRegistryPrefix" value="${vendor}\${fullName}" persist="1"/>

                <!-- Creates the ini file if not exits -->
                <touchFile path="/etc/postgres-reg.ini">
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </touchFile>
                <setInstallerVariable name="defaultpghome" value="${pghome}"/>
                <!-- WIN: Get the branding & Check Previous Installation of PostGIS -->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\PostGIS_PG${PGCurrentVersion}</key>
                            <name>Branding</name>
                            <variable>iBranding</variable>
                        </registryGet>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\PostGIS_PG${PGCurrentVersion}</key>
                            <name>Version</name>
                            <variable>PostGISVersion</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN & MAC: Get the branding & Check Previous Installation of PostGIS -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>Branding</key>
                            <variable>iBranding</variable>
                        </iniFileGet>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>Version</key>
                            <variable>PostGISVersion</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- Getting the Version Installed minus the buildnum -->
                <setInstallerVariableFromRegEx>
                    <name>PostGISVersionInstalled</name>
                    <text>${PostGISVersion}</text>
                    <pattern>([0-9]*)-[0-9]*$</pattern>
                    <substitution>\1</substitution>
                    <ruleList>
                       <compareText>
                          <logic>does_not_equal</logic>
                          <text>${PostGISVersion}</text>
                          <value/>
                       </compareText>
                    </ruleList>
                 </setInstallerVariableFromRegEx>
                 <!-- If there appears to be an existing installation, with no Branding value. -->
                 <!-- force the default value. Otherwise, set the branding to whatever we read, -->
                 <!-- or, set the default -->

                 <!-- Existing, old install (version, but no branding) -->
        	<setInstallerVariable>
        		<name>branding</name>
        		<persist>0</persist>
        		<value>PostgreSQL PG_MAJOR_VERSION</value>
        		<ruleList>
        			<compareText>
        				<logic>does_not_equal</logic>
        				<text>${postgisVersion}</text>
        				<value></value>
        			</compareText>
        			<compareText>
        				<logic>equals</logic>
        				<text>${iBranding}</text>
        				<value></value>
        			</compareText>
        		</ruleList>
        	</setInstallerVariable>

        	<!-- Existing install, with branding -->
        	<setInstallerVariable>
        		<name>branding</name>
        		<persist>0</persist>
        		<value>${iBranding}</value>
        		<ruleList>
        			<compareText>
        				<logic>does_not_equal</logic>
        				<text>${iBranding}</text>
        				<value></value>
        			</compareText>
        		</ruleList>
        	</setInstallerVariable>

        	<!-- New install, nothing set on the command line -->
        	<setInstallerVariable>
        		<name>branding</name>
        		<persist>0</persist>
        		<value>PostgreSQL PG_MAJOR_VERSION</value>
        		<ruleList>
        			<compareText>
        				<logic>equals</logic>
        				<text>${branding}</text>
        				<value></value>
        			</compareText>
        		</ruleList>
        	</setInstallerVariable>

                <logMessage>
                    <text>Using branding: ${branding}</text>
                </logMessage>
                <!-- WIN: Set Installation Directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\PostGIS_PG${PGCurrentVersion}</key>
                            <name>Location</name>
                            <variable>installdir</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${PostGISVersionInstalled}</text>
                            <value>PG_VERSION_POSTGIS</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN | MAC : Set Installation Directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>InstallationDirectory</key>
                            <variable>installdir</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${PostGISVersionInstalled}</text>
                            <value>PG_VERSION_POSTGIS</value>
                        </compareText>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- Exit the installation if the PostGIS version installed is not the same as the current Version -->
                <!-- For versions less than 1.4 -->
                <actionGroup>
                    <actionList>
                        <showWarning>
                            <text>${msg(postgis.incompatible.install.error)}</text>
                        </showWarning>
                        <exit>
                           <exitCode>0</exitCode>
                        </exit>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${PostGISVersionInstalled}</text>
                            <value>PG_VERSION_POSTGIS</value>
                        </compareText>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${PostGISVersionInstalled}</text>
                            <value/>
                        </compareText>
                        <compareVersions version1="${PostGISVersionInstalled}" version2="1.4.0" logic="less" />
                    </ruleList>
                </actionGroup>
                <!-- LIN | MAC : Exit the installation if the installdir is not valid (Unattended mode) -->
                <actionGroup>
                    <actionList>
                        <showWarning>
                            <text>${msg(postgis.installdir.pgerror)}</text>
                        </showWarning>
                        <exit>
                           <exitCode>0</exitCode>
                        </exit>
                    </actionList>
                    <ruleList>
                       <ruleGroup>
                       <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                               <fileTest>
                                  <path>${installdir}/bin/psql</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}/bin/createdb</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}/bin/createlang</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}/bin/pg_config</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                               <compareText>
                                  <text>${platform_name}</text>
                                  <logic>does_not_equal</logic>
                                  <value>windows</value>
                               </compareText>
                               <compareText>
                                  <logic>equals</logic>
                                  <text>${installer_ui}</text>
                                  <value>unattended</value>
                               </compareText>
                            </ruleList>
                        </ruleGroup>
                    </ruleList>
                </actionGroup>
                <!-- WIN: Exit the installation if the installdir is not valid (Unattended mode) -->
                <actionGroup>
                    <actionList>
                        <showWarning>
                            <text>${msg(postgis.installdir.pgerror)}</text>
                        </showWarning>
                        <exit>
                           <exitCode>0</exitCode>
                        </exit>
                    </actionList>
                    <ruleList>
                       <ruleGroup>
                       <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                               <fileTest>
                                  <path>${installdir}\bin\psql.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}\bin\createdb.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}\bin\createlang.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}\bin\pg_config.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                               <compareText>
                                  <text>${platform_name}</text>
                                  <logic>equals</logic>
                                  <value>windows</value>
                               </compareText>
                               <compareText>
                                  <logic>equals</logic>
                                  <text>${installer_ui}</text>
                                  <value>unattended</value>
                               </compareText>
                            </ruleList>
                        </ruleGroup>
                    </ruleList>
                </actionGroup>
                <!-- Exits the installation if the postgresql version is not compatible with postgis version (Unattended mode) -->
                <actionGroup>
                    <actionList>
                         <setInstallerVariableFromScriptOutput>
                            <name>pg_version_str</name>
                            <exec>${installdir}/bin/pg_config</exec>
                            <execArgs>--version</execArgs>
                            <workingDirectory>${installdir}/bin</workingDirectory>
                            <ruleList>
                               <compareText>
                                  <text>${platform_name}</text>
                                  <logic>does_not_equal</logic>
                                  <value>windows</value>
                               </compareText>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>pg_version_str</name>
                            <exec>${installdir}\bin\pg_config.exe</exec>
                            <execArgs>--version</execArgs>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                            <ruleList>
                               <compareText>
                                  <text>${platform_name}</text>
                                  <logic>equals</logic>
                                  <value>windows</value>
                               </compareText>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromRegEx>
                              <name>pg_version</name>
                              <text>${pg_version_str}</text>
                              <pattern>^PostgreSQL ([0-9].[0-9]).?[\w]*$</pattern>
                              <substitution>\1</substitution>
                              <ruleList>
                                 <compareText>
                                     <logic>does_not_equal</logic>
                                     <text>${pg_version_str}</text>
                                     <value/>
                                </compareText>
                              </ruleList>
                        </setInstallerVariableFromRegEx>
                        <showWarning>
                            <text>${msg(postgis.incompatible.pg.error)}</text>
                            <ruleList>
                              <compareText>
                                  <logic>does_not_equal</logic>
                                  <text>${pg_version}</text>
                                   <value>PG_MAJOR_VERSION</value>
                              </compareText>
                           </ruleList>
                        </showWarning>
                        <exit>
                           <exitCode>0</exitCode>
                           <ruleList>
                              <compareText>
                                  <logic>does_not_equal</logic>
                                  <text>${pg_version}</text>
                                   <value>PG_MAJOR_VERSION</value>
                              </compareText>
                           </ruleList>
                        </exit>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${installer_ui}</text>
                            <value>unattended</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- Setting the installation type as upgrade if previous installation found -->
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installationType" value="upgrade"/>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${PostGISVersionInstalled}</text>
                            <value>PG_VERSION_POSTGIS</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <setEnvironmentVariable name="LD_LIBRARY_PATH" value="${installdir}/lib"/>
                        <setInstallerVariableFromScriptOutput>
                            <name>libdir</name>
                            <exec>${installdir}/bin/pg_config</exec>
                            <execArgs>--libdir</execArgs>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>sharedir</name>
                            <exec>${installdir}/bin/pg_config</exec>
                            <execArgs>--sharedir</execArgs>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>docdir</name>
                            <exec>${installdir}/bin/pg_config</exec>
                            <execArgs>--docdir</execArgs>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>mandir</name>
                            <exec>${installdir}/bin/pg_config</exec>
                            <execArgs>--mandir</execArgs>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromRegEx>
                            <name>parentlibdir</name>
                            <text>${libdir}</text>
                            <pattern>(.*)[/\\]lib</pattern>
                            <substitution>\1</substitution>
                        </setInstallerVariableFromRegEx>
                    </actionList>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${installer_ui}</text>
                            <value>unattended</value>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${installationType}</text>
                            <value>upgrade</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </actionGroup>

    </preInstallationActionList>
    <!-- Post installation actions -->
    <postInstallationActionList>
        <!-- Do not perform the below actions in case of extract-only mode -->
        <actionGroup>
            <actionList>
                <!-- LIN & MAC: Write the PostGIS Version to INI File -->
                <actionGroup>
                    <actionList>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>Description</key>
                            <value>${msg(install.summary)}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>InstallationDirectory</key>
                            <value>${installdir}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>Version</key>
                            <value>${product_version}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostGIS_PG${PGCurrentVersion}</section>
                            <key>Branding</key>
                            <value>${branding}</value>
                        </iniFileSet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${platform_name}</text>
                            <logic>does_not_equal</logic>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <registrySet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\PostGIS_PG${PGCurrentVersion}</key>
                    <name>Branding</name>
                    <value>${branding}</value>
                    <ruleList>
                        <compareText>
                            <text>${platform_name}</text>
                            <logic>equals</logic>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </registrySet>

                <!-- LIN & MAC: Create Menu Shortcuts -->
                <actionGroup>
                    <actionList>
                        <runProgram>
                            <program>${installdir}/PostGIS/installer/PostGIS/createshortcuts.sh</program>
                            <programArguments>"${installdir}" "${PGMajorVersion}" "${productVersion}" "${branding}" "${docdir}"</programArguments>
                            <progressText>${msg(progress.text.creating.shortcuts)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <substitute>
                    <files>
                           ${sharedir}/contrib/postgis.sql
                           ${sharedir}/contrib/postgis_upgrade.sql
                           ${sharedir}/contrib/postgis_upgrade_12_to_14.sql
                           ${sharedir}/contrib/postgis_upgrade_13_to_14.sql
                           ${sharedir}/contrib/postgis_upgrade_14_minor.sql
                    </files>
                    <substitutionList>
                        <substitution>
                            <pattern>\$libdir</pattern>
                            <value>${libdir}</value>
                        </substitution>
                    </substitutionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </substitute>

                <!-- Create Template Spatial Database -->
                <runProgram>
                    <program>${installdir}/PostGIS/installer/PostGIS/createtemplatedb.sh</program>
                    <programArguments>${pghost} ${pgport} ${pguser} "${pgpassword.password}" "${pghome}" ${sharedir}</programArguments>
                    <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                    <ruleList>
                        <compareText>
                            <text>${templatedbexists}</text>
                            <logic>does_not_equal</logic>
                            <value>yes</value>
                        </compareText>
                        <compareValues>
                            <logic>does_not_equal</logic>
                            <value1>${PostGISVersionInstalled}</value1>
                            <value2>${productVersion}</value2>
                        </compareValues>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </runProgram>

                <setInstallerVariableFromRegEx>
                    <name>installdir_str</name>
                    <text>${installdir}</text>
                    <pattern>\\</pattern>
                    <substitution>/</substitution>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${installdir}</text>
                            <value/>
                        </compareText>
                        <compareText>
                         <logic>equals</logic>
                         <text>${platform_name}</text>
                         <value>windows</value>
                      </compareText>
                    </ruleList>
                </setInstallerVariableFromRegEx>

                <substitute>
                   <files>
                          ${installdir}\share\contrib\postgis.sql
                          ${installdir}\share\contrib\postgis_upgrade.sql
                          ${installdir}\share\contrib\postgis_upgrade_12_to_14.sql
                          ${installdir}\share\contrib\postgis_upgrade_13_to_14.sql
                          ${installdir}\share\contrib\postgis_upgrade_14_minor.sql
                   </files>
                   <substitutionList>
                      <substitution>
                         <pattern>\$libdir</pattern>
                         <value>${installdir_str}/bin</value>
                      </substitution>
                  </substitutionList>
                  <ruleList>
                      <compareText>
                         <logic>equals</logic>
                         <text>${platform_name}</text>
                         <value>windows</value>
                      </compareText>
                   </ruleList>
                </substitute>

                <!-- Create Template Spatial Database -->
                <actionGroup>
                    <actionList>
                        <setEnvironmentVariable name="PGHOST" value="${pghost}"/>
                        <setEnvironmentVariable name="PGUSER" value="${pguser}"/>
                        <setEnvironmentVariable name="PGPASSWORD" value="${pgpassword}"/>
                        <setEnvironmentVariable name="PGPORT" value="${pgport}"/>
                        <setEnvironmentVariable name="LD_LIBRARY_PATH" value="${installdir}/lib"/>
                        <runProgram>
                            <program>${pghome}\bin\createdb.exe</program>
                            <programArguments>template_postgis</programArguments>
                            <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>1</showMessageOnError>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                        </runProgram>
                        <runProgram>
                            <program>${pghome}\bin\createlang.exe</program>
                            <programArguments>plpgsql template_postgis</programArguments>
                            <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                        </runProgram>
                        <runProgram>
                            <program>${pghome}\bin\psql.exe</program>
                            <programArguments>-c "UPDATE pg_database SET datistemplate='t' WHERE datname='template_postgis'"</programArguments>
                            <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>1</showMessageOnError>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                        </runProgram>
                        <runProgram>
                            <program>${pghome}\bin\psql.exe</program>
                            <programArguments>-f "${sharedir}\contrib\postgis.sql" -d template_postgis</programArguments>
                            <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>1</showMessageOnError>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                        </runProgram>
                        <runProgram>
                            <program>${pghome}\bin\psql.exe</program>
                            <programArguments>-f "${sharedir}\contrib\spatial_ref_sys.sql" -d template_postgis</programArguments>
                            <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>1</showMessageOnError>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                        </runProgram>
                        <runProgram>
                            <program>${pghome}\bin\psql.exe</program>
                            <programArguments>-f "${sharedir}\contrib\postgis_comments.sql" -d template_postgis</programArguments>
                            <progressText>${msg(progress.text.creating.templatedb)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>1</showMessageOnError>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${templatedbexists}</text>
                            <logic>does_not_equal</logic>
                            <value>yes</value>
                        </compareText>
                        <compareValues>
                            <logic>does_not_equal</logic>
                            <value1>${PostGISVersionInstalled}</value1>
                            <value2>${productVersion}</value2>
                        </compareValues>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </actionGroup>
        <showInfo text="${msg(postgis.upgrade.info)}" >
            <ruleList>
                <compareValues>
                    <logic>does_not_equal</logic>
                    <value1>${PostGISVersionInstalled}</value1>
                    <value2>${productVersion}</value2>
                </compareValues>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${PostGISVersionInstalled}</text>
                    <value/>
                </compareText>
            </ruleList>
        </showInfo>    
                         
    </postInstallationActionList>

    <!-- preUninstallation actions -->
    <preUninstallationActionList>
        <!-- LIN & MAC: Unsetting the PostGIS values in the ini file -->
        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>PostGIS_PG${PGCurrentVersion}</section>
                    <key>Description</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>PostGIS_PG${PGCurrentVersion}</section>
                    <key>InstallationDirectory</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>PostGIS_PG${PGCurrentVersion}</section>
                    <key>Version</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>PostGIS_PG${PGCurrentVersion}</section>
                    <key>Branding</key>
                    <value/>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- LIN : Remove Menu shortcuts -->
        <actionGroup>
            <actionList>
                <runProgram>
                    <program>${installdir}/PostGIS/installer/PostGIS/removeshortcuts.sh</program>
                    <programArguments>"${installdir}" "${productVersion}" "PG_MAJOR_VERSION" "${branding}"</programArguments>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                </runProgram>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC : Remove Menu shortcuts -->
        <actionGroup>
            <actionList>
                <deleteFile>
                    <path>/Applications/${branding}/PostGIS</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${branding}</text>
                    <value>PostgreSQL ${PGMajorVersion}</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>

        <actionGroup>
            <actionList>
                <deleteFile>
                    <path>/Applications/${branding}</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${branding}</text>
                    <value>PostgreSQL ${PGMajorVersion}</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>

    </preUninstallationActionList>
    <!-- Post un-installation actions -->
    <postUninstallationActionList>
        <!-- Promt user about the database and role drop/deletion -->
        <showInfo>
            <text>${msg(db.drop.info)}</text>
        </showInfo>
    </postUninstallationActionList>
    <!-- Components -->
    <componentList>
        <component>
            <name>PostGIS</name>
            <description>PostGIS</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
	        <!-- MAC: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesbinosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/bin</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${parentlibdir}</destination>
                    <name>programfileslibosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/lib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${sharedir}</destination>
                    <name>programfilesshareosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/share/contrib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${mandir}</destination>
                    <name>programfilesmanosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/man/man1</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${docdir}</destination>
                    <name>programfilesdocosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/doc/postgis</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>programfilesutilsjavaosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/utils</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/PostGIS/java</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installation Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>installfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Launch And Menu Scripts</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>menuandlaunchfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- LINUX: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesbinlinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/bin</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${parentlibdir}</destination>
                    <name>programfilesliblinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/lib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${sharedir}</destination>
                    <name>programfilessharelinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/share/contrib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${mandir}</destination>
                    <name>programfilesmanlinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/man/man1</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${docdir}</destination>
                    <name>programfilesdoclinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/doc/postgis</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>programfilesutilsjavalinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/utils</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/PostGIS/java</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installation Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>installfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Launch And Menu Scripts</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>menuandlaunchfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
	        <!-- LINUX-X64: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesbinlinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/bin</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${parentlibdir}</destination>
                    <name>programfilesliblinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/lib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${sharedir}</destination>
                    <name>programfilessharelinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/share/contrib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${mandir}</destination>
                    <name>programfilesmanlinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/man/man1</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${docdir}</destination>
                    <name>programfilesdoclinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/doc/postgis</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>programfilesutilsjavalinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/utils</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/PostGIS/java</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installation Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>installfileslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Launch And Menu Scripts</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>menuandlaunchfileslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- Windows: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesbinwindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/PostGIS/bin</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${sharedir}</destination>
                    <name>programfilessharewindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/PostGIS/share/contrib</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${mandir}</destination>
                    <name>programfilesmanwindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/PostGIS/man/man1</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${docdir}</destination>
                    <name>programfilesdocwindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/PostGIS/doc/postgis</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>programfilesutilsjavawindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/PostGIS/utils</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/windows/PostGIS/java</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installation Files</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>installfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Launch And Menu Scripts</description>
                    <destination>${installdir}/PostGIS</destination>
                    <name>menuandlaunchfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
            <!-- WIN: Start Menu -->
            <startMenuShortcutList>
                 <!-- Launch PostGIS -->
                 <startMenuFolder>
                    <name>PostGIS</name>
                    <platforms>windows</platforms>
                    <startMenuShortcutList>
                       <startMenuLinkShortcut>
                           <comment>PostGIS Documentation</comment>
                           <name>PostGIS Documentation</name>
                           <runInTerminal>0</runInTerminal>
                           <url>file://${docdir}/postgis/postgis.html</url>
                           <windowsIcon>${installdir}\PostGIS\scripts\images\pg-launchPostGISDocs.ico</windowsIcon>
                           <ruleList>
                               <isFalse value="${extract_mode}"/>
                           </ruleList>
                        </startMenuLinkShortcut>
                        <startMenuLinkShortcut>
                           <comment>PostGIS JDBC Documentation</comment>
                           <name>PostGIS JDBC Documentation</name>
                           <runInTerminal>0</runInTerminal>
                           <url>file://${docdir}/postgis/jdbc/index.html</url>
                           <windowsIcon>${installdir}\PostGIS\scripts\images\pg-launchPostGISDocs.ico</windowsIcon>
                           <ruleList>
                               <isFalse value="${extract_mode}"/>
                           </ruleList>
                        </startMenuLinkShortcut>
                    </startMenuShortcutList>
                 </startMenuFolder>
            </startMenuShortcutList>
        </component>
    </componentList>
    <parameterList>
        <booleanParameter name="extract_mode" cliOptionName="extract-only" default="0" ask="1" cliOptionShow="1"/>
        <booleanParameter name="admin_rights" cliOptionName="require-admin" default="0" ask="0" cliOptionShow="0"/>
	<stringParameter name="originalplatform" ask="0" cliOptionShow="0"/>
	<stringParameter name="branding" cliOptionName="branding" ask="0" cliOptionShow="0"/>
        <!-- PostgreSQL Server Details Verification Page -->
        <parameterGroup>
            <name>pgdetails</name>
            <title>${msg(pgplus.details.title)}</title>
            <explanation>${msg(pgplus.details.explanation)}</explanation>
            <value/>
            <default/>
            <parameterList>
                <!-- Postgres User -->
                <stringParameter>
                    <name>pguser</name>
                    <description>User Name</description>
                    <explanation/>
                    <value/>
                    <default>${defaultuser}</default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>40</width>
                </stringParameter>
	            <!-- Postgres User Password -->
                <passwordParameter>
                    <name>pgpassword</name>
                    <title>Password</title>
                    <description>Password</description>
                    <explanation/>
                    <value/>
                    <default>${defaultpassword}</default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <askForConfirmation>0</askForConfirmation>
                    <descriptionRetype/>
                    <width>40</width>
                </passwordParameter>
                <!-- Postgres Port(Default 5432) -->
                <stringParameter>
                    <name>pgport</name>
                    <description>Port</description>
                    <explanation/>
                    <value/>
                    <default>5432</default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>40</width>
                </stringParameter>
                <!-- Postgres Home Directory -->
                <directoryParameter>
                    <name>pghome</name>
                    <description>PostgreSQL Home Directory</description>
                    <explanation/>
                    <value/>
                    <default>${installdir}</default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <mustBeWritable>0</mustBeWritable>
                    <mustExist>0</mustExist>
                    <ask>0</ask>
                    <width>40</width>
                </directoryParameter>
                <directoryParameter>
                    <name>pgdatabase</name>
                    <description>PostgreSQL Database</description>
                    <explanation/>
                    <value/>
                    <default>postgres</default>
                    <ask>0</ask>
                </directoryParameter>
	        <!-- PostgreSQL Server Installed? -->
                <booleanParameter>
                    <name>pginstalled</name>
                    <description>PostgreSQL Installed</description>
                    <explanation/>
                    <value>${pginstalled}</value>
                    <default>0</default>
                    <ask>0</ask>
                    <displayStyle>checkbox-right</displayStyle>
                </booleanParameter>
	            <!-- Default Postgres Home -->
                <stringParameter>
                    <name>defaultpghome</name>
                    <description/>
                    <explanation/>
                    <value/>
                    <default/>
                    <ask>0</ask>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>40</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <compareValues>
                    <logic>does_not_equal</logic>
                    <value1>${PostGISVersionInstalled}</value1>
                    <value2>${productVersion}</value2>
                </compareValues>
                <isFalse value="${extract_mode}"/>
            </ruleList>
            <!-- Checking the validity of PostgreSQL Server Details -->
            <validationActionList>
                <actionGroup>
                    <actionList>
                        <throwError>
                            <text>${msg(pgplus.blank.error)}</text>
                        </throwError>
                    </actionList>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareText>
                            <text>${pgport}</text>
                            <logic>equals</logic>
                            <value/>
                        </compareText>
                        <compareText>
                            <text>${pguser}</text>
                            <logic>equals</logic>
                            <value/>
                        </compareText>
                        <compareText>
                            <text>${pgpassword}</text>
                            <logic>equals</logic>
                            <value/>
                        </compareText>
                        <compareText>
                            <text>${pghome}</text>
                            <logic>equals</logic>
                            <value/>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <throwError>
                    <text>${msg(pgplus.port.error)}</text>
                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                        <compareValues>
                            <value1>${pgport}</value1>
                            <logic>less_or_equal</logic>
                            <value2>0</value2>
                        </compareValues>
                        <compareValues>
                            <value1>${pgport}</value1>
                            <logic>greater_or_equal</logic>
                            <value2>65535</value2>
                        </compareValues>
                    </ruleList>
                </throwError>
	            <!-- Creating a temporary directory -->
                <createDirectory path="${system_temp_directory}/${product_fullname}"/>
                <!-- Set variable psql_path -->
                <setInstallerVariable name="psql_path" value="${pghome}/bin/psql">
                    <ruleList>
                        <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable name="psql_path" value="${pghome}\bin\psql.exe">
                    <ruleList>
                        <compareText logic="equals" text="${platform_name}" value="windows"/>
                    </ruleList>
                </setInstallerVariable>

                <setEnvironmentVariable name="PGHOST" value="${pghost}"/>
                <setEnvironmentVariable name="PGUSER" value="${pguser}"/>
                <setEnvironmentVariable name="PGPASSWORD" value="${pgpassword}"/>
                <setEnvironmentVariable name="PGPORT" value="${pgport}"/>
                <setEnvironmentVariable name="PGDATABASE" value="${pgdatabase}"/>
                <setEnvironmentVariable name="LD_LIBRARY_PATH" value="${pghome}/lib">
                    <ruleList>
                        <compareText logic="contains" text="${platform_name}" value="linux"/>
                    </ruleList>
                </setEnvironmentVariable>

	        <!-- START: validate the PostgreSQL Server Details -->
                <setInstallerVariable name="connection" value=""/>
                <setInstallerVariable name="dbexist" value=""/>

                <!-- Check connection -->
                <setInstallerVariableFromScriptOutput name="connection"
                                                      exec="${psql_path}"
                                                      execArgs="-l"
                                                      workingDirectory="${pghome}/bin"
                                                      abortOnError="0"
                                                      showMessageOnError="0" /> 

                <!-- If it fails for postgres database, fall back to edb -->
                <actionGroup>
                    <actionList>
                         <setEnvironmentVariable name="PGDATABASE" value="edb" />
                         <!-- Check connection -->
                         <setInstallerVariableFromScriptOutput name="connection"
                                                       exec="${psql_path}"
                                                       execArgs="-l ${env(PGDATABASE)}"
                                                       workingDirectory="${system_temp_directory}/${product_fullname}/instscripts/bin"
                                                       abortOnError="0"
                                                       showMessageOnError="0" /> 
                    </actionList>
                    <ruleList>
                         <compareText text="${program_stderr}" logic="does_not_equal" value="" />
                    </ruleList>
                </actionGroup>
                <!-- If it fails for edb database, fall back to template1 -->
                <actionGroup>
                    <actionList>
                         <setEnvironmentVariable name="PGDATABASE" value="template1" />
                         <!-- Check connection -->
                         <setInstallerVariableFromScriptOutput name="connection"
                                                       exec="${psql_path}"
                                                       execArgs="-l ${env(PGDATABASE)}"
                                                       workingDirectory="${system_temp_directory}/${product_fullname}/instscripts/bin"
                                                       customErrorMessage="${program_stderr}" />
                    </actionList>
                    <ruleList>
                         <compareText text="${program_stderr}" logic="does_not_equal" value="" />
                    </ruleList>
                </actionGroup>

                <!-- Check the database 'template_postgis' exits -->
                <setInstallerVariableFromScriptOutput name="dbexist"
                                                      exec="${psql_path}"
                                                      execArgs="-t -c &quot;SELECT d.datname FROM pg_catalog.pg_database d WHERE d.datname='template_postgis'&quot;"
                                                      workingDirectory="${pghome}/bin"
                                                      abortOnError="0"
                                                      showMessageOnError="0"/>

                <!-- Inform the user about the existing database and user -->
                <actionGroup>
                    <actionList>
                        <showQuestion>
                            <text>${msg(templatedb.found.info)}</text>
                            <variable>response</variable>
                        </showQuestion>
                        <setInstallerVariable name="templatedbexists" value="yes"/>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${dbexist}</text>
                            <logic>does_not_equal</logic>
                            <value/>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- Exit the installation if the user wants to quit -->
                <actionGroup>
                    <actionList>
                        <exit>
                            <exitCode>0</exitCode>
                        </exit>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <value>no</value>
                            <text>${response}</text>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </validationActionList>
        </parameterGroup>
        <!-- Install Directory -->
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value>${defaultpghome}</value>
            <default/>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${PostGISVersionInstalled}</text>
                    <value>PG_VERSION_POSTGIS</value>
                </compareText>
            </ruleList>
            <!-- Validating whether installdir is empty -->
	    <validationActionList>
		<actionGroup>
		    <actionList>
			<setInstallerVariable name="installdir" value="${defaultpghome}" />
                        <throwError>
                            <text>${msg(postgis.installdir.empty)}</text>
                        </throwError>
		    </actionList>
		    <ruleList>
			<compareText>
			    <text>${installdir}</text>
			    <logic>equals</logic>
			    <value />
                        </compareText>
		    </ruleList>
		</actionGroup>
	    </validationActionList>
            <validationActionList>
                <!-- Validating whether installdir contains whitespaces (Linux) -->
                <actionGroup>
                   <actionList>
                       <setInstallerVariable name="installdir" value="${default_installdir}" />
                       <showWarning>
                          <text>${msg(postgis.installdir.error)}</text>
                       </showWarning>
                       <setInstallerVariable name="next_page" value="installdir"/>
                   </actionList>
                   <ruleList>
                     <regExMatch>
                         <text>${installdir}</text>
                         <logic>does_not_match</logic>
                         <pattern>^/([0-9a-zA-Z_/\.\-]*)$</pattern>
                     </regExMatch>
                     <compareText>
                         <text>${platform_name}</text>
                         <logic>does_not_equal</logic>
                         <value>windows</value>
                     </compareText>
                  </ruleList>
                </actionGroup>
                <!-- Validating whether installdir is valid (Windows) -->
                <actionGroup>
                   <actionList>
                       <setInstallerVariable name="installdir" value="${default_installdir}" />
                       <showWarning>
                          <text>${msg(postgis.installdir.error)}</text>
                       </showWarning>
                       <setInstallerVariable name="next_page" value="installdir"/>
                   </actionList>
                   <ruleList>
                     <regExMatch>
                         <text>${installdir}</text>
                         <logic>does_not_match</logic>
                         <pattern>^([a-zA-Z]:)\\([0-9a-zA-Z_\\\s\.\-\(\)]*)$</pattern>
                     </regExMatch>
                     <compareText>
                         <text>${platform_name}</text>
                         <logic>equals</logic>
                         <value>windows</value>
                     </compareText>
                  </ruleList>
                </actionGroup>
            </validationActionList>
            <validationActionList>
                <actionGroup>
                    <actionList>
			<setInstallerVariable name="installdir" value="${defaultpghome}" />
                        <throwError>
                            <text>${msg(postgis.installdir.pgerror)}</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <ruleGroup>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                               <fileTest>
                                  <path>${installdir}/bin/psql</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}/bin/createdb</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}/bin/createlang</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}/bin/pg_config</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                               <compareText>
                                  <text>${platform_name}</text>
                                  <logic>does_not_equal</logic>
                                  <value>windows</value>
                               </compareText>
                               <isFalse value="${extract_mode}"/>
                            </ruleList>
                        </ruleGroup>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installdir" value="${defaultpghome}" />
                        <throwError>
                            <text>${msg(postgis.installdir.pgerror)}</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <ruleGroup>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                               <fileTest>
                                  <path>${installdir}\bin\psql.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}\bin\createdb.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}\bin\createlang.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                               <fileTest>
                                  <path>${installdir}\bin\pg_config.exe</path>
                                  <condition>not_exists</condition>
                               </fileTest>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                               <compareText>
                                  <text>${platform_name}</text>
                                  <logic>equals</logic>
                                  <value>windows</value>
                               </compareText>
                               <isFalse value="${extract_mode}"/>
                            </ruleList>
                        </ruleGroup>
                    </ruleList>
                </actionGroup>
            </validationActionList>
            <validationActionList>
                <actionGroup>
                    <actionList>
                        <createDirectory path="${system_temp_directory}/${product_fullname}" />
                        <unpackFile>
                            <component>PostGIS</component>
                            <destination>${system_temp_directory}/${product_fullname}/check-pgversion.sh</destination>
                            <folder>installfilesosx</folder>
                            <origin>installer/PostGIS/check-pgversion.sh</origin>
                            <ruleList>
                                <compareText>
                                   <text>${platform_name}</text>
                                   <logic>equals</logic>
                                   <value>osx</value>
                                </compareText>
                            </ruleList>
                        </unpackFile>
                        <unpackFile>
                            <component>PostGIS</component>
                            <destination>${system_temp_directory}/${product_fullname}/check-pgversion.sh</destination>
                            <folder>installfileslinux</folder>
                            <origin>installer/PostGIS/check-pgversion.sh</origin>
                            <ruleList>
                                <compareText>
                                   <text>${platform_name}</text>
                                   <logic>equals</logic>
                                   <value>linux</value>
                                </compareText>
                            </ruleList>
                        </unpackFile>
                        <unpackFile>
                            <component>PostGIS</component>
                            <destination>${system_temp_directory}/${product_fullname}/check-pgversion.sh</destination>
                            <folder>installfileslinux-x64</folder>
                            <origin>installer/PostGIS/check-pgversion.sh</origin>
                            <ruleList>
                                <compareText>
                                   <text>${platform_name}</text>
                                   <logic>equals</logic>
                                   <value>linux-x64</value>
                                </compareText>
                            </ruleList>
                        </unpackFile>
                        <setInstallerVariableFromScriptOutput>
                            <name>pg_version</name>
                            <exec>${system_temp_directory}/${product_fullname}/check-pgversion.sh</exec>
                            <execArgs>"${installdir}"</execArgs>
                            <workingDirectory>${system_temp_directory}/${product_fullname}</workingDirectory>
                            <ruleList>
                                <compareText>
                                   <text>${platform_name}</text>
                                   <logic>does_not_equal</logic>
                                   <value>windows</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>pg_version_str</name>
                            <exec>${installdir}\bin\pg_config.exe</exec>
                            <execArgs>--version</execArgs>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                            <ruleList>
                                <compareText>
                                   <text>${platform_name}</text>
                                   <logic>equals</logic>
                                   <value>windows</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromRegEx>
                            <name>pg_version</name>
                            <text>${pg_version_str}</text>
                            <pattern>^PostgreSQL ([0-9].[0-9]).?[\w]*$</pattern>
                            <substitution>\1</substitution>
                            <ruleList>
                               <compareText>
                                   <logic>does_not_equal</logic>
                                   <text>${pg_version_str}</text>
                                   <value/>
                              </compareText>
                              <compareText>
                                 <text>${platform_name}</text>
                                 <logic>equals</logic>
                                 <value>windows</value>
                              </compareText>
                            </ruleList>
                        </setInstallerVariableFromRegEx>
                    </actionList>
                    <ruleList>
                        <isFalse value="${extract_mode}"/>
                    </ruleList>
                </actionGroup>
            </validationActionList>
            <validationActionList>
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installdir" value="${defaultpghome}" />
                        <throwError>
                            <text>${msg(postgis.incompatible.pg.error)}</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${pg_version}</text>
                            <value>PG_MAJOR_VERSION</value>
                        </compareText>
                        <isFalse value="${extract_mode}"/>
                    </ruleList>
                </actionGroup>
            </validationActionList>
            <postShowPageActionList>
                <setEnvironmentVariable name="LD_LIBRARY_PATH" value="${installdir}/lib"/>
                <setInstallerVariableFromScriptOutput>
                    <name>libdir</name>
                    <exec>${installdir}/bin/pg_config</exec>
                    <execArgs>--libdir</execArgs>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <setInstallerVariable name="libdir" value="${installdir}/lib"/>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <setInstallerVariableFromScriptOutput>
                    <name>sharedir</name>
                    <exec>${installdir}/bin/pg_config</exec>
                    <execArgs>--sharedir</execArgs>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <setInstallerVariable name="sharedir" value="${installdir}/share"/>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <setInstallerVariableFromScriptOutput>
                    <name>docdir</name>
                    <exec>${installdir}/bin/pg_config</exec>
                    <execArgs>--docdir</execArgs>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <setInstallerVariable name="docdir" value="${installdir}/doc"/>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <setInstallerVariableFromScriptOutput>
                    <name>mandir</name>
                    <exec>${installdir}/bin/pg_config</exec>
                    <execArgs>--mandir</execArgs>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <setInstallerVariable name="mandir" value="${installdir}/man"/>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <setInstallerVariableFromRegEx>
                    <name>parentlibdir</name>
                    <text>${libdir}</text>
                    <pattern>(.*)[/\\]lib</pattern>
                    <substitution>\1</substitution>
                </setInstallerVariableFromRegEx>
            </postShowPageActionList>
        </directoryParameter>

	<!-- Explain that we're using an existing installation directory -->
	<labelParameter>
            <name>upgrade</name>
            <title>${msg(upgrade.existing.installation.title)}</title>
            <description>${msg(upgrade.existing.installation.description)}</description>
            <ruleList>
		<compareText>
                    <logic>equals</logic>
                    <text>${PostGISVersionInstalled}</text>
                    <value>PG_VERSION_POSTGIS</value>
                </compareText>
            </ruleList>
        </labelParameter>
    </parameterList>
</project>
