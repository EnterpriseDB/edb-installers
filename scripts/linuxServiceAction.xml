<actionDefinition name="linuxServiceAction">

  <parameterList>
    <!-- Name of the service -->
    <stringParameter name="name" allowEmptyValue="0"/>

    <!-- Action -->
    <stringParamter name="action" allowEmptyValue="0"/>

    <!-- Use systemd service (DEFAULT: false) -->
    <booleanParameter name="systemdBooted" default="false" allowEmptyValue="0"/>

    <!-- Use Sys V init service, if not found systemd service (DEFAULT: true) -->
    <booleanParameter name="trySysvinit" default="true" allowEmptyValue="0"/>

    <!-- Explanation -->
    <stringParameter name="progressText" allowEmptyValue="1"/>

    <!-- Abort on error -->
    <booleanParameter name="abortOnError" default="0" allowEmptyValue="0"/>

    <!-- custom error message -->
    <stringParameter name="customErrorMessage" allowEmptyValue="1"/>

    <!-- Show message on error -->
    <booleanParameter name="showMessageOnError" default="1" allowEmptyValue="0"/>

    <!-- exit code -->
    <stringParameter name="serviceExitCode" default="program_exit_code" allowEmptyValue="0"/>

    <!-- stdout messages -->
    <stringParameter name="serviceStdout" default="program_stdout" allowEmptyValue="0"/>

    <!-- stderr messages -->
    <stringParameter name="serviceStderr" default="program_stderr" allowEmptyValue="0"/>

  </parameterList>

  <actionList>
    <actionGroup>
      <ruleList>
        <compareText logic="contains" text="${platform_name}" value="linux"/>
      </ruleList>
      <actionList>
        <globalVariables names="${serviceExitCode} ${serviceStdout} ${serviceStderr}"/>

        <setInstallerVariable name="systemd_script_found" value="false"/>

        <if>
          <conditionRuleList>
            <!-- Allowed actions are -->
            <compareText text="${action}" value="start" nocase="1"/>
            <compareText text="${action}" value="stop" nocase="1"/>
            <compareText text="${action}" value="restart" nocase="1"/>
            <compareText text="${action}" value="status" nocase="1"/>
            <compareText text="${action}" value="reload" nocase="1"/>
          </conditionRuleList>
          <actionList>

            <if>
              <conditionRuleList>
                <fileTest condition="exists" path="/usr/lib/systemd/system/${name}.service"/>
                <fileTest condition="is_file" path="/usr/lib/systemd/system/${name}.service"/>
                <isTrue value="${systemdBooted}"/>
              </conditionRuleList>
              <actionList>

                <!-- Found the server script no need to try the Sys V Init script now -->
                <setInstallerVariable name="try_sysvinit" value="false"/>
                <setInstallerVariable name="systemd_script_found" value="true"/>

                <!-- Execute the service action (systemd) -->
                <runProgram program="/usr/bin/systemctl"
                  programArguments="${action} &quot;${name}.service&quot;"
                  abortOnError="0" showMessageOnError="0"
                  progressText="${progress_text}">
                  <onErrorActionList>
                    <!-- Service failed to run action, we shouldn't try the sysvinit
                         script now -->
                    <setInstallerVariable name="installer_exit_code" value="${program_exit_code}"/>
                    <setInstallerVariable name="${serviceExitCode}" value="${program_exit_code}"/>
                    <setInstallerVariable name="${serviceStderr}" value="${program_stderr}"/>
                    <setInstallerVariable name="${serviceStdout}" value="${program_stdout}"/>

                    <setInstallerVariable name="customErrorMessage" value="${msg(error.run.linux.service.failed)}">
                      <ruleList>
                        <compareText text="${customErrorMessage}" value=""/>
                      </ruleList>
                    </setInstallerVariable>

                    <throwError text="${customErrorMessage}" abortOnError="${abortOnError}">
                      <ruleList>
                        <isTrue value="${showMessageOnError}"/>
                      </ruleList>
                    </throwError>

                    <exit exitCode="${installer_exit_code}">
                      <ruleList>
                        <isTrue value="${abortOnError}"/>
                      </ruleList>
                    </exit>
                  </onErrorActionList>
                </runProgram>
              </actionList>
              <elseActionList>

                <!-- Forcefully use sysvinit script to start linux, when
                     systemdBooted is false -->
                <setInstallerVariable name="try_sysvinit" value="true">
                  <ruleList>
                    <isFalse value="${systemdBooted}"/>
                  </ruleList>
                </setInstallerVariable>

              </elseActionList>
            </if>

            <if>
              <conditionRuleList>
                <fileTest condition="exists" path="/etc/init.d/${name}"/>
                <fileTest condition="is_file" path="/etc/init.d/${name}"/>
                <fileTest condition="executable" path="/etc/init.d/${name}"/>
              </conditionRuleList>
              <actionList>
                <setInstallerVariable name="systemd_script_found" value="true"/>

                <!-- Execute the service action -->
                <runProgram program="/etc/init.d/${name}"
                  programArguments="${action}"
                  abortOnError="0" showMessageOnError="0"
                  progressText="${progress_text}">
                  <onErrorActionList>
                    <setInstallerVariable name="installer_exit_code" value="${program_exit_code}"/>
                    <setInstallerVariable name="${serviceExitCode}" value="${program_exit_code}"/>
                    <setInstallerVariable name="${serviceStderr}" value="${program_stderr}"/>
                    <setInstallerVariable name="${serviceStdout}" value="${program_stdout}"/>

                    <setInstallerVariable name="customErrorMessage" value="${msg(error.run.linux.service.failed)}">
                      <ruleList>
                        <compareText text="${customErrorMessage}" value=""/>
                      </ruleList>
                    </setInstallerVariable>

                    <throwError text="${customErrorMessage}" abortOnError="${abortOnError}">
                      <ruleList>
                        <isTrue value="${showMessageOnError}"/>
                      </ruleList>
                    </throwError>

                    <exit exitCode="${installer_exit_code}">
                      <ruleList>
                        <isTrue value="${abortOnError}"/>
                      </ruleList>
                    </exit>
                  </onErrorActionList>
                  <ruleList>
                    <isTrue value="${try_sysvinit}"/>
                  </ruleList>
                </runProgram>
              </actionList>
            </if>

            <!-- systemd/SysVInit service script not found -->
            <actionGroup>
              <ruleList>
                <isFalse value="${systemd_script_found}"/>
              </ruleList>
              <actionList>
                <setInstallerVariable name="installer_exit_code" value="127"/>
                <setInstallerVariable name="${serviceExitCode}" value="127"/>
                <setInstallerVariable name="${serviceStderr}" value="${msg(error.run.linux.service.not.found)}"/>
                <setInstallerVariable name="${serviceStdout}" value=""/>

                <setInstallerVariable name="customErrorMessage" value="${msg(error.run.linux.service.not.found)}">
                  <ruleList>
                    <compareText text="${customErrorMessage}" value=""/>
                  </ruleList>
                </setInstallerVariable>

                <throwError text="${customErrorMessage}" abortOnError="${abortOnError}">
                  <ruleList>
                    <isTrue value="${showMessageOnError}"/>
                  </ruleList>
                </throwError>

                <exit exitCode="${installer_exit_code}">
                  <ruleList>
                    <isTrue value="${abortOnError}"/>
                  </ruleList>
                </exit>
              </actionList>
            </actionGroup>

          </actionList>
          <elseActionList>

            <!-- Not a valid action found -->
            <setInstallerVariable name="${serviceExitCode}" value="-1"/>
            <setInstallerVariable name="${serviceStderr}" value="${msg(error.invalid.service.action)}"/>
            <setInstallerVariable name="${serviceStdout}" value=""/>

            <setInstallerVariable name="customErrorMessage" value="${msg(error.invalid.service.action)}">
              <ruleList>
                <compareText text="${customErrorMessage}" value=""/>
              </ruleList>
            </setInstallerVariable>
            <throwError text="${customErrorMessage}" abortOnError="${abortOnError}">
              <ruleList>
                <isTrue value="${showMessageOnError}"/>
              </ruleList>
            </throwError>

          </elseActionList>
        </if>
      </actionList>
    </actionGroup>
  </actionList>

</actionDefinition>
