/* soapStub.h
   Generated by gSOAP 2.7.12 from testws.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (7)
/* xsd:boolean */
enum xsd__boolean {xsd__boolean__false_ = 0, xsd__boolean__true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_ArrayOf_USCORExsd_USCOREstring
#define SOAP_TYPE_ArrayOf_USCORExsd_USCOREstring (8)
/* SOAP encoded array of xsd:string schema type: */
struct ArrayOf_USCORExsd_USCOREstring
{
	char **__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE__Struct_1
#define SOAP_TYPE__Struct_1 (11)
/* SOAP encoded array of xsd:string schema type: */
struct _Struct_1
{
	char **__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ArrayOfArrayOf_USCORExsd_USCOREstring
#define SOAP_TYPE_ArrayOfArrayOf_USCORExsd_USCOREstring (10)
/* SOAP encoded array of xsd:string[] schema type: */
struct ArrayOfArrayOf_USCORExsd_USCOREstring
{
	struct _Struct_1 *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ns2__isConnectedResponse
#define SOAP_TYPE_ns2__isConnectedResponse (15)
/* ns2:isConnectedResponse */
struct ns2__isConnectedResponse
{
	enum xsd__boolean *_isConnectedReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns2__isConnected
#define SOAP_TYPE_ns2__isConnected (16)
/* ns2:isConnected */
struct ns2__isConnected
{
	char *_gu;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__testWebServiceResponse
#define SOAP_TYPE_ns2__testWebServiceResponse (18)
/* ns2:testWebServiceResponse */
struct ns2__testWebServiceResponse
{
	char **testWebServiceReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__testWebService
#define SOAP_TYPE_ns2__testWebService (19)
/* ns2:testWebService */
struct ns2__testWebService
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns2__createNewUserResponse
#define SOAP_TYPE_ns2__createNewUserResponse (22)
/* ns2:createNewUserResponse */
struct ns2__createNewUserResponse
{
	char **_createNewUserReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__createNewUser
#define SOAP_TYPE_ns2__createNewUser (23)
/* ns2:createNewUser */
struct ns2__createNewUser
{
	struct ArrayOf_USCORExsd_USCOREstring *_params;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns2__validateUserResponse
#define SOAP_TYPE_ns2__validateUserResponse (25)
/* ns2:validateUserResponse */
struct ns2__validateUserResponse
{
	char **_validateUserReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__validateUser
#define SOAP_TYPE_ns2__validateUser (26)
/* ns2:validateUser */
struct ns2__validateUser
{
	struct ArrayOf_USCORExsd_USCOREstring *_params;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns2__getDynaTuneInfoResponse
#define SOAP_TYPE_ns2__getDynaTuneInfoResponse (27)
/* ns2:getDynaTuneInfoResponse */
struct ns2__getDynaTuneInfoResponse
{
	struct ArrayOfArrayOf_USCORExsd_USCOREstring *_getDynaTuneInfoReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns2__getDynaTuneInfo
#define SOAP_TYPE_ns2__getDynaTuneInfo (31)
/* ns2:getDynaTuneInfo */
struct ns2__getDynaTuneInfo
{
	struct ArrayOf_USCORExsd_USCOREstring *_params;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ns2__isUserValidatedResponse
#define SOAP_TYPE_ns2__isUserValidatedResponse (33)
/* ns2:isUserValidatedResponse */
struct ns2__isUserValidatedResponse
{
	enum xsd__boolean *_isUserValidatedReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns2__isUserValidated
#define SOAP_TYPE_ns2__isUserValidated (34)
/* ns2:isUserValidated */
struct ns2__isUserValidated
{
	char *_nU;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (35)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (36)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (38)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (41)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (42)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns2__isConnected(struct soap*, char *_gu, enum xsd__boolean *_isConnectedReturn);

SOAP_FMAC5 int SOAP_FMAC6 ns2__testWebService(struct soap*, char **testWebServiceReturn);

SOAP_FMAC5 int SOAP_FMAC6 ns2__createNewUser(struct soap*, struct ArrayOf_USCORExsd_USCOREstring *_params, char **_createNewUserReturn);

SOAP_FMAC5 int SOAP_FMAC6 ns2__validateUser(struct soap*, struct ArrayOf_USCORExsd_USCOREstring *_params, char **_validateUserReturn);

SOAP_FMAC5 int SOAP_FMAC6 ns2__getDynaTuneInfo(struct soap*, struct ArrayOf_USCORExsd_USCOREstring *_params, struct ns2__getDynaTuneInfoResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 ns2__isUserValidated(struct soap*, char *_nU, enum xsd__boolean *_isUserValidatedReturn);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__isConnected(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_gu, enum xsd__boolean *_isConnectedReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__testWebService(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **testWebServiceReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__createNewUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ArrayOf_USCORExsd_USCOREstring *_params, char **_createNewUserReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__validateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ArrayOf_USCORExsd_USCOREstring *_params, char **_validateUserReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__getDynaTuneInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ArrayOf_USCORExsd_USCOREstring *_params, struct ns2__getDynaTuneInfoResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__isUserValidated(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_nU, enum xsd__boolean *_isUserValidatedReturn);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__isConnected(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__testWebService(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__createNewUser(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__validateUser(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__getDynaTuneInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns2__isUserValidated(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
