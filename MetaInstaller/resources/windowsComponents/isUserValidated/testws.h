/* testws.h
   Generated by wsdl2h 1.2.12 from http://localhost:8081/authws/services/AuthenticationService?wsdl and typemap.dat
   2008-12-01 11:31:43 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://localhost:8081/authws/services/AuthenticationService                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://localhost:8081/authws/services/AuthenticationService"

*/

//gsoap ns1   schema namespace:	http://localhost:8081/authws/services/AuthenticationService
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };


/// "http://localhost:8081/authws/services/AuthenticationService":ArrayOf_xsd_string is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string
struct ArrayOf_USCORExsd_USCOREstring
{
/// Pointer to array of char*.
    char*                               *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// "http://localhost:8081/authws/services/AuthenticationService":ArrayOfArrayOf_xsd_string is a complexType with complexContent restriction of SOAP-ENC:Array.
/// SOAP encoded array of xs:string[]
struct ArrayOfArrayOf_USCORExsd_USCOREstring
{
/// SOAP encoded array of xs:string
struct 
{
/// Pointer to array of char*.
    char*                               *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
    }                                   *__ptr                         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	AuthenticationServiceSoapBinding 
//gsoap ns2  service type:	AuthenticationServiceFrontEnd 
//gsoap ns2  service port:	http://localhost:8081/authws/services/AuthenticationService 
//gsoap ns2  service namespace:	http://webservices.network.edb.com 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref AuthenticationServiceSoapBinding

*/

/**

@page AuthenticationServiceSoapBinding Binding "AuthenticationServiceSoapBinding"

@section AuthenticationServiceSoapBinding_operations Operations of Binding  "AuthenticationServiceSoapBinding"
  - @ref ns2__isConnected
  - @ref ns2__testWebService
  - @ref ns2__createNewUser
  - @ref ns2__validateUser
  - @ref ns2__getDynaTuneInfo
  - @ref ns2__isUserValidated

@section AuthenticationServiceSoapBinding_ports Endpoints of Binding  "AuthenticationServiceSoapBinding"
  - http://localhost:8081/authws/services/AuthenticationService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * AuthenticationServiceSoapBinding                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * ns2__isConnected                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "ns2__isConnected" of service binding "AuthenticationServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__isConnected(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               gu,
    // response parameters:
    enum xsd__boolean                  *_isConnectedReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__isConnected(
    struct soap *soap,
    // request parameters:
    char*                               gu,
    // response parameters:
    enum xsd__boolean                  *_isConnectedReturn
  );
@endcode

*/

//gsoap ns2  service method-style:	isConnected rpc
//gsoap ns2  service method-encoding:	isConnected http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	isConnected ""
int ns2__isConnected(
    char*                               _gu,	///< Request parameter
    enum xsd__boolean                  *_isConnectedReturn	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__testWebService                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "ns2__testWebService" of service binding "AuthenticationServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__testWebService(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    char*                              *testWebServiceReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__testWebService(
    struct soap *soap,
    // request parameters:
    // response parameters:
    char*                              *testWebServiceReturn
  );
@endcode

*/

//gsoap ns2  service method-style:	testWebService rpc
//gsoap ns2  service method-encoding:	testWebService http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	testWebService ""
int ns2__testWebService(
    char*                              *testWebServiceReturn	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__createNewUser                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "ns2__createNewUser" of service binding "AuthenticationServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__createNewUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ArrayOf_USCORExsd_USCOREstring* params,
    // response parameters:
    char*                              *_createNewUserReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__createNewUser(
    struct soap *soap,
    // request parameters:
    struct ArrayOf_USCORExsd_USCOREstring* params,
    // response parameters:
    char*                              *_createNewUserReturn
  );
@endcode

*/

//gsoap ns2  service method-style:	createNewUser rpc
//gsoap ns2  service method-encoding:	createNewUser http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	createNewUser ""
int ns2__createNewUser(
    struct ArrayOf_USCORExsd_USCOREstring* _params,	///< Request parameter
    char*                              *_createNewUserReturn	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__validateUser                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "ns2__validateUser" of service binding "AuthenticationServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__validateUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ArrayOf_USCORExsd_USCOREstring* params,
    // response parameters:
    char*                              *_validateUserReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__validateUser(
    struct soap *soap,
    // request parameters:
    struct ArrayOf_USCORExsd_USCOREstring* params,
    // response parameters:
    char*                              *_validateUserReturn
  );
@endcode

*/

//gsoap ns2  service method-style:	validateUser rpc
//gsoap ns2  service method-encoding:	validateUser http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	validateUser ""
int ns2__validateUser(
    struct ArrayOf_USCORExsd_USCOREstring* _params,	///< Request parameter
    char*                              *_validateUserReturn	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__getDynaTuneInfo                                                       *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns2__getDynaTuneInfoResponse" of service binding "AuthenticationServiceSoapBinding" operation "ns2__getDynaTuneInfo"
struct ns2__getDynaTuneInfoResponse
{
    struct ArrayOfArrayOf_USCORExsd_USCOREstring* _getDynaTuneInfoReturn;
};

/// Operation "ns2__getDynaTuneInfo" of service binding "AuthenticationServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__getDynaTuneInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ArrayOf_USCORExsd_USCOREstring* params,
    // response parameters:
    struct ns2__getDynaTuneInfoResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__getDynaTuneInfo(
    struct soap *soap,
    // request parameters:
    struct ArrayOf_USCORExsd_USCOREstring* params,
    // response parameters:
    struct ns2__getDynaTuneInfoResponse*
  );
@endcode

*/

//gsoap ns2  service method-style:	getDynaTuneInfo rpc
//gsoap ns2  service method-encoding:	getDynaTuneInfo http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	getDynaTuneInfo ""
int ns2__getDynaTuneInfo(
    struct ArrayOf_USCORExsd_USCOREstring* _params,	///< Request parameter
    struct ns2__getDynaTuneInfoResponse*	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * ns2__isUserValidated                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "ns2__isUserValidated" of service binding "AuthenticationServiceSoapBinding"

/**

Operation details:

  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns2__isUserValidated(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               nU,
    // response parameters:
    enum xsd__boolean                  *_isUserValidatedReturn
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns2__isUserValidated(
    struct soap *soap,
    // request parameters:
    char*                               nU,
    // response parameters:
    enum xsd__boolean                  *_isUserValidatedReturn
  );
@endcode

*/

//gsoap ns2  service method-style:	isUserValidated rpc
//gsoap ns2  service method-encoding:	isUserValidated http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns2  service method-action:	isUserValidated ""
int ns2__isUserValidated(
    char*                               _nU,	///< Request parameter
    enum xsd__boolean                  *_isUserValidatedReturn	///< Response parameter
);

/* End of testws.h */
