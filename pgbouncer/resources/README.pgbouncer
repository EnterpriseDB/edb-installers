PgBouncer
=========
PgBouncer is a lightweight connection pooler for Postgres Plus Advanced Server.  


Controlling the PgBouncer Service
=================================
By default, the PgBouncer service is configured to autostart at system 
startup and listen for connections on port 6432.  You can confirm that the 
PgBouncer service is running through the Windows service manager or through 
the Linux or HPUX command line.

Windows
-------
On Windows, select Run from the Start menu; when the Run dialog opens, enter: 

    services.msc 

and click OK to open the Services dialog.  Scroll through the list of services 
to view status information about the PgBouncer service (pgbouncer-90).  To change 
the state of the pgbouncer-90 service, select the service from the list, and use 
the Start and Stop service links in the upper-left corner of the Services dialog.  

Linux
-----
To view the status of the PgBouncer daemon on Linux, open a terminal window, 
and enter:

    service pgbouncer-90 status

  If the PgBouncer service is running, Linux echoes back:

    pgbouncer-90 is running (PID:29618) 
 
  If the service is not running, Linux echoes:

    pgbouncer-90 not running
    
You can also use the service command to stop or start the PgBouncer service at 
the command line.  To start the pgbouncer-90 daemon, enter:

    service pgbouncer-90 start
    
  To stop the pgbouncer-90 daemon, enter:

    service pgbouncer-90 stop 

HPUX
----
To view the status of the PgBouncer daemon on HPUX, open a terminal window, 
and enter:

    /sbin/init.d/pgbouncer-90 status

  If the PgBouncer service is running, HPUX echoes back:

    pgbouncer-90 is running 
 
  If the service is not running, HPUX echoes:

    pgbouncer-90 not running
    
You can also control the PgBouncer service at the command line.  To start the 
PgBouncer daemon, enter:

    /sbin/init.d/pgbouncer-90 start
    
To stop the PgBouncer daemon, enter:

    /sbin/init.d/pgbouncer-90 stop 

To stop and then start the PgBouncer daemon, enter:

    /sbin/init.d/pgbouncer-90 restart


Configuring PgBouncer
=====================
When the PgBouncer service is running, any Postgres client connecting to the 
PgBouncer listener port specified in the configuration file will automatically use 
connection pooling.  PgBouncer connection and configuration information is stored 
in the pgbouncer.ini file, located under:  

      <PPASHOME>/share
 
The configuration file is divided into two sections: [databases] and 
[pgbouncer].

The [databases] section contains a list of databases and the associated connection 
information; after a Postgres Plus installation, the configuration file contains 
an entry for the installation of Postgres Plus that installed PgBouncer:

    edb = host=127.0.0.1 port=5444 

You can specify additional database connection information in the configuration 
file in the form of keyword=value pairs.  Specify the following parameters:

  * name - The name of the database to which the client application connects
  * host - The host IP address
  * port - The port that the host is listening on
  * dbname - The (optional) database name 
  * user - A username (if different than the information specified by the 
           client connecting to PgBouncer)
  * password - A password (if different than the information specified by 
           the client connecting to PgBouncer)

The following example demonstrates the syntax allowed in the [databases] 
section of the configuration file:

    [databases] 
    edb = host=127.0.0.1 port=5444 
    acctg = host=192.168.10.101 port=5432 user=lola password=1safe_pwd! 

Include the dbname parameter to map the connection name to an alternate 
database name.  For example:

    hr = host=127.0.0.1 port=5444 dbname=humanresources 

Please note that the connection information will vary according to the platform, 
client software and identity you are connecting with. 

PgBouncer uses the information provided in the connection string to connect to 
the database server.  Specifying a user in the pgbouncer.ini file overrides user 
details supplied by the client.

If the client provides user information, that information is used to connect to 
PgBouncer, which in turn uses the information specified in the PgBouncer 
configuration file to connect to the server.  The details of the user specified 
in the configuration file must be defined in the database cluster.

Note: If you do not specify user details in pgbouncer.ini, the username and 
password will be authenticated by the database server and PgBouncer.  As such, the 
username and password should be included in the userlist.txt file and the database 
cluster.

The [pgbouncer] section of the configuration file contains configuration 
details specific to PgBouncer:

  * auth_type - The authentication method used by PgBouncer.  May be: md5, 
    crypt, plain, trust or any.  The default value is md5.
    
  * auth_file - The path to the authentication file that contains 
    username and passwords of clients that may connect to PgBouncer.  
    
    The authentication file (userlist.txt) is located in the 
    <PPASHOME>/etc directory, and contains username/password pairs 
    that specify the identities that clients may use to access PgBouncer.  Within 
    the authentication file, the username and password must be specified within 
    double-quotes, as follows:  
    
    "user_name" "password"
    
    To make changes to the identities that can access PgBouncer, you can edit 
    the existing authentication file, or specify an alternate authentication 
    file with the auth_file parameter.     

  * listen_addr - The IP address on which PgBouncer listens for client 
    connections.  
    
    If omitted, only Unix socket connections are allowed; the 
    client must also reside on the same host as PgBouncer and may not specify 
    a host IP address when connecting to PgBouncer.
    
  * listen_port - The port that PgBouncer monitors for client connections.  
    By default, PgBouncer listens on port 6432.
  
  * logfile - The path to the PgBouncer log file.
  
  * pidfile - The path to the process ID file.
  
  * admin_users - A comma-delimited list of users that are allowed to access 
    the Admin Console (for management and monitoring purposes).  By default, 
    PgBouncer is installed with an admin_user named enterprisedb.   
   
  * pool_mode - The value of pool_mode specifies when the server connection 
    can be made available to the connection pool.  May be: session, 
    transaction or statement.  The default value is session.   

The following (Linux) example demonstrates the syntax allowed in the [pgbouncer] 
section of the configuration file:
    
    [pgbouncer] 
    logfile = /var/log/pgbouncer-90/pgbouncer.log 
    pidfile = /tmp/pgbouncer.pid 
    listen_addr = * 
    listen_port = 6432 
    auth_type = md5 
    auth_file = /opt/PostgresPlus/9.0AS/etc/userlist.txt 
    admin_users = enterprisedb 
    pool_mode = session 

After editing the PgBouncer configuration file to reflect your environment, you must 
restart the PgBouncer service for the changes to take effect.


Using the PgBouncer Admin Console
=================================
You can access the PgBouncer Admin Console by connecting to the pgbouncer 
database.  The Admin Console allows you to retrieve statistical information
about PgBouncer activity, and to control the PgBouncer process.  

The following example connects to the pgbouncer database with a psql client on 
a Linux system.  PgBouncer is listening on port 6432, with a user name of 
enterprisedb:

    # ./psql -p 6432 -U enterprisedb pgbouncer

  Please note that the connection information will vary according to the   
  platform, client software and identity you are connecting with.

After connecting to the pgbouncer database, use the SHOW CLIENTS command to 
retrieve client-related information:

    # SHOW CLIENTS; 

The SHOW CLIENTS command returns:

  --[ RECORD 1]-+--------------------
   type         | C
   user         | enterprisedb
   database     | pgbouncer
   state        | active
   addr         | unix
   port         | 6432
   local_addr   | unix
   local_port   | 6432
   connect_time | 2010-05-25 05:26:20
   request_time | 2010-05-25 05:39:46
   ptr          | 0x8655d20
   link         | 

The other variations of the SHOW command are:

  * SHOW STATS;
  * SHOW SERVERS;
  * SHOW POOLS;
  * SHOW LISTS;
  * SHOW USERS;
  * SHOW DATABASES;
  * SHOW FDS;
  * SHOW CONFIG;

The Admin Console also offers commands that control the PgBouncer process:

  * PAUSE    Use the PAUSE command to disconnect all servers after waiting for   
             current queries to complete.

  * SUSPEND  Use the SUSPEND command to flush the socket buffers and suspend the 
             PgBouncer process.

  * RESUME   Use the RESUME command to resume work after a PAUSE or SUSPEND 
             command.

  * SHUTDOWN Use the SHUTDOWN command to stop the PgBouncer process and exit.

  * RELOAD   Use the RELOAD command to reload the PgBouncer configuration files.


--------------------------------------------------
For more information about using PgBouncer, visit: 

    http://pgbouncer.projects.postgresql.org/doc/usage.html
