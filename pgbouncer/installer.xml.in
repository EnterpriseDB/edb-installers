<project>
    <!-- Package details -->
    <shortName>pgbouncer</shortName>
    <fullName>PgBouncer</fullName>
    <version>PG_VERSION_PGBOUNCER-PG_BUILDNUM_PGBOUNCER</version>
    <!-- These options are used on Windows -->
    <startMenuGroupName/>
    <!-- Product Specific Options -->
    <productComments>PgBouncer: Connection pooler for PostgreSQL, packaged by EnterpriseDB</productComments>
    <productDisplayName>${product_fullname} ${productVersion}</productDisplayName>
    <requireInstallationByRootUser>1</requireInstallationByRootUser>
    <!-- The options are used for RPM registration -->
    <description>PgBouncer: Connection pooler for PostgreSQL </description>
    <summary>PgBouncer: Connection pooler for PostgreSQL, packaged by EnterpriseDB</summary>
    <vendor>EnterpriseDB</vendor>

    <!-- Installer Size -->
    <width>550</width>
    <height>400</height>

    <!-- Misc options -->
    <installerFilename>${product_shortname}-${product_version}-${platform_name}.${platform_exec_suffix}</installerFilename>
    <wrapLicenseFileText>0</wrapLicenseFileText>
    <compressionAlgorithm>lzma</compressionAlgorithm>
    <unattendedModeUI>minimal</unattendedModeUI>
    <enableRollback>0</enableRollback>
    <saveRelativePaths>1</saveRelativePaths>
    <uninstallerName>uninstall-${product_shortname}</uninstallerName>
    <outputDirectory>../output</outputDirectory>
    <installationLogFile>${system_temp_directory}/install-${product_shortname}.log</installationLogFile>

    <!-- Images -->
    <disableSplashScreen>1</disableSplashScreen>
    <leftImage>../resources/pg-side.png</leftImage>

    <!-- i18n files for the UI -->
    <allowedLanguages>en</allowedLanguages>
    <customLanguageFileList>
        <language>
            <code>en</code>
            <encoding>iso8859-1</encoding>
            <file>i18n/en.lng</file>
        </language>
    </customLanguageFileList>
    <preShowHelpActionList>
        <!-- Set the default values -->
		<setInstallerVariable name="defaultpghost" value="localhost"/>
		<setInstallerVariable name="defaultpguser" value="postgres"/>
		<setInstallerVariable name="defaultpgport" value="5432"/>
		<!-- Set the default postgres password, to be used only in unnattended mode -->
		<setInstallerVariable name="defaultpgpassword" value=""/>
		<setInstallerVariable name="def_listen_port" value="6432"/>
		<!-- MAC : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PgBouncer</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- LIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PgBouncer</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- WIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PgBouncer</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
    </preShowHelpActionList>
    <!-- Prebuild Actons-->
    <preBuildActionList>
      <setInstallerVariable name="originalplatform" value="${platform_name}"/>
      <setInstallerVariable name="originalplatform" value="linux-x32">
          <ruleList>
              <compareText text="${platform_name}" value="linux"/>
          </ruleList>
      </setInstallerVariable>
    </preBuildActionList>
    <initializationActionList>
        <setInstallerVariable name="productVersion" persist="1" value="PG_VERSION_PGBOUNCER" />
		<!-- Set the default values -->
		<setInstallerVariable name="defaultpghost" value="localhost"/>
		<setInstallerVariable name="defaultpguser" value="postgres"/>
		<setInstallerVariable name="defaultpgport" value="5432"/>
		<setInstallerVariable name="defaultpgdbname" value="postgres"/>
		<!-- Set the default postgres password, to be used only in unnattended mode -->
		<setInstallerVariable name="defaultpgpassword" value=""/>
		<setInstallerVariable name="defaultpgpassword" value="postgres">
		<ruleList>
    		<compareText logic="equals" text="${installer_ui}" value="unattended"/>
		</ruleList>
		</setInstallerVariable>

        <setInstallerVariable name="productVersion" persist="1" value="PG_VERSION_PGBOUNCER" />

	    <!-- Abort Installation as trying to  run a 32-bit installer on 64-bit machine -->
        <throwError>
          <customErrorMessage>${msg(platform.not.match)}</customErrorMessage>
          <text>Unknown Error</text>
          <ruleList>
            <platformTest type="linux-x64"/>
            <compareText text="${originalplatform}" value="linux-x32"/>
          </ruleList>
        </throwError>

        <!-- LIN : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="${platform_install_prefix}/PgBouncer"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- WIN : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="${platform_install_prefix}\PgBouncer"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="/Library/PgBouncer"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
	<!-- MAC : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PgBouncer</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- LIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PgBouncer</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- WIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PgBouncer</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
    </initializationActionList>
    <preInstallationActionList>
        <!-- Creates the ini file if not exits -->
        <touchFile path="/etc/postgres-reg.ini">
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </touchFile>
        <!-- LIN & MAC : Get the check Previous Installation of pgbouncer-->
        <actionGroup>
            <actionList>
                <iniFileGet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>Version</key>
                    <variable>pgbouncerVersion</variable>
                </iniFileGet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>

        <!-- WIN : Check Previous Installation of pgbouncer-->
        <actionGroup>
            <actionList>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\pgbouncer</key>
                    <name>Version</name>
                    <variable>pgbouncerVersion</variable>
                </registryGet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>

        <actionGroup>
            <actionList>
                 <!-- LIN & MAC: Set the system_user in case of re-install/upgrade -->
                <iniFileGet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>System_User</key>
                    <variable>system_user</variable>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </iniFileGet>
                <!-- LIN & MAC: Set the installation directory in case of re-install/upgrade -->
                <iniFileGet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>InstallationDirectory</key>
                    <variable>installdir</variable>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </iniFileGet>
                <!-- WIN: Set the installation directory in case of re-install/upgrade -->
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\pgbouncer</key>
                    <name>Location</name>
                    <variable>installdir</variable>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </registryGet> 
                <!-- WIN: Stop the pgbouncer service -->    
                <stopWindowsService>
                    <serviceName>pgbouncer</serviceName>
                    <displayName>pgbouncer</displayName>
                    <abortOnError>0</abortOnError>
                    <customErrorMessage>${msg(pgbouncer.service.stop.error)}</customErrorMessage>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </stopWindowsService>  
                <!-- Mac: Stop the pgbouncer service -->    
                <runProgram>
                    <program>launchctl</program>
                    <programArguments>unload /Library/LaunchDaemons/com.edb.launchd.pgbouncer.plist</programArguments>
                    <abortOnError>0</abortOnError>
                    <customErrorMessage>${msg(pgbouncer.service.stop.error)}</customErrorMessage>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <!-- Linux: Stop the pgbouncer service -->    
                <runProgram>
                    <program>/etc/init.d/pgbouncer</program>
                    <programArguments>stop</programArguments>
                    <abortOnError>0</abortOnError>
                    <customErrorMessage>${msg(pgbouncer.service.stop.error)}</customErrorMessage>
                    <ruleList>
                        <compareText>
                            <logic>contains</logic>
                            <text>${platform_name}</text>
                            <value>linux</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <copyFile>
                    <origin>${installdir}/share/pgbouncer.ini</origin>
                    <destination>${installdir}/share/pgbouncer.ini.bak1</destination>
                </copyFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${pgbouncerVersion}</text>
                    <value/>
                </compareText>
            </ruleList>
        </actionGroup>

        <!-- Get a free port for pgbouncer -->
        <getFreePort>
            <variable>def_listen_port</variable>
            <initialPort>6432</initialPort>
            <finalPort>65535</finalPort>
        </getFreePort>
  
    </preInstallationActionList>
    <postInstallationActionList>

       <!-- Create a log directory -->
       <createDirectory>
           <path>${installdir}/log</path>
           <ruleList>
               <fileTest>
                   <path>${installdir}/log</path>
                   <condition>not_exists</condition>
               </fileTest>
               <compareText>
                   <text>${platform_name}</text>
                   <logic>equals</logic>
                   <value>windows</value>
               </compareText>
           </ruleList>
       </createDirectory>

        <!-- Perform substitution in the config and ctl files -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="pghost" value="127.0.0.1">
                    <ruleList>
                        <compareText>
                            <text>${pghost}</text>
                            <logic>equals</logic>
                            <value>localhost</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable>
                <substitute>
                    <files>${installdir}/share/pgbouncer.ini</files>
                    <substitutionList>
                        <substitution>
                            <pattern>@@CON@@</pattern>
                            <value>postgres = host=${pghost} port=${pgport}</value>
                        </substitution>
                        <substitution>
                            <pattern>@@LISTENADDR@@</pattern>
                            <value>${client_ips}</value>
                        </substitution>
                        <substitution>
                            <pattern>@@LISTENPORT@@</pattern>
                            <value>${pgbouncer_port}</value>
                        </substitution>
                        <substitution>
                            <pattern>@@ADMINUSERS@@</pattern>
                            <value>${pguser}</value>
                        </substitution>
                        <substitution>
                            <pattern>@@STATSUSERS@@</pattern>
                            <value>${pguser}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <substitute>
                    <files>${installdir}/share/pgbouncer.ini</files>
                    <substitutionList>
                        <substitution>
                            <pattern>@@LOGFILE@@</pattern>
                            <value>/var/log/pgbouncer/pgbouncer.log</value>
                        </substitution>
                        <substitution>
                            <pattern>@@PIDFILE@@</pattern>
                            <value>/var/run/pgbouncer/pgbouncer.pid</value>
                        </substitution>
                        <substitution>
                            <pattern>@@AUTHFILE@@</pattern>
                            <value>${installdir}/etc/userlist.txt</value>
                        </substitution>
                    </substitutionList>
                    <ruleList>
                        <compareText>
                            <text>${platform_name}</text>
                            <logic>does_not_equal</logic>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </substitute>
                <substitute>
                    <files>${installdir}\share\pgbouncer.ini</files>
                    <substitutionList>
                        <substitution>
                            <pattern>@@LOGFILE@@</pattern>
                            <value>${installdir}\log\pgbouncer.log</value>
                        </substitution>
                        <substitution>
                            <pattern>@@PIDFILE@@</pattern>
                            <value>${installdir}\log\pgbouncer.pid</value>
                        </substitution>
                        <substitution>
                            <pattern>@@AUTHFILE@@</pattern>
                            <value>${installdir}\etc\userlist.txt</value>
                        </substitution>
                    </substitutionList>
                    <ruleList>
                        <compareText>
                            <text>${platform_name}</text>
                            <logic>equals</logic>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </substitute>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${pgbouncerVersion}</text>
                    <value/>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- Create etc directory for userlist.txt file -->
        <createDirectory>
            <path>${installdir}/etc</path>
            <ruleList>
                <fileTest>
                    <path>${installdir}/etc</path>
                    <condition>not_exists</condition>
                </fileTest>
            </ruleList>
        </createDirectory>
        <!-- Create the userlist.txt file -->
        <writeFile>
            <path>${installdir}/etc/userlist.txt</path>
            <text>"${pguser}" "${pgpassword}"</text>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${pgbouncerVersion}</text>
                    <value/>
                </compareText>
            </ruleList>
        </writeFile>
        <changeOwnerAndGroup>
            <files>${installdir}/etc/userlist.txt</files>
            <owner>${system_user}</owner>
        </changeOwnerAndGroup>
        <changePermissions>
            <files>${installdir}/etc/userlist.txt</files>
            <permissions>700</permissions>
        </changePermissions>
        <!-- Write pgbouncer details to ini file -->
        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>Description</key>
                    <value>${msg(install.summary)}</value>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>InstallationDirectory</key>
                    <value>${installdir}</value>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>Version</key>
                    <value>${product_version}</value>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>System_User</key>
                    <value>${system_user}</value>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>

        <!-- Register pgbouncer service -->
         <runProgram>
            <program>${installdir}\installer\pgbouncer\startupcfg.bat</program>
            <programArguments>"${installdir}"</programArguments>
            <abortOnError>0</abortOnError>
            <showMessageOnError>0</showMessageOnError>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${pgbouncerVersion}</text>
                    <value/>
                </compareText>
            </ruleList>
        </runProgram>
        <actionGroup>
            <actionList>
                <copyFile>
                   <origin>${installdir}/share/pgbouncer.ini.bak1</origin>
                   <destination>${installdir}/share/pgbouncer.ini</destination>
                </copyFile>
                <deleteFile>
                   <path>${installdir}/share/pgbouncer.ini.bak1</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <fileTest>
                    <path>${installdir}/share/pgbouncer.ini.bak1</path>
                    <condition>exists</condition>
                </fileTest>
            </ruleList>
        </actionGroup>
        <!-- LINUX | MAC: Install pgbouncer service -->
        <runProgram>
            <program>${installdir}/installer/pgbouncer/startupcfg.sh</program>
            <programArguments>${installdir} ${system_user}</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.linux.service.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </runProgram>

        <!-- WIN: Start the pgbouncer service -->    
        <startWindowsService>
            <serviceName>pgbouncer</serviceName>
            <displayName>pgbouncer</displayName>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.service.start.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </startWindowsService>  

        <!-- Linux: Start the pgbouncer service -->    
        <runProgram>
            <program>/etc/init.d/pgbouncer</program>
            <programArguments>start</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.service.start.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </runProgram>

        <!-- MAC: Start the pgbouncer service -->    
        <runProgram>
            <program>launchctl</program>
            <programArguments>start com.edb.launchd.pgbouncer</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.service.start.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </runProgram>

        <runProgram>
            <program>cscript</program>
            <programArguments>//NoLogo "${installdir}/installer/pgbouncer/securefile.vbs" "${installdir}\etc\userlist.txt" "${system_username}"</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(error.file.notsecure)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </runProgram>

        <deleteFile path="${installdir}/instscripts" />

  </postInstallationActionList>

    <!-- preUninstallation actions -->
    <preUninstallationActionList>

        <!-- MAC: Stop the pgbouncer service -->    
         <runProgram>
            <program>launchctl</program>
            <programArguments>unload /Library/LaunchDaemons/com.edb.launchd.pgbouncer.plist</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.service.stop.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </runProgram>

       <deleteFile>
            <path>/Library/LaunchDaemons/com.edb.launchd.pgbouncer.plist</path>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </deleteFile>

        <!-- WIN: Stop the pgbouncer service -->    
        <stopWindowsService>
            <serviceName>pgbouncer</serviceName>
            <displayName>pgbouncer</displayName>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.service.stop.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </stopWindowsService>  


        <runProgram>
            <program>${installdir}\bin\pgbouncer.exe</program>
            <programArguments>-unregservice "${installdir}\share\pgbouncer.ini"</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.uninstall.service.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </runProgram>

        <runProgram>
            <program>/etc/init.d/pgbouncer</program>
            <programArguments>stop</programArguments>
            <abortOnError>0</abortOnError>
            <customErrorMessage>${msg(pgbouncer.service.stop.error)}</customErrorMessage>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </runProgram>

        <deleteFile>
            <path>/etc/init.d/pgbouncer</path>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </deleteFile>

        <deleteFile>
            <path>${installdir}/etc</path>
        </deleteFile>

        <deleteFile>
            <path>${installdir}/log</path>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </deleteFile>
       <deleteFile>
            <path>/var/log/pgbouncer</path>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </deleteFile>
        <deleteFile>
            <path>/var/run/pgbouncer</path>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </deleteFile>

        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>Description</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>InstallationDirectory</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>pgbouncer</section>
                    <key>Version</key>
                    <value/>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        
    </preUninstallationActionList>
    <!-- Components -->
    <componentList>
        <component>
            <name>default</name>
            <description>Default Component</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <!-- LIN- Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/pgbouncer/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/pgbouncer/include</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/pgbouncer/bin</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/pgbouncer/share</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Files</description>
                    <destination>${installdir}</destination>
                    <name>installfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/instscripts</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- LIN-X64 - Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/pgbouncer/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/pgbouncer/include</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/pgbouncer/bin</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/pgbouncer/share</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Files</description>
                    <destination>${installdir}</destination>
                    <name>installfileslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/instscripts</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- MAC Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/pgbouncer/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/pgbouncer/include</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/pgbouncer/bin</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/pgbouncer/share</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Files</description>
                    <destination>${installdir}</destination>
                    <name>installfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/instscripts</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- WIN - Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/bin</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/windows/share</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Files</description>
                    <destination>${installdir}</destination>
                    <name>installfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/instscripts</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/windows/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
        </component>
    </componentList>
    <parameterList>
    <parameterGroup>
      <name>pgdetails</name>
      <title>${msg(pg.details.title)}</title>
      <explanation>${msg(pg.details.explanation)}</explanation>
      <value/>
      <default/>
      <parameterList>

        <!-- Postgres Host -->
        <stringParameter>
          <name>pghost</name>
          <description>Host</description>
          <explanation/>
          <value/>
          <default>${defaultpghost}</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
        </stringParameter>
  
        <!-- Postgres User -->
        <stringParameter>
          <name>pguser</name>
          <description>User Name</description>
          <explanation/>
          <value/>
          <default>${defaultpguser}</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
        </stringParameter>

        <!-- Postgres User Password -->
        <passwordParameter>
          <name>pgpassword</name>
          <title>Password</title>
          <description>Password</description>
          <explanation/>
          <value/>
          <default>${defaultpgpassword}</default>
          <allowEmptyValue>1</allowEmptyValue>
          <askForConfirmation>0</askForConfirmation>
          <descriptionRetype/>
          <width>40</width>
        </passwordParameter>

        <!-- Postgres Port(Default 5432) -->
        <stringParameter>
          <name>pgport</name>
          <description>Port</description>
          <explanation/>
          <value/>
          <default>${defaultpgport}</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
        </stringParameter>

        <stringParameter cliOptionName="dbname" ask="0" cliOptionShow="0">
          <name>pgdbname</name>
          <description>Database</description>
          <explanation/>
          <value/>
          <default>${defaultpgdbname}</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
        </stringParameter>
        
      </parameterList>
      <ruleList>
          <compareText>
              <text>${pgbouncerVersion}</text>
              <logic>equals</logic>
              <value/>
          </compareText>
      </ruleList>
   

      <!-- Checking the validity of PostgreSQL Server Details -->
      <validationActionList>
        <actionGroup>
          <actionList>
            <throwError>
              <text>${msg(pg.blank.error)}</text>
            </throwError>
          </actionList>
          <ruleEvaluationLogic>OR</ruleEvaluationLogic>
          <ruleList>
            <compareText logic="equals" text="${pgport}" value=""/>
            <compareText logic="equals" text="${pguser}" value=""/>
            <compareText logic="equals" text="${pgpassword}" value=""/>
            <compareText logic="equals" text="${pgdbname}" value=""/>
          </ruleList>
        </actionGroup>

        <!-- Validate the PostgreSQL Server Details -->
        <actionGroup>
          <actionList>

              <!-- Extract file --> 
              <unpackDirectory>
                  <origin>instscripts</origin>
                  <destination>${system_temp_directory}</destination>
                  <component>default</component>
                  <folder>installfileslinux</folder>
                  <ruleList>
                      <compareText>
                          <logic>equals</logic>
                          <text>${platform_name}</text>
                          <value>linux</value>
                      </compareText>
                  </ruleList>
              </unpackDirectory>
              <unpackDirectory>
                  <origin>instscripts</origin>
                  <destination>${system_temp_directory}</destination>
                  <component>default</component>
                  <folder>installfileslinux-x64</folder>
                  <ruleList>
                      <compareText>
                          <logic>equals</logic>
                          <text>${platform_name}</text>
                          <value>linux-x64</value>
                      </compareText>
                  </ruleList>
              </unpackDirectory>
              <unpackDirectory>
                  <origin>instscripts</origin>
                  <destination>${system_temp_directory}</destination>
                  <component>default</component>
                  <folder>installfileswindows</folder>
                  <ruleList>
                      <compareText>
                          <logic>equals</logic>
                          <text>${platform_name}</text>
                          <value>windows</value>
                      </compareText>
                  </ruleList>
              </unpackDirectory>
              <unpackFile>
                  <origin>installer/pgbouncer/check-connection.bat</origin>
                  <destination>${system_temp_directory}/instscripts/check-connection.bat</destination>
                  <component>default</component>
                  <folder>installfileswindows</folder>
                  <ruleList>
                      <compareText>
                          <logic>equals</logic>
                          <text>${platform_name}</text>
                          <value>windows</value>
                      </compareText>
                  </ruleList>
              </unpackFile>
              <unpackDirectory>
                  <origin>instscripts</origin>
                  <destination>${system_temp_directory}</destination>
                  <component>default</component>
                  <folder>installfilesosx</folder>
                  <ruleList>
                      <compareText>
                          <logic>equals</logic>
                          <text>${platform_name}</text>
                          <value>osx</value>
                      </compareText>
                  </ruleList>
              </unpackDirectory>
            
            <!-- Running the Script to validate the PostgreSQL Server Details -->
            <setEnvironmentVariable name="PGHOST" value="${pghost}"/>
            <setEnvironmentVariable name="PGUSER" value="${pguser}"/>
            <setEnvironmentVariable name="PGPASSWORD" value="${pgpassword}"/>
            <setEnvironmentVariable name="PGPORT" value="${pgport}"/>
            <setEnvironmentVariable name="PGDATABASE" value="${pgdbname}"/>
            <setEnvironmentVariable name="LD_LIBRARY_PATH" value="${system_temp_directory}/instscripts"/>

            <setInstallerVariableFromScriptOutput>
              <exec>${system_temp_directory}/instscripts/psql</exec>
              <execArgs>-l ${pgdbname}</execArgs>
              <name>connection</name>
              <workingDirectory>${system_temp_directory}/instscripts</workingDirectory>
              <customErrorMessage>${program_stderr}</customErrorMessage>
              <ruleList>
                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
              </ruleList>
            </setInstallerVariableFromScriptOutput>
            <setInstallerVariableFromScriptOutput>
              <exec>${system_temp_directory}\instscripts\check-connection.bat</exec>
              <execArgs>"${system_temp_directory}\instscripts\psql.exe" ${pgdbname}</execArgs>
              <name>connection</name>
              <workingDirectory>${system_temp_directory}\instscripts</workingDirectory>
              <customErrorMessage>${program_stderr}</customErrorMessage>
              <ruleList>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
              </ruleList>
            </setInstallerVariableFromScriptOutput>
            <stringModify text="${connection}" variable="connection" logic="trim"/>
          </actionList>
         </actionGroup> 
      </validationActionList>   
    </parameterGroup>
    
    <parameterGroup>
      <name>pgbouncerdetails</name>
      <title>${msg(pgbouncer.details.title)}</title>
      <explanation>${msg(pgbouncer.details.explanation)}</explanation>
      <value/>
      <default/>
      <parameterList>

        <!-- Waiting for client request from IP(s) -->
        <stringParameter>
          <name>client_ips</name>
          <description>Listening IP's (',' separated), * for all IPs</description>
          <explanation></explanation>
          <value/>
          <default>*</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
        </stringParameter>
  
        <!-- Listening Port(Default 6432) -->
        <stringParameter>
          <name>pgbouncer_port</name>
          <description>Listening Port</description>
          <explanation/>
          <value/>
          <default>${def_listen_port}</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
        </stringParameter>

        <!-- System User (Default postgres) -->
        <stringParameter>
          <name>system_user</name>
          <description>Operating System User</description>
          <explanation/>
          <value/>
          <default>postgres</default>
          <allowEmptyValue>1</allowEmptyValue>
          <width>40</width>
          <ruleList>
               <compareText>
                    <text>${platform_name}</text>
                    <logic>does_not_equal</logic>
                    <value>windows</value>
               </compareText>
          </ruleList>
        </stringParameter>
     </parameterList>
      <ruleList>
          <compareText>
              <text>${pgbouncerVersion}</text>
              <logic>equals</logic>
              <value/>
          </compareText>
      </ruleList>
      <validationActionList>
        <actionGroup>
          <actionList>
            <throwError>
              <text>${msg(pgbouncer.blank.error)}</text>
            </throwError>
          </actionList>
          <ruleEvaluationLogic>OR</ruleEvaluationLogic>
          <ruleList>
            <compareText logic="equals" text="${system_user}" value=""/>
            <compareText logic="equals" text="${pgbouncer_port}" value=""/>
            <compareText logic="equals" text="${client_ips}" value=""/>
          </ruleList>
        </actionGroup>
        <throwError>
            <text>${msg(pgbouncer.port.error)}</text>
            <ruleList>
                <portTest>
                    <port>${pgbouncer_port}</port>
                    <condition>cannot_bind</condition>
                </portTest>
            </ruleList>
        </throwError>
        <throwError>
            <text>${msg(pgbouncer.user.error)}</text>
            <ruleList>
                <userTest>
                    <username>${system_user}</username>
                    <logic>not_exists</logic>
                </userTest>
                <compareText>
                    <text>${platform_name}</text>
                    <logic>does_not_equal</logic>
                    <value>windows</value>
               </compareText>
            </ruleList>
        </throwError>  
      </validationActionList>
    </parameterGroup>
    </parameterList>

    <!-- Install Directory -->
    <parameterList>
	<stringParameter name="originalplatform" ask="0" cliOptionShow="0"/>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value>${default_installdir}</value>
            <default/>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
            <ruleList>
                <compareText>
                    <text>${pgbouncerVersion}</text>
                    <logic>equals</logic>
                    <value/>
                </compareText>
            </ruleList>
            <!-- Validating whether installdir is empty -->
            <validationActionList>
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installdir" value="${default_installdir}" />
                        <throwError>
                            <text>${msg(pgbouncer.installdir.empty)}</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${installdir}</text>
                            <logic>equals</logic>
                            <value />
                        </compareText>
                    </ruleList>
                </actionGroup>
            </validationActionList>
            <!-- Validating whether installdir contains whitespaces (Linux) -->
            <postShowPageActionList>
                <actionGroup>
                    <actionList>  
                        <showWarning>
                            <text>${msg(pgbouncer.installdir.error)}</text>
                        </showWarning>
                        <setInstallerVariable name="next_page" value="installdir"/>
                    </actionList>
                    <ruleList>
                       <regExMatch>
                           <text>${installdir}</text>
                           <logic>does_not_match</logic>
                           <pattern>^/([0-9a-zA-Z_/\.\-]*)$</pattern>
                       </regExMatch>
                       <compareText>
                           <logic>does_not_equal</logic>
                           <text>${platform_name}</text>
                           <value>windows</value>
                       </compareText>
                    </ruleList>
	        </actionGroup>
            <!-- Validating whether installdir is valid (Windows) -->
                <actionGroup>
                   <actionList>
                     <setInstallerVariable name="installdir" value="${default_installdir}" />
                     <showWarning>
                        <text>${msg(pgbouncer.installdir.error)}</text>
                     </showWarning>
                     <setInstallerVariable name="next_page" value="installdir"/>
                   </actionList>
                   <ruleList>
                       <regExMatch>
                         <text>${installdir}</text>
                         <logic>does_not_match</logic>
                         <pattern>^([a-zA-Z]:)\\([0-9a-zA-Z_\\\s\.\-\(\)]*)$</pattern>
                       </regExMatch>
                       <compareText>
                         <text>${platform_name}</text>
                         <logic>equals</logic>
                         <value>windows</value>
                       </compareText>
                   </ruleList>
                 </actionGroup>
            </postShowPageActionList>
        </directoryParameter>
	<!-- Explain that we're using an existing installation directory -->
        <labelParameter>
            <name>upgrade</name>
            <title>${msg(upgrade.existing.installation.title)}</title>
            <description>${msg(upgrade.existing.installation.description)}</description>
            <ruleList>
		<compareText>
                    <text>${pgbouncerVersion}</text>
                    <logic>does_not_equal</logic>
                    <value/>
                </compareText>
            </ruleList>
        </labelParameter>
    </parameterList>
</project>
