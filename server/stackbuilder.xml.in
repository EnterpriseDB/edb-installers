<component>
    <name>stackbuilder</name>
    <description>Stack Builder</description>
    <canBeEdited>1</canBeEdited>
    <detailedDescription>${msg(stackbuilder.desc)}</detailedDescription>
    <selected>1</selected>
    <folderList>
        <!-- LINUX: Program files -->
        <folder>
            <description>Program Files</description>
            <destination>${installdir}</destination>
            <name>programfileslinux</name>
            <platforms>linux</platforms>
            <distributionFileList>
                <distributionDirectory>
                    <origin>staging/linux/stackbuilder/scripts</origin>
                </distributionDirectory>
                <distributionFile>
                    <origin>staging/linux/stackbuilder/StackBuilder_3rd_party_licenses.txt</origin>
                </distributionFile>
            </distributionFileList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>linux-x64</value>
                </compareText>
            </ruleList>
        </folder>
        <folder>
        <description>Program Files</description>
            <destination>${installdir}/stackbuilder</destination>
            <name>programfileslinux_1</name>
            <platforms>linux</platforms>
            <distributionFileList>
                <distributionDirectory>
                    <origin>staging/linux/stackbuilder/bin</origin>
                </distributionDirectory>
                <distributionDirectory>
                    <origin>staging/linux/stackbuilder/lib</origin>
                </distributionDirectory>
                <distributionDirectory>
                    <origin>staging/linux/stackbuilder/share</origin>
                </distributionDirectory>
            </distributionFileList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>linux-x64</value>
                </compareText>
            </ruleList>
        </folder>
        <folder>
        <description>Program Files</description>
            <destination>${installdir}/stackbuilder/installer</destination>
            <name>programfileslinux_2</name>
            <platforms>linux</platforms>
            <distributionFileList>
                <distributionDirectory allowWildcards="1">
                    <excludeFiles>*/server</excludeFiles>
                    <origin>staging/linux/stackbuilder/installer/*</origin>
                </distributionDirectory>
            </distributionFileList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>linux-x64</value>
                </compareText>
            </ruleList>
        </folder>
        <folder>
        <description>Program Files</description>
            <destination>${installdir}/installer/server</destination>
            <name>programfileslinux_3</name>
            <platforms>linux</platforms>
            <distributionFileList>
                <distributionFile>
                    <origin>staging/linux/stackbuilder/installer/server/createshortcuts_sb.sh</origin>
                </distributionFile>
                <distributionFile>
                    <origin>staging/linux/stackbuilder/installer/server/removeshortcuts_sb.sh</origin>
                </distributionFile>
            </distributionFileList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>linux-x64</value>
                </compareText>
            </ruleList>
        </folder>
        <!-- MAC: Program files -->
        <folder>
            <description>Program Files</description>
            <destination>${installdir}</destination>
            <name>programfilesmacosx</name>
            <platforms>osx</platforms>
            <distributionFileList>
                <distributionDirectory>
                    <origin>staging/osx/stackbuilder/stackbuilder.app</origin>
                </distributionDirectory>
                <distributionDirectory>
                    <origin>staging/osx/stackbuilder/scripts</origin>
                </distributionDirectory>
                <distributionDirectory>
                    <origin>staging/osx/stackbuilder/installer</origin>
                </distributionDirectory>
                <distributionDirectory>
                    <origin>staging/osx/stackbuilder/debug_symbols</origin>
                </distributionDirectory>
                <distributionFile>
                    <origin>staging/osx/stackbuilder/StackBuilder_3rd_party_licenses.txt</origin>
                </distributionFile>
            </distributionFileList>
        </folder>
        <!-- WIN: Program files -->
        <folder>
            <description>Program Files</description>
            <destination>${installdir}</destination>
            <name>programfileswindows</name>
            <platforms>windows</platforms>
            <distributionFileList>
                <distributionDirectory>
                    <origin>staging/@@WINDIR@@/stackbuilder/share</origin>
                </distributionDirectory>
                <distributionDirectory>
                    <origin>staging/@@WINDIR@@/stackbuilder/bin</origin>
                </distributionDirectory>
                <distributionFile>
                    <origin>staging/@@WINDIR@@/stackbuilder/StackBuilder_3rd_party_licenses.txt</origin>
                </distributionFile>
            </distributionFileList>
        </folder>
   </folderList>

    <!-- WIN: Start Menu -->
    <startMenuShortcutList>
        <startMenuShortcut>
            <name>Application Stack Builder</name>
            <runInTerminal>0</runInTerminal>
            <windowsExec>${installdir}\bin\stackbuilder.exe</windowsExec>
            <ruleList>
                <isTrue value="${create_shortcuts}" />
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </startMenuShortcut>
    </startMenuShortcutList>

    <!-- delete wxWidgets 2.8 libs in upgrade mode -->
    <readyToInstallActionList>
        <actionGroup>
            <actionList>
                <deleteFile path="${installdir}/stackbuilder.app/Contents/Frameworks/libwx*dylib"/>
            </actionList>
            <ruleList>
                <compareText logic="equals" text="${platform_name}" value="osx"/>
                <compareVersions logic="equals" version1="${brandingVer}" version2="12.0-1"/>
            </ruleList>
        </actionGroup>
    </readyToInstallActionList>

    <postInstallationActionList>
        <createTempDir dirPrefix="postgresql_installer"/>
        <runProgram>
            <program>${installdir}/installer/server/createshortcuts_sb.sh</program>
            <programArguments>${product_version} "${branding}" "${installdir}" "${system_temp_directory}/postgresql_installer_${random_number}"</programArguments>
            <progressText>${msg(progress.text.creating.shortcuts)}</progressText>
            <abortOnError>0</abortOnError>
            <showMessageOnError>0</showMessageOnError>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${create_shortcuts}</text>
                    <value>1</value>
                </compareText>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </runProgram>
        <setInstallerVariable name="stackbuilder_installation_done" value="1" persist="1"/>
    </postInstallationActionList>

    <preUninstallationActionList>
        <createTempDir dirPrefix="postgresql_installer"/>
        <actionGroup>
            <actionList>
                <runProgram>
                    <program>${installdir}/installer/server/removeshortcuts_sb.sh</program>
                    <programArguments>"${installdir}" ${product_version} "${branding}" "${system_temp_directory}/postgresql_installer_${random_number}"</programArguments>
                 </runProgram>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC: Remove menu shortcuts -->
        <deleteFile>
            <path>/Applications/${branding}/Application Stack Builder.app</path>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </deleteFile>
        <iniFileSet>
            <file>${PostgreSqlIni}</file>
            <key>SB_Version</key>
            <section>PostgreSQL/${product_version}</section>
            <value></value>
            <ruleList>
                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
                <fileTest path="${PostgreSqlIni}" condition="exists"/>
            </ruleList>
        </iniFileSet>
        <registryDelete>
            <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql${service_suffix}-${product_version}</key> 
            <name>SB_Version</name>
            <ruleList>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
            </ruleList>
        </registryDelete>

        <createTimeStamp format="%Y-%m-%d(YYYY-MM-DD) - %H:%M:%S(HH:MM:SS)" variable="timestamp"/>
        <addTextToFile file="${installdir}${slash}installation_summary.log" insertAt="end">
            <text>
===== Stack Builder uninstallation completed at: ${timestamp} =====
            </text>
            <ruleList>
                <fileTest path="${installdir}${slash}installation_summary.log" condition="exists" />
            </ruleList>
        </addTextToFile>
    </preUninstallationActionList>
</component>
