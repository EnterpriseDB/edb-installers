<project>
    <!-- Package details -->
    <shortName>psqlodbc</shortName>
    <fullName>psqlODBC</fullName>
    <version>PG_VERSION_PSQLODBC-PG_BUILDNUM_PSQLODBC</version>
	
    <!-- These options are used on Windows -->
    <startMenuGroupName>${branding}</startMenuGroupName>
	
    <!-- Product Specific Options -->
    <productComments>ODBC drivers for PostgreSQL, packaged by EnterpriseDB</productComments>
    <productDisplayName>${product_fullname} ${productVersion}</productDisplayName>
    <requireInstallationByRootUser>${admin_rights}</requireInstallationByRootUser>

    <!-- Installer Size -->
    <width>550</width>
    <height>400</height>

    <!-- Misc options -->
    <installerFilename>${product_shortname}-${product_version}-${platform_name}.${platform_exec_suffix}</installerFilename>
    <compressionAlgorithm>lzma</compressionAlgorithm>
    <unattendedModeUI>minimal</unattendedModeUI>
    <description>ODBC Drivers for PostgreSQL, packaged by EnterpriseDB </description>
    <enableRollback>0</enableRollback>
    <saveRelativePaths>1</saveRelativePaths>
    <summary>ODBC drivers for PostgreSQL</summary>
    <vendor>EnterpriseDB</vendor>
    <outputDirectory>../output</outputDirectory>
    <uninstallerName>uninstall-${product_shortname}</uninstallerName>
    <uninstallerDirectory>${installdir}</uninstallerDirectory>
    <installationLogFile>${system_temp_directory}/install-${product_shortname}.log</installationLogFile>
    <uninstallationLogFile>${system_temp_directory}/uninstall-${product_shortname}.log</uninstallationLogFile>
    <allowWindowResize>1</allowWindowResize>
    <windowsSoftwareRegistryPrefix/>
    <!-- set if it is a native windows 64 bit-->
    <windows64bitMode>@@WIN64MODE@@</windows64bitMode>

    <!-- Images -->
    <disableSplashScreen>1</disableSplashScreen>
    <leftImage>../resources/pg-side.png</leftImage>
    <wmImage>resources/logo.png</wmImage>

    <!-- i18n files for the UI -->
    <allowedLanguages>en</allowedLanguages>
    <customLanguageFileList>
        <language>
            <code>en</code>
            <encoding>iso8859-1</encoding>
            <file>i18n/en.lng</file>
        </language>
    </customLanguageFileList>
  <!-- Custom functions -->
  <functionDefinitionList>
    <actionDefinition name="createTempDir">
       <actionList>
         <globalVariables names="random_number"/>
         <actionGroup>
           <actionList>
            <setInstallerVariable name="iteration" value="0"/>
            <!-- Create a random number to use unique filenames -->
             <while>
               <actionList>
                 <generateRandomValue length="10" variable="random_number"/>
                 <runProgram>
                   <program>sh</program>
                   <programArguments>-c &lt;&lt;EOF '
                                     umask 0077
                                     mkdir "${system_temp_directory}/${dirPrefix}_${random_number}"
                                     if [ $? -ne 0 ];
                                     then
                                        exit 100
                                     fi
                                     '
EOF
                   </programArguments>
                 </runProgram>
                 <break>
                   <ruleList>
                    <compareText logic="equals" text="0" value="${program_exit_code}"/>
                   </ruleList>
                 </break>
                <actionGroup>
                  <actionList>
                    <throwError text="${msg(cannot.create.tmp.dir)}" abortOnError="1">
                      <ruleList>
                        <compareValues value1="${iteration}" logic="equals" value2="9"/>
                      </ruleList>
                    </throwError>
                  </actionList>
                </actionGroup>
                 <mathExpression text="${iteration}+1" variable="iteration"/>
               </actionList>
               <conditionRuleList>
                 <compareValues value1="${iteration}" logic="less" value2="10"/>
               </conditionRuleList>
             </while>
             <setInstallerVariable name="random_number" value="${random_number}"/>
           </actionList>
           <ruleList>
             <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
           </ruleList>
         </actionGroup>
         <actionGroup>
           <actionList>
             <generateRandomValue length="10" variable="random_number"/>
             <createDirectory path="${system_temp_directory}/${dirPrefix}_${random_number}"/>
             <setInstallerVariable name="random_number" value="${random_number}"/>
           </actionList>
           <ruleList>
             <compareText logic="equals" text="${platform_name}" value="windows"/>
           </ruleList>
         </actionGroup>
       </actionList>
       <parameterList>
         <stringParameter name="dirPrefix" allowEmptyValue="0"/>
       </parameterList>
    </actionDefinition>
  </functionDefinitionList>
    <preShowHelpActionList>
        <!-- MAC : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PostgreSQL/psqlODBC</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- LIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PostgreSQL/psqlODBC</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
		
        <!-- WIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PostgreSQL\psqlODBC</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
    </preShowHelpActionList>	
    <!-- Prebuild Actons-->
    <preBuildActionList>	
      <setInstallerVariable name="vcredist_executable" value="vcredist_x86.exe"/>
      <setInstallerVariable name="vcredist_executable" value="vcredist_x64.exe">
      <ruleList>
          <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
      </ruleList>
      </setInstallerVariable>
      <setInstallerVariable name="project.installerFilename" value="${product_shortname}-${product_version}-${platform_name}-x64.${platform_exec_suffix}">
            <ruleList>
                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
            </ruleList>
      </setInstallerVariable>
      <setInstallerVariable name="originalplatform" value="${platform_name}"/>
      <setInstallerVariable name="originalplatform" value="linux-x32">
          <ruleList>
              <compareText text="${platform_name}" value="linux"/>
          </ruleList>
      </setInstallerVariable>
    </preBuildActionList>
    <initializationActionList>
        <setInstallerVariable name="project.parameter(extract_mode).ask" value="0"/>
        <setInstallerVariable name="productVersion" persist="1" value="PG_VERSION_PSQLODBC" />
		
	    <!-- Abort Installation as trying to  run a 32-bit installer on 64-bit machine -->
        <throwError>
          <customErrorMessage>${msg(platform.not.match)}</customErrorMessage>
          <text>Unknown Error</text>
          <ruleList>
            <platformTest type="linux-x64"/>
            <compareText text="${originalplatform}" value="linux-x32"/>
          </ruleList>
        </throwError>
		
        <!-- WIN : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="${platform_install_prefix}\PostgreSQL\psqlODBC"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
	    <!-- LIN: Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="${platform_install_prefix}/PostgreSQL/psqlODBC"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
        <!-- MAC: Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="/Library/PostgreSQL/psqlODBC"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
	    <!-- MAC : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PostgreSQL/psqlODBC</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- LIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PostgreSQL/psqlODBC</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
		
        <!-- WIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PostgreSQL\psqlODBC</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable name="odbcinstpath" value="">
            <persist>1</persist>
        </setInstallerVariable>
    </initializationActionList>
	
    <preInstallationActionList>
     <!-- Creating a temporary directory -->
     <createTempDir dirPrefix="${product_shortname}"/>
        <actionGroup>
            <actionList>
                <setInstallerVariable name="branding" value=""/>
                <!-- Do not create uninstaller in case of extract-only mode -->
                <setInstallerVariable name="createUninstaller" value="0" persist="1"/>
            </actionList>
            <ruleList>
                <isTrue value="${extract_mode}"/>
            </ruleList>
        </actionGroup>

        <!-- Do not perform the below actions in case of extract-only mode -->
        <actionGroup>
            <actionList>
                <!-- Abort installation if not super-user and not running in extract-only mode-->
                <throwError text="${msg(Installer.Warning.RootPrivileges)}">
                    <ruleList>
                       <isFalse value="${installer_is_root_install}"/>
                    </ruleList>
                </throwError>
                <setInstallerVariable name="project.windowsSoftwareRegistryPrefix" value="${project.vendor}\${project.fullName}"/>

                <!-- Creates the ini file if not exits -->
                <touchFile path="/etc/postgres-reg.ini">
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </touchFile>
            	
                <!-- LIN & MAC: Get the branding & check Previous Installation of psqlODBC -->
                <actionGroup>
                    <actionList>
                        <!-- Get the branding. -->
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <key>Branding</key>
                            <section>psqlODBC</section>
                            <variable>iBranding</variable>
                        </iniFileGet>
            			
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>psqlODBC</section>
                            <key>Version</key>
                            <variable>psqlODBCVersion</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
            	
                <!-- WIN: Get the branding & check Previous Installation of psqlODBC-->
                <actionGroup>
                    <actionList>
            		
            			<!-- Get the branding -->
                        <registryGet>
                            <name>Branding</name>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\psqlODBC</key>
                            <variable>iBranding</variable>
                        </registryGet>
            			
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\psqlODBC</key>
                            <name>Version</name>
                            <variable>psqlODBCVersion</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installationType" value="upgrade" />
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${psqlODBCVersion}</text>
                            <logic>does_not_equal</logic>
                            <value/>
                        </compareText>
                    </ruleList>
                </actionGroup>

            	
            	<!-- If there appears to be an existing installation, with no Branding value. --> 
            	<!-- force the default value. Otherwise, set the branding to whatever we read, -->
            	<!-- or, set the default -->
            	
            	<!-- Existing, old install (version, but no branding) -->
            	<setInstallerVariable>
            		<name>branding</name>
            		<persist>0</persist>
            		<value>PostgreSQL</value>
            		<ruleList>
            			<compareText>
            				<logic>does_not_equal</logic>
            				<text>${psqlODBCVersion}</text>
            				<value></value>
            			</compareText>
            			<compareText>
            				<logic>equals</logic>
            				<text>${iBranding}</text>
            				<value></value>
            			</compareText>
            		</ruleList>
            	</setInstallerVariable>
            	
            	<!-- Existing install, with branding -->
            	<setInstallerVariable>
            		<name>branding</name>
            		<persist>0</persist>
            		<value>${iBranding}</value>
            		<ruleList>
            			<compareText>
            				<logic>does_not_equal</logic>
            				<text>${iBranding}</text>
            				<value></value>
            			</compareText>
            		</ruleList>
            	</setInstallerVariable>
            	
            	<!-- New install, nothing set on the command line -->
            	<setInstallerVariable>
            		<name>branding</name>
            		<persist>0</persist>
            		<value>Postgres Plus Add-ons</value>
            		<ruleList>
            			<compareText>
            				<logic>equals</logic>
            				<text>${branding}</text>
            				<value></value>
            			</compareText>
            		</ruleList>
            	</setInstallerVariable>
            	
                <logMessage>
                    <text>Using branding: ${branding}</text>
                </logMessage>
            	
                <!-- LIN & MAC: Set the installation directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>psqlODBC</section>
                            <key>InstallationDirectory</key>
                            <variable>installdir</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${psqlODBCVersion}</text>
                            <value/>
                        </compareText>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- WIN: Set the installation directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\psqlODBC</key>
                            <name>Location</name>
                            <variable>installdir</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${psqlODBCVersion}</text>
                            <value/>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <!-- LIN: Set the unixODBC Path -->
                <actionGroup>
                    <actionList>
                        <unpackFile>
                            <component>psqlODBC</component>
                            <destination>${system_temp_directory}/${product_shortname}_${random_number}/getodbcinstpath.sh</destination>
                            <folder>programfileslinux</folder>
                            <origin>installer/psqlODBC/getodbcinstpath.sh</origin>
                        </unpackFile>
                        <runProgram>
                            <program>${system_temp_directory}/${product_shortname}_${random_number}/getodbcinstpath.sh</program>
                            <workingDirectory>${system_temp_directory}/${product_shortname}_${random_number}</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                        <setInstallerVariableFromScriptOutput>
                            <name>odbcinstpath</name>
                            <exec>cat</exec>
                            <execArgs>odbcinstfilepath</execArgs>
                            <workingDirectory>${system_temp_directory}/${product_shortname}_${random_number}</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN-X64: Set the unixODBC Path -->
                <actionGroup>
                    <actionList>
                        <unpackFile>
                            <component>psqlODBC</component>
                            <destination>${system_temp_directory}/${product_shortname}_${random_number}/getodbcinstpath.sh</destination>
                            <folder>programfileslinux-x64</folder>
                            <origin>installer/psqlODBC/getodbcinstpath.sh</origin>
                        </unpackFile>
                        <runProgram>
                            <program>${system_temp_directory}/${product_shortname}_${random_number}/getodbcinstpath.sh</program>
                            <workingDirectory>${system_temp_directory}/${product_shortname}_${random_number}</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                        <setInstallerVariableFromScriptOutput>
                            <name>odbcinstpath</name>
                            <exec>cat</exec>
                            <execArgs>odbcinstfilepath</execArgs>
                            <workingDirectory>${system_temp_directory}/${product_shortname}_${random_number}</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux-x64</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN-PPC64: Set the unixODBC Path -->
                <actionGroup>
                    <actionList>
                        <unpackFile>
                            <component>psqlODBC</component>
                            <destination>${system_temp_directory}/${product_shortname}_${random_number}/getodbcinstpath.sh</destination>
                            <folder>programfileslinux-ppc64</folder>
                            <origin>installer/psqlODBC/getodbcinstpath.sh</origin>
                        </unpackFile>
                        <runProgram>
                            <program>${system_temp_directory}/${product_shortname}_${random_number}/getodbcinstpath.sh</program>
                            <workingDirectory>${system_temp_directory}/${product_shortname}_${random_number}</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                        <setInstallerVariableFromScriptOutput>
                            <name>odbcinstpath</name>
                            <exec>cat</exec>
                            <execArgs>odbcinstfilepath</execArgs>
                            <workingDirectory>${system_temp_directory}/${product_shortname}_${random_number}</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </setInstallerVariableFromScriptOutput>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux-ppc</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- MAC: Set the unixODBC Path -->
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="odbcinstpath" value="/Library/ODBC/odbcinst.ini"/>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- Create a Directory for installation -->
                <actionGroup>
                    <actionList>
                        <createDirectory path="/Library/ODBC"/>
                    </actionList>
                    <ruleList>
                        <fileTest>
                            <path>/Library/ODBC</path>
                            <condition>not_exists</condition>
                        </fileTest>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- MAC: Creates the ini file if not exits -->
                <touchFile path="/Library/ODBC/odbc.ini">
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </touchFile>
                <!-- MAC: Creates the ini file if not exits -->
                <touchFile path="/Library/ODBC/odbcinst.ini">
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </touchFile>
            	
                <!-- Linux : Checking for libodbc.so -->
                <setInstallerVariable name="odbcinstpath" value="/etc/odbcinst.ini" >
                    <ruleList>
                        <fileExists>
                           <path>/usr/lib/libodbc.so</path>
                        </fileExists>
                        <compareTextLength>
                            <length>0</length>
                            <logic>equals</logic>
                            <text>${odbcinstpath}</text>
                        </compareTextLength>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable name="odbcinstpath" value="/etc/odbcinst.ini" >
                    <ruleList>
                        <fileExists>
                           <path>/usr/lib/libodbc.so.1</path>
                        </fileExists>
                        <compareTextLength>
                            <length>0</length>
                            <logic>equals</logic>
                            <text>${odbcinstpath}</text>
                        </compareTextLength>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable> 
            	 
                <!-- Linux-X64 : Checking for libodbc.so -->
                <setInstallerVariable name="odbcinstpath" value="/etc/odbcinst.ini" >
                    <ruleList>
                        <fileExists>
                           <path>/usr/lib64/libodbc.so</path>
                        </fileExists>
                        <compareTextLength>
                            <length>0</length>
                            <logic>equals</logic>
                            <text>${odbcinstpath}</text>
                        </compareTextLength>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux-x64</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable name="odbcinstpath" value="/etc/odbcinst.ini" >
                    <ruleList>
                        <fileExists>
                           <path>/usr/lib64/libodbc.so.1</path>
                        </fileExists>
                        <compareTextLength>
                            <length>0</length>
                            <logic>equals</logic>
                            <text>${odbcinstpath}</text>
                        </compareTextLength>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>linux-x64</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable>
        
                <!-- Exit if unixODBC not found -->
                <actionGroup>
                    <actionList>
                        <throwError>
                            <customErrorMessage>${msg(error.unixodbc.notfound)}</customErrorMessage>
                            <text>Unknown Error</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <compareTextLength>
                            <length>0</length>
                            <logic>equals</logic>
                            <text>${odbcinstpath}</text>
                        </compareTextLength>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <setInstallerVariable name="odbcuninstallfile" value="${odbcinstpath}">
                    <persist>1</persist>
                </setInstallerVariable>
 
                <!-- WIN: Install redist --> 
                <actionGroup>
                  <actionList>
                     <setInstallerVariable name="vcredist_executable" value="vcredist_x86.exe"/>
                     <setInstallerVariable name="vcredist_executable" value="vcredist_x64.exe">
                     <ruleList>
                        <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
                     </ruleList>
                     </setInstallerVariable>
 
                     <!-- Unpacking the Script file to temporary directory -->
                     <unpackFile>
                       <component>psqlODBC</component>
                       <destination>${system_temp_directory}\${product_shortname}_${random_number}\${vcredist_executable}</destination>
                       <folder>redist</folder>
                       <origin>${vcredist_executable}</origin>
                     </unpackFile>
                     <!-- Running VC Dist file | WIN  -->  
                     <runProgram>
                        <program>${system_temp_directory}\${product_shortname}_${random_number}\${vcredist_executable}</program>
                        <programArguments>"/Q"</programArguments>
                        <workingDirectory>${system_temp_directory}\${product_shortname}_${random_number}</workingDirectory>
                        <showMessageOnError>0</showMessageOnError>
                        <abortOnError>0</abortOnError>     
                     </runProgram>
                     <throwError>
                        <text>${msg(error.installing.runtimes)}</text>
                        <ruleList>
                           <compareText>
                              <logic>does_not_equal</logic>
                              <text>3010</text>
                              <value>${program_exit_code}</value>
                           </compareText>
                           <compareText>
                              <logic>does_not_equal</logic>
                              <text>0</text>
                              <value>${program_exit_code}</value>
                           </compareText>
                        </ruleList>
                     </throwError>
                  </actionList>
                  <ruleList>
                     <compareText>
                        <logic>equals</logic>
                        <text>${platform_name}</text>
                        <value>windows</value>
                     </compareText>
                  </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </actionGroup>
    </preInstallationActionList>
   <readyToInstallActionList>

	   <logMessage>
                    <text>conf dir: ${installdir}\etc\openssl.cnf</text>
           </logMessage>

	   <actionGroup>
            <actionList>
               <copyFile>
                   <origin>${installdir}\etc\openssl.cnf</origin>
                   <destination>${installdir}\etc\openssl.cnf.bak1</destination>
               </copyFile>
            </actionList>
           <ruleList>
               <compareText>
                   <logic>does_not_equal</logic>
                   <text>${psqlODBCVersion}</text>
                   <value/>
               </compareText>
	       <fileTest>
                    <path>${installdir}\etc\openssl.cnf</path>
                    <condition>exists</condition>
               </fileTest>
	       <compareText>
                   <logic>equals</logic>
                   <text>${platform_name}</text>
                   <value>windows</value>
              </compareText>
	      <isFalse value="${extract_mode}"/>
           </ruleList>
        </actionGroup>
   </readyToInstallActionList>
    <postInstallationActionList>

        <!-- Setting the installation directory in the PostgreSQL.ini file -->
        <actionGroup>
            <actionList>
                <substitute>
                    <files>${installdir}/templates/PostgreSQL.ini</files>
                    <substitutionList>
                        <substitution>
                            <pattern>@@INSTALLDIR@@</pattern>
                            <value>${installdir}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
            </actionList>
        </actionGroup>

        <!-- Do not perform the below actions in case of extract-only mode -->
        <actionGroup>
            <actionList>
                <actionGroup>
                    <actionList>
                    <!-- LIN & MAC: Write InstallDir and Version to postgres-reg.ini File -->
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>psqlODBC</section>
                            <key>Description</key>
                            <value>${msg(install.summary)}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>psqlODBC</section>
                            <key>InstallationDirectory</key>
                            <value>${installdir}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>psqlODBC</section>
                            <key>Version</key>
                            <value>${product_version}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>${odbcinstpath}</file>
                            <section>psqlODBC</section>
                            <key>Description</key>
                            <value>PostgreSQL ODBC driver</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>${odbcinstpath}</file>
                            <section>psqlODBC</section>
                            <key>Driver</key>
                            <value>${installdir}/lib/psqlodbcw.so</value>
                        </iniFileSet>
        
        	      	    <!-- LIN & LIN-64: Configure psqlODBC -->
                        <runProgram>
                            <program>${installdir}/installer/psqlODBC/configpsqlodbc.sh</program>
                            <programArguments>"${installdir}"</programArguments>
                            <progressText/>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <text>${platform_name}</text>
                                    <value>linux</value>
                                </compareText>
                            </ruleList>
                        </runProgram>
         			
                	    <!-- LIN & MAC: Create Menu Shortcuts -->
                        <runProgram>
                            <program>${installdir}/installer/psqlODBC/createshortcuts.sh</program>
                            <programArguments>"${installdir}" "${branding}" "${system_temp_directory}/${product_shortname}_${random_number}"</programArguments>
                            <progressText>${msg(progress.text.creating.shortcuts)}</progressText>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        		
                <!-- MAC: register with Driver manager -->
                <actionGroup>
                    <actionList>
                        <iniFileSet>
                            <file>${odbcinstpath}</file>
                            <section>ODBC Drivers</section>
                            <key>psqlODBC</key>
                            <value>Installed</value>
                        </iniFileSet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        		
                <!-- Deleting the conf file if exists -->
                <actionGroup>
                    <actionList>
                        <deleteFile>
                            <path>/etc/ld.so.conf.d/psqlODBC.conf</path>
                        </deleteFile>
                    </actionList>
                    <ruleList>
                        <fileExists>
                            <path>/etc/ld.so.conf.d/psqlODBC.conf</path>
                        </fileExists>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        		
                <!-- Adding the driver installation conf file -->
                <actionGroup>
                    <actionList>
                        <addTextToFile>
                            <file>/etc/ld.so.conf.d/psqlODBC.conf</file>
                            <text>${installdir}/lib</text>
                        </addTextToFile>
                    </actionList>
                    <ruleList>
                        <fileExists>
                            <path>/etc/ld.so.conf.d</path>
                        </fileExists>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
       
                <!--WIN: Set OPENSSL_CONF environment variable if it does not exist already -->
                <actionGroup>
                    <actionList>
                        <setInstallerVariable>
                            <name>default_opensslconf_value</name>
                            <persist>1</persist>
                            <value>${env(OPENSSL_CONF)}</value>
                        </setInstallerVariable>
                        <addEnvironmentVariable>
                            <abortOnError>0</abortOnError>
                            <name>OPENSSL_CONF</name>
                            <scope>system</scope>
                            <showMessageOnError>0</showMessageOnError>
                            <value>${installdir}\etc\openssl.cnf</value>
                            <ruleList>
                                <compareText logic="equals" text="${default_opensslconf_value}" value=""/>
                            </ruleList>
                        </addEnvironmentVariable>
                    </actionList>
                    <ruleList>
                        <compareText logic="equals" text="${platform_name}" value="windows"/>
                    </ruleList>
                </actionGroup>
                
                <!--WIN: Register ODBC Drivers -->
                <actionGroup>
                    <actionList>
                         <!-- ANSI -->
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>APILevel</name>
                            <value>1</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>ConnectFunctions</name>
                            <value>YYN</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>Driver</name>
                            <value>${installdir}\bin\psqlodbc30a.dll</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>DriverODBCVer</name>
                            <value>${productVersion}</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>FileUsage</name>
                            <value>0</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>Setup</name>
                            <value>${installdir}\bin\psqlodbc30a.dll</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
                            <name>SQLLevel</name>
                            <value>1</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ODBC Drivers</key>
                            <name>PostgreSQL ODBC Driver(ANSI)</name>
                            <value>Installed</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <!-- UNICODE -->
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>APILevel</name>
                            <value>1</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>ConnectFunctions</name>
                            <value>YYN</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>Driver</name>
                            <value>${installdir}\bin\psqlodbc35w.dll</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>DriverODBCVer</name>
                            <value>${productVersion}</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>FileUsage</name>
                            <value>0</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>Setup</name>
                            <value>${installdir}\bin\psqlodbc35w.dll</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
                            <name>SQLLevel</name>
                            <value>1</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                         <registrySet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ODBC Drivers</key>
                            <name>PostgreSQL ODBC Driver(UNICODE)</name>
                            <value>Installed</value>
                            <progressText>${msg(progress.text.register.odbc.windows)}</progressText>
                         </registrySet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

           <actionGroup>
              <actionList>
            <renameFile>
              <origin>${installdir}\etc\openssl.cnf</origin>
              <destination>${installdir}\etc\openssl.cnf.new</destination>
              <ruleList>
                <compareText logic="does_not_equal" text="${psqlODBCVersion}" value=""/>
              </ruleList>
            </renameFile>
            <addFilesToUninstaller>
              <files>${installdir}\etc\openssl.cnf.new</files>
              <ruleList>
                <compareText logic="does_not_equal" text="${psqlODBCVersion}" value=""/>
              </ruleList>
            </addFilesToUninstaller>
            <copyFile>
              <origin>${installdir}\etc\openssl.cnf.bak1</origin>
              <destination>${installdir}\etc\openssl.cnf</destination>
            </copyFile>
            <deleteFile>
              <path>${installdir}\etc\openssl.cnf.bak1</path>
            </deleteFile>
          </actionList>
          <ruleList>
            <fileTest>
              <path>${installdir}\etc\openssl.cnf.bak1</path>
              <condition>exists</condition>
            </fileTest>
	    <compareText>
                <logic>equals</logic>
                <text>${platform_name}</text>
                <value>windows</value>
            </compareText>
          </ruleList>
        </actionGroup>
        
                <!-- Branding info -->
                <logMessage>
                    <text>Write the branding to the ini file...</text>
                </logMessage>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>psqlODBC</section>
                    <key>Branding</key>
                    <value>${branding}</value>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </iniFileSet>
                <registrySet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\psqlODBC</key>
                    <name>Branding</name>
                    <value>${branding}</value>
                </registrySet>
            </actionList>
            <ruleList>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </actionGroup>
    <actionGroup>
     <actionList>
       <deleteFile>
         <path>${system_temp_directory}/${product_shortname}_${random_number}</path>
       </deleteFile>
     </actionList>
     <ruleList>
       <fileExists path="${system_temp_directory}/${product_shortname}_${random_number}"/>
     </ruleList>
   </actionGroup>
  </postInstallationActionList>
  <installationAbortedActionList>
    <deleteFile path="${system_temp_directory}/${product_shortname}_${random_number}" abortOnError="0" showMessageOnError="0">
      <ruleList>
        <fileTest path="${system_temp_directory}/${product_shortname}_${random_number}" condition="exists"/>
      </ruleList>
    </deleteFile>
  </installationAbortedActionList>

    <!-- preUninstallation actions -->
    <preUninstallationActionList>

        <!-- Abort uninstallation if not super-user/Administrator -->
        <actionGroup>
            <actionList>
                <showWarning text="${msg(Installer.Warning.UninstallerAdministratorPrivileges)}"/>
                <exit/>
            </actionList>
            <ruleList>
                <isFalse value="${installer_is_root_install}"/>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <showWarning text="${msg(Installer.Warning.UninstallerRootPrivileges)}"/>
                <exit/>
            </actionList>
            <ruleList>
                <isFalse value="${installer_is_root_install}"/>
                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>

        <!-- LIN & MAC: Unsetting the values in INI File-->
        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>psqlODBC</section>
                    <key>Description</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>psqlODBC</section>
                    <key>InstallationDirectory</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>psqlODBC</section>
                    <key>Version</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>${odbcuninstallfile}</file>
                    <section>psqlODBC</section>
                    <key>Description</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>${odbcuninstallfile}</file>
                    <section>psqlODBC</section>
                    <key>Driver</key>
                    <value/>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
        <!-- MAC: unregister with Driver manager -->
        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>${odbcuninstallfile}</file>
                    <section>ODBC Drivers</section>
                    <key>psqlODBC</key>
                    <value/>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
        <!-- LIN : Remove Menu shortcuts -->
        <actionGroup>
            <actionList>
                <runProgram>
                    <program>${installdir}/installer/psqlODBC/removeshortcuts.sh</program>
                    <programArguments>"${installdir}" "${branding}"</programArguments>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                </runProgram>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
        <!-- MAC : Remove Menu shortcuts -->
        <actionGroup>
            <actionList>
                <deleteFile>
                    <path>/Applications/${branding}/psqlODBC Documentation.app</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
		
        <!-- Deleting the driver installion conf file -->
        <actionGroup>
            <actionList>
                <deleteFile>
                    <path>/etc/ld.so.conf.d/psqlODBC.conf</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>

       <!--WIN:  Un-registering ODBC Drivers, registry Deletes -->
       <registryDelete>
           <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(UNICODE)</key>
           <showMessageOnError>0</showMessageOnError>
           <abortOnError>0</abortOnError>
           <ruleList>
               <compareText>
                  <logic>equals</logic>
                  <text>${platform_name}</text>
                  <value>windows</value>
               </compareText>
           </ruleList>
       </registryDelete>

       <registryDelete>
           <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\PostgreSQL ODBC Driver(ANSI)</key>
           <showMessageOnError>0</showMessageOnError>
           <abortOnError>0</abortOnError>
           <ruleList>
               <compareText>
                  <logic>equals</logic>
                  <text>${platform_name}</text>
                  <value>windows</value>
               </compareText>
           </ruleList>
       </registryDelete>

       <registryDelete>
           <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ODBC Drivers</key>
           <name>PostgreSQL ODBC Driver(ANSI)</name>
           <showMessageOnError>1</showMessageOnError>
           <abortOnError>0</abortOnError>
           <ruleList>
               <compareText>
                  <logic>equals</logic>
                  <text>${platform_name}</text>
                  <value>windows</value>
               </compareText>
           </ruleList>
      </registryDelete>       

      <registryDelete>
           <key>HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ODBC Drivers</key>
           <name>PostgreSQL ODBC Driver(UNICODE)</name>
           <showMessageOnError>1</showMessageOnError>
           <abortOnError>0</abortOnError>
           <ruleList>
               <compareText>
                  <logic>equals</logic>
                  <text>${platform_name}</text>
                  <value>windows</value>
               </compareText>
           </ruleList>
      </registryDelete>
	  
		<!-- Cleanup the branding info -->
		<iniFileSet>
			<file>/etc/postgres-reg.ini</file>
			<section>psqlODBC</section>
			<key>Branding</key>
			<value></value>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
		</iniFileSet>
        <registryDelete>
            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\psqlODBC</key>
			<name>Branding</name>
        </registryDelete>

        <!--WIN: delete the OPENSSL_CONF variable if it's value is the installdir -->
        <actionGroup>
            <actionList>
                <setInstallerVariable>
                    <name>opensslconf_value</name>
                    <persist>1</persist>
                    <value>${env(OPENSSL_CONF)}</value>
                </setInstallerVariable>
                <deleteEnvironmentVariable>
                    <name>OPENSSL_CONF</name>
                    <scope>system</scope>
                        <ruleList>
                            <compareText logic="equals" text="${opensslconf_value}" value="${installdir}\etc\openssl.cnf"/>
                        </ruleList>
                </deleteEnvironmentVariable> 
            </actionList>
                <ruleList>
                    <compareText logic="equals" text="${platform_name}" value="windows"/>
                </ruleList>
        </actionGroup>
             
    </preUninstallationActionList>
    <componentList>
        <component>
            <name>psqlODBC</name>
            <description>Default Component</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
			
                <!--LIN: Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/installer</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux/scripts</origin>
                        </distributionDirectory>
			<distributionFile origin="staging/linux/psqlODBC_3rd_party_licenses.txt"/>
                    </distributionFileList>
                </folder>
				
        	    <!--LIN-X64: Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/installer</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-x64/scripts</origin>
                        </distributionDirectory>
			<distributionFile origin="staging/linux-x64/psqlODBC_3rd_party_licenses.txt"/>
                    </distributionFileList>
                </folder>
        	<!--LIN-PPC64: Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux-ppc64</name>
                    <platforms>linux-ppc</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-ppc64/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-ppc64/installer</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/linux-ppc64/scripts</origin>
                        </distributionDirectory>
			<distributionFile origin="staging/linux-ppc64/psqlODBC_3rd_party_licenses.txt"/>
                    </distributionFileList>
                </folder>
				
	            <!--MAC: Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/lib</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/installer</origin>
                        </distributionDirectory>
                        <distributionDirectory>
                            <origin>staging/osx/scripts</origin>
                        </distributionDirectory>
			<distributionFile origin="staging/osx/psqlODBC_3rd_party_licenses.txt"/>
                    </distributionFileList>
                </folder>
				
                <!--WIN : Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
			<distributionFile origin="staging/@@WINDIR@@/psqlODBC_3rd_party_licenses.txt"/>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>scriptfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/@@WINDIR@@/scripts</origin>
                        </distributionDirectory>	
                        <distributionDirectory>
                            <origin>staging/@@WINDIR@@/bin</origin>
                        </distributionDirectory>	
                        <distributionDirectory>
                            <origin>staging/@@WINDIR@@/etc</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>VC++ Runtime</description>
                    <destination>${system_temp_directory}\${product_shortname}_${random_number}</destination>
                    <name>redist</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/@@WINDIR@@/${vcredist_executable}</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
			
            <!-- WIN: Start Menu -->
            <startMenuShortcutList>
			
                 <!-- Launch psqlODBC -->
                 <startMenuLinkShortcut>
                    <comment>psqlODBC Documentation</comment>
                    <name>psqlODBC Documentation</name>
                    <runInTerminal>0</runInTerminal>
                    <url>http://psqlodbc.projects.postgresql.org/</url>
                    <windowsIcon>${installdir}\scripts\images\pg-launchOdbcDocs.ico</windowsIcon>
                    <ruleList>
                        <isFalse value="${extract_mode}"/>
                    </ruleList>
                 </startMenuLinkShortcut>
            </startMenuShortcutList>
        </component>
    </componentList>
	
    <parameterList>
        <booleanParameter name="extract_mode" cliOptionName="extract-only" default="0" ask="1" cliOptionShow="1"/>
        <booleanParameter name="admin_rights" cliOptionName="require-admin" default="0" ask="0" cliOptionShow="0"/>
        <stringParameter name="originalplatform" ask="0" cliOptionShow="0"/>
        <stringParameter name="branding" cliOptionName="branding" ask="0" cliOptionShow="0"/>	
        <directoryParameter>
	    <preShowPageActionList>
                <wow64FsRedirection action="enable" />
            </preShowPageActionList>		
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value>${default_installdir}</value>
            <default/>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
            <ruleList>
                <compareText>
                    <text>${psqlODBCVersion}</text>
                    <logic>equals</logic>
                    <value/>
                </compareText>
            </ruleList>
	    <postShowPageActionList>
                <wow64FsRedirection action="disable" />
            </postShowPageActionList>		
	        <!-- Validating whether installdir is empty -->
            <validationActionList>
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installdir" value="${default_installdir}" />
                        <throwError>
                            <text>${msg(psqlodbc.installdir.empty)}</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${installdir}</text>
                            <logic>equals</logic>
                            <value />
                        </compareText>
                    </ruleList>
                </actionGroup>
            </validationActionList>
			
            <!-- Validating whether installdir contains whitespaces (Linux) -->
            <postShowPageActionList>
                <actionGroup>
                    <actionList>
                        <showWarning>
                            <text>${msg(psqlodbc.installdir.error)}</text>
                        </showWarning>
                        <setInstallerVariable name="next_page" value="installdir"/>
                    </actionList>
                    <ruleList>
                       <regExMatch>
                           <text>${installdir}</text>
                           <logic>does_not_match</logic>
                           <pattern>^/([0-9a-zA-Z_/\.\-]*)$</pattern>
                       </regExMatch>
                       <compareText>
                           <logic>does_not_equal</logic>
                           <text>${platform_name}</text>
                           <value>windows</value>
                       </compareText>
                    </ruleList>
                </actionGroup>
                <!-- Validating whether installdir is valid (Windows) -->
                <actionGroup>
                   <actionList>
                     <setInstallerVariable name="installdir" value="${default_installdir}" />
                     <showWarning>
                        <text>${msg(psqlodbc.installdir.error)}</text>
                     </showWarning>
                     <setInstallerVariable name="next_page" value="installdir"/>
                   </actionList>
                   <ruleList>
                       <regExMatch>
                         <text>${installdir}</text>
                         <logic>does_not_match</logic>
                         <pattern>^([a-zA-Z]:)\\([0-9a-zA-Z_\\\s\.\-\(\)]*)$</pattern>
                       </regExMatch>
                       <compareText>
                         <text>${platform_name}</text>
                         <logic>equals</logic>
                         <value>windows</value>
                       </compareText>
                   </ruleList>
                 </actionGroup>
            </postShowPageActionList>
        </directoryParameter>

	<!-- Explain that we're using an existing installation directory -->
        <labelParameter>
            <name>upgrade</name>
            <title>${msg(upgrade.existing.installation.title)}</title>
            <description>${msg(upgrade.existing.installation.description)}</description>
	     <ruleList>
                <compareText>
                    <text>${psqlODBCVersion}</text>
                    <logic>does_not_equal</logic>
                    <value/>
                </compareText>
                <isFalse value="${extract_mode}" />
            </ruleList>
        </labelParameter>	

    </parameterList>
</project>
