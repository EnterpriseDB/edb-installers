<project>
    <!-- Package details -->
    <shortName>plsecure</shortName>
    <fullName>PL/Secure</fullName>
    <version>PG_VERSION_PLPGSQLO-PG_BUILDNUM_PLPGSQLO</version>

    <!-- These options are used on Windows -->
    <startMenuGroupName/>

    <!-- Product Specific Options -->
    <productDisplayName>PL/Secure ${productVersion}</productDisplayName>
    <productComments>${product_fullname} ${productVersion}</productComments>
    <productUrlHelpLink>http://www.enterprisedb.com</productUrlHelpLink>
    <productUrlInfoAbout>http://www.enterprisedb.com</productUrlInfoAbout>

    <!-- The options are used for RPM registration -->
    <description>PL/Secure for PL/pgSQL</description>
    <summary>${msg(install.summary)}</summary>
    <vendor>EnterpriseDB</vendor>
    <release>1</release>


    <!-- set if it is a native windows 64 bit-->
    <windows64bitMode>@@WIN64MODE@@</windows64bitMode>
    <replaceLockedFilesOnReboot>1</replaceLockedFilesOnReboot>

    <!-- Installer Size -->
    <width>550</width>
    <height>400</height>

    <!-- Misc package options -->
    <installerFilename>${product_shortname}-${product_version}-${platform_name}.${platform_exec_suffix}</installerFilename>
    <enableRollback>0</enableRollback>
    <requireInstallationByRootUser>${admin_rights}</requireInstallationByRootUser>
    <saveRelativePaths>1</saveRelativePaths>
    <outputDirectory>../output</outputDirectory>
    <uninstallerDirectory>${installdir}</uninstallerDirectory>
    <uninstallerName>uninstall-${product_shortname}</uninstallerName>
    <unattendedModeUI>minimal</unattendedModeUI>
    <compressionAlgorithm>lzma</compressionAlgorithm>
    <installationLogFile>${system_temp_directory}/install-${product_shortname}.log</installationLogFile>
    <uninstallationLogFile>${system_temp_directory}/uninstall-${product_shortname}.log</uninstallationLogFile>
    <allowWindowResize>1</allowWindowResize>
    <windowsSoftwareRegistryPrefix/>
    <wrapLicenseFileText>1</wrapLicenseFileText>
    <licenseFile encoding="utf-8">resources/licence.txt</licenseFile>

    <!-- Images -->
    <disableSplashScreen>1</disableSplashScreen>
    <leftImage>../resources/pg-side.png</leftImage>

    <!-- i18n files for the UI -->
    <allowedLanguages>en</allowedLanguages>
    <customLanguageFileList>
        <language>
            <code>en</code>
            <encoding>iso8859-1</encoding>
            <file>i18n/en.lng</file>
        </language>
    </customLanguageFileList>

    <!-- Prebuild Actons-->
    <preBuildActionList>
        <setInstallerVariable name="project.installerFilename" value="${product_shortname}-${product_version}-windows-x64.${platform_exec_suffix}">
            <ruleList>
                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
            </ruleList>
        </setInstallerVariable>
        <setInstallerVariable name="originalplatform" value="${platform_name}"/>
        <setInstallerVariable name="originalplatform" value="linux-x32">
            <ruleList>
                <compareText text="${platform_name}" value="linux"/>
            </ruleList>
        </setInstallerVariable>
    </preBuildActionList>

    <preShowHelpActionList>
        <!-- Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PostgreSQL/PG_MAJOR_VERSION</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>

        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PostgreSQL/PG_MAJOR_VERSION</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>

        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PostgreSQL\PG_MAJOR_VERSION</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
    </preShowHelpActionList>

    <!-- Initialisation actions -->
    <initializationActionList>
        <setInstallerVariable name="productVersion" persist="1" value="PG_VERSION_PLPGSQLO"/>
        <setInstallerVariable name="superuser" persist="0" value=""/>
        <setInstallerVariable name="installdir" persist="0" value=""/>
        <!-- Abort Installation as trying to    run a 32-bit installer on 64-bit machine -->
        <throwError>
            <customErrorMessage>${msg(platform.not.match)}</customErrorMessage>
            <text>Unknown Error</text>
            <ruleList>
                <platformTest type="linux-x64"/>
                <compareText text="${originalplatform}" value="linux-x32"/>
            </ruleList>
        </throwError>
        <!-- Set the plpgsqlo version(if exists) -->
        <setInstallerVariable name="plpgsqloVersion" value="">
            <persist>0</persist>
        </setInstallerVariable>

        <!-- WIN: Set the pghome default value -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}\PostgreSQL\PG_MAJOR_VERSION"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- LIN: Set the pghome default value  -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="${platform_install_prefix}/PostgreSQL/PG_MAJOR_VERSION"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC: Set the  pghome default value  -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="defaultpghome" value="/Library/PostgreSQL/PG_MAJOR_VERSION"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>

        <!-- Registration Pre-Installation Action List -->
        <include file="staging/registration_plus_initialization.xml"/>

    </initializationActionList>
    <!-- Preinstallation actions -->
    <preInstallationActionList>

        <!-- Do not perform the below actions in case of extract-only mode -->
        <actionGroup>
            <actionList>
                <!-- Abort installation if not super-user and not running in extract-only mode-->
                <throwError text="${msg(Installer.Warning.RootPrivileges)}">
                    <ruleList>
                        <isFalse value="${installer_is_root_install}"/>
                    </ruleList>
                </throwError>
                <setInstallerVariable name="windowsSoftwareRegistryPrefix" value="${vendor}\${fullName}" persist="1"/>
                <!-- Creates the ini file if not exits -->
                <touchFile path="/etc/postgres-reg.ini">
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </touchFile>
                <!-- WIN: Get the branding & Check Previous Installation of plpgsqlo -->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\plpgsqlo-PG_MAJOR_VERSION</key>
                            <name>Version</name>
                            <variable>plpgsqloVersion</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN & MAC: Get the branding & Check Previous Installation of plpgsqlo -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>plpgsqlo/PG_MAJOR_VERSION</section>
                            <key>Version</key>
                            <variable>plpgsqloVersion</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- WIN: Set Installation Directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\plpgsqlo-PG_MAJOR_VERSION</key>
                            <name>Location</name>
                            <variable>installdir</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${plpgsqloVersion}</text>
                            <value/>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN | MAC : Set Installation Directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>plpgsqlo/PG_MAJOR_VERSION</section>
                            <key>InstallationDirectory</key>
                            <variable>installdir</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${plpgsqloVersion}</text>
                            <value/>
                        </compareText>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <!-- Get the installation directory from previous pg installation -->
                <!--    Postgres Installation would have set these values -->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql-PG_MAJOR_VERSION</key>
                            <name>Base Directory</name>
                            <variable>pginstalldir</variable>
                        </registryGet>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql-PG_MAJOR_VERSION</key>
                            <name>Super User</name>
                            <variable>superuser</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- LIN & MAC: Set the installation Directory from registry. -->
                <!--    plpgsqlo Installation would have set these values -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostgreSQL/PG_MAJOR_VERSION</section>
                            <key>InstallationDirectory</key>
                            <variable>pginstalldir</variable>
                        </iniFileGet>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>PostgreSQL/PG_MAJOR_VERSION</section>
                            <key>Superuser</key>
                            <variable>superuser</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <!-- Set the default value of installdir as found in registry if it is found there -->
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="default_installdir" value="${pginstalldir}"/>
                    </actionList>
                    <ruleList>
                        <compareText logic="does_not_equal" text="${pginstalldir}" value=""/>
                    </ruleList>
                </actionGroup>


                <!-- Set the default value of installdir if it is not found in registry -->
                <actionGroup>
                    <actionList>
                        <!-- Set the default installation directory -->
                        <setInstallerVariable>
                            <name>default_installdir</name>
                            <persist>1</persist>
                            <value>/Library/PostgreSQL/PG_MAJOR_VERSION</value>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${platform_name}</text>
                                    <value>osx</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>

                        <setInstallerVariable>
                            <name>default_installdir</name>
                            <persist>1</persist>
                            <value>${platform_install_prefix}/PostgreSQL/PG_MAJOR_VERSION</value>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <text>${platform_name}</text>
                                    <value>linux</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>

                        <setInstallerVariable>
                            <name>default_installdir</name>
                            <persist>1</persist>
                            <value>${platform_install_prefix}\PostgreSQL\PG_MAJOR_VERSION</value>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${platform_name}</text>
                                    <value>windows</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariable>
                    </actionList>
                    <ruleList>
                        <compareText logic="equals" text="${pginstalldir}" value=""/>
                    </ruleList>
                </actionGroup>

                <setInstallerVariable name="installdir" value="${default_installdir}">
                    <ruleList>
                        <stringTest text="${installdir}" type="empty"/>
                    </ruleList>
                </setInstallerVariable>

                <!-- In case of unattended mode raise error if installdir is not valid -->
                <!-- LIN | MAC : show error if the installdir is not valid -->
                <actionGroup>
                    <actionList>
                        <throwError text="${msg(plpgsqlo.installdir.pgerror)}"/>
                    </actionList>
                    <ruleList>
                        <ruleGroup>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                                <fileTest>
                                    <path>${installdir}/bin/psql</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                                <fileTest>
                                    <path>${installdir}/bin/createdb</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                                <fileTest>
                                    <path>${installdir}/bin/createlang</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                                <fileTest>
                                    <path>${installdir}/bin/pg_config</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                                <compareText>
                                    <text>${platform_name}</text>
                                    <logic>does_not_equal</logic>
                                    <value>windows</value>
                                </compareText>
                            </ruleList>
                        </ruleGroup>
                        <compareText>
                            <text>${installer_ui}</text>
                            <logic>equals</logic>
                            <value>unattended</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <!-- WIN: show error if the installdir is not valid -->
                <actionGroup>
                    <actionList>
                        <throwError text="${msg(plpgsqlo.installdir.pgerror)}"/>
                    </actionList>
                    <ruleList>
                        <ruleGroup>
                            <ruleEvaluationLogic>or</ruleEvaluationLogic>
                            <ruleList>
                                <fileTest>
                                    <path>${installdir}\bin\psql.exe</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                                <fileTest>
                                    <path>${installdir}\bin\createdb.exe</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                                <fileTest>
                                    <path>${installdir}\bin\createlang.exe</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                                <fileTest>
                                    <path>${installdir}\bin\pg_config.exe</path>
                                    <condition>not_exists</condition>
                                </fileTest>
                            </ruleList>
                        </ruleGroup>
                        <ruleGroup>
                            <ruleList>
                                <compareText>
                                    <text>${platform_name}</text>
                                    <logic>equals</logic>
                                    <value>windows</value>
                                </compareText>
                            </ruleList>
                        </ruleGroup>
                        <compareText>
                            <text>${installer_ui}</text>
                            <logic>equals</logic>
                            <value>unattended</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <setInstallerVariableFromScriptOutput>
                            <name>pg_version_str</name>
                            <exec>${installdir}/bin/pg_config</exec>
                            <execArgs>--version</execArgs>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                            <ruleList>
                                <compareText>
                                    <text>${platform_name}</text>
                                    <logic>does_not_equal</logic>
                                    <value>windows</value>
                                </compareText>
                                <fileTest>
                                    <path>${installdir}/bin/pg_config</path>
                                    <condition>exists</condition>
                                </fileTest>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromScriptOutput>
                            <name>pg_version_str</name>
                            <exec>${installdir}\bin\pg_config.exe</exec>
                            <execArgs>--version</execArgs>
                            <workingDirectory>${installdir}\bin</workingDirectory>
                            <ruleList>
                                <compareText>
                                    <text>${platform_name}</text>
                                    <logic>equals</logic>
                                    <value>windows</value>
                                </compareText>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
                        <setInstallerVariableFromRegEx>
                            <name>pg_version</name>
                            <text>${pg_version_str}</text>
                            <pattern>^PostgreSQL ([0-9].[0-9]).?[\w]*$</pattern>
                            <substitution>\1</substitution>
                            <ruleList>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>${pg_version_str}</text>
                                    <value/>
                                </compareText>
                            </ruleList>
                        </setInstallerVariableFromRegEx>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${installer_ui}</text>
                            <logic>equals</logic>
                            <value>unattended</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <throwError text="${msg(plpgsqlo.incompatible.pg.error)}"/>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${pg_version}</text>
                            <value>PG_MAJOR_VERSION</value>
                        </compareText>
                    </ruleList>
                    <ruleList>
                        <compareText>
                            <text>${installer_ui}</text>
                            <logic>equals</logic>
                            <value>unattended</value>
                        </compareText>
                    </ruleList>
                </actionGroup>

                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="superuser" value="postgres"/>
                    </actionList>
                    <ruleList>
                        <compareTextLength>
                            <length>0</length>
                            <logic>equals</logic>
                            <text>${superuser}</text>
                        </compareTextLength>
                    </ruleList>
                </actionGroup>

                <!-- Check if 32 bit PL/Secure installer is being tried out aginst PG x64 bit or vice versa -->
                <actionGroup>
                    <actionList>
                        <registryGet wowMode="64" variable="pginstalldir">
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql-x64-PG_MAJOR_VERSION</key>
                            <name>Base Directory</name>
                            <ruleList>
                                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="does_not_equal"/>
                            </ruleList>
                        </registryGet>
                        <registryGet wowMode="32" variable="pginstalldir">
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql-PG_MAJOR_VERSION</key>
                            <name>Base Directory</name>
                            <ruleList>
                                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
                            </ruleList>
                        </registryGet>
                        <stringModify variable="dos_path_installdir" logic="toupper" text="${installdir.dos}"/>
                        <stringModify variable="dos_path_pginstalldir" logic="toupper" text="${pginstalldir.dos}"/>
                        <throwError text="${msg(plpgsqlo.incompatible.pg64.error)}">
                            <ruleList>
                                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="does_not_equal"/>
                                <compareValues logic="equals" value1="${dos_path_installdir}" value2="${dos_path_pginstalldir}"/>
                            </ruleList>
                        </throwError>
                        <throwError text="${msg(plpgsqlo.incompatible.pg32.error)}">
                            <ruleList>
                                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
                                <compareValues logic="equals" value1="${dos_path_installdir}" value2="${dos_path_pginstalldir}"/>
                            </ruleList>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <platformTest type="windows-x64"/>
                        <compareText logic="equals" text="${installer_ui}" value="unattended"/>
                        <isFalse value="${extract_mode}"/>
                    </ruleList>
                </actionGroup>

                <!-- Setting the installation type as upgrade if previous installation found -->
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installationType" value="upgrade"/>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${plpgsqloVersion}</text>
                            <value/>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </actionList>
        </actionGroup>

        <setInstallerVariable name="pg_config" value="${installdir}/bin/pg_config"/>
        <setInstallerVariable name="pg_config" value="${installdir}\bin\pg_config.exe">
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>

        <include file="staging/registration_plus_preinstallation.xml"/>

    </preInstallationActionList>
    <!-- Post installation actions -->
    <postInstallationActionList>
        <actionGroup>
            <actionList>
                <!-- LIN & MAC: Write the plpgsqlo Version to INI File -->
                <actionGroup>
                    <actionList>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>plpgsqlo/PG_MAJOR_VERSION</section>
                            <key>Description</key>
                            <value>${msg(install.summary)}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>plpgsqlo/PG_MAJOR_VERSION</section>
                            <key>InstallationDirectory</key>
                            <value>${installdir}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>plpgsqlo/PG_MAJOR_VERSION</section>
                            <key>Version</key>
                            <value>${product_version}</value>
                        </iniFileSet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${platform_name}</text>
                            <logic>does_not_equal</logic>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
                <actionGroup>
                    <actionList>
                        <registrySet key="HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\plpgsqlo-PG_MAJOR_VERSION" name="Description" value="${msg(install.summary)}"/>
                        <registrySet key="HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\plpgsqlo-PG_MAJOR_VERSION" name="Version" value="${product_version}"/>
                        <registrySet key="HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\plpgsqlo-PG_MAJOR_VERSION" name="Location" value="${installdir}"/>
                    </actionList>
                    <ruleList>
                        <compareText logic="equals" text="${platform_name}" value="windows"/>
                    </ruleList>
                </actionGroup>
            </actionList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <substitute>
                    <files>${installdir}/share/plpgsqlo.sql</files>
                    <substitutionList>
                        <substitution>
                            <pattern>\$libdir</pattern>
                            <value>${installdir}/lib/postgresql</value>
                        </substitution>
                        <substitution>
                            <pattern>\$SUPERUSER</pattern>
                            <value>${superuser}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
                <changePermissions>
                    <files>${installdir}/lib/postgresql/plpgsqlo.so</files>
                    <permissions>755</permissions>
                </changePermissions>
            </actionList>
            <ruleList>
                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <!-- change in C:\ to C:/ does not happen directly so need to use pg_config to get short name-->
                <setInstallerVariableFromScriptOutput>
                    <name>libdir</name>
                    <exec>${installdir}\bin\pg_config.exe</exec>
                    <execArgs>--pkglibdir</execArgs>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                    <onErrorActionList>
                        <setInstallerVariable name="libdir" value="${installdir}/lib"/>
                    </onErrorActionList>
                </setInstallerVariableFromScriptOutput>
                <!-- change "C:\" to "C:/" in case of Windows -->
                <setInstallerVariableFromRegEx>
                    <name>libdir</name>
                    <text>${libdir}</text>
                    <pattern>\\</pattern>
                    <substitution>/</substitution>
                </setInstallerVariableFromRegEx>
                <substitute>
                    <files>${installdir}/share/plpgsqlo.sql</files>
                    <substitutionList>
                        <substitution>
                            <pattern>\$libdir</pattern>
                            <value>${libdir}</value>
                        </substitution>
                        <substitution>
                            <pattern>\$SUPERUSER</pattern>
                            <value>${superuser}</value>
                        </substitution>
                    </substitutionList>
                </substitute>
            </actionList>
            <ruleList>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>


        <include file="staging/registration_plus_postinstallation.xml"/>

    </postInstallationActionList>
    <!-- preUninstallation actions -->
    <preUninstallationActionList>
        <!-- LIN & MAC: Unsetting the plpgsqlo values in the ini file -->
        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>plpgsqlo/PG_MAJOR_VERSION</section>
                    <key>Description</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>plpgsqlo/PG_MAJOR_VERSION</section>
                    <key>InstallationDirectory</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>plpgsqlo/PG_MAJOR_VERSION</section>
                    <key>Version</key>
                    <value/>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <registryDelete key="HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\plpgsqlo-PG_MAJOR_VERSION"/>

        <include file="staging/registration_plus_preuninstallation.xml"/>

    </preUninstallationActionList>

    <!-- Components -->
    <componentList>
        <component>
            <name>plpgsqlo</name>
            <description>plpgsqlo</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <!-- WIN: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}\lib</destination>
                    <name>programfileslibwindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/@@WINDIR@@/lib/plpgsqlo.dll"/>
                    </distributionFileList>
                </folder>
                <!-- WIN: plpgsqlo.sql -->
                <folder>
                    <description>SQL Files</description>
                    <destination>${installdir}\share</destination>
                    <name>programfilessharewindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/@@WINDIR@@/share/plpgsqlo.sql"/>
                    </distributionFileList>
                </folder>
                <!-- WIN: README -->
                <folder>
                    <description>README</description>
                    <destination>${installdir}\doc</destination>
                    <name>programfilesdocwindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/@@WINDIR@@/doc/README.plsecure"/>
                    </distributionFileList>
                </folder>


                <!-- LIN: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/lib/postgresql</destination>
                    <name>programfilesliblinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/linux/lib/plpgsqlo.so"/>
                    </distributionFileList>
                </folder>
                <!-- LIN: plpgsqlo.sql -->
                <folder>
                    <description>SQL Files</description>
                    <destination>${installdir}/share</destination>
                    <name>programfilessharelinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/linux/share/plpgsqlo.sql"/>
                    </distributionFileList>
                </folder>
                <!-- WIN: README -->
                <folder>
                    <description>README</description>
                    <destination>${installdir}/doc</destination>
                    <name>programfilesdoclinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/linux/doc/README.plsecure"/>
                    </distributionFileList>
                </folder>


                <!-- LIN-X64: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/lib/postgresql</destination>
                    <name>programfilesliblinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/linux-x64/lib/plpgsqlo.so"/>
                    </distributionFileList>
                </folder>
                <!-- LIN-X64: plpgsqlo.sql -->
                <folder>
                    <description>SQL Files</description>
                    <destination>${installdir}/share</destination>
                    <name>programfilessharelinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/linux-x64/share/plpgsqlo.sql"/>
                    </distributionFileList>
                </folder>
                <!-- WIN: README -->
                <folder>
                    <description>README</description>
                    <destination>${installdir}/doc</destination>
                    <name>programfilesdoclinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/linux-x64/doc/README.plsecure"/>
                    </distributionFileList>
                </folder>


                <!-- MAC: Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}/lib/postgresql</destination>
                    <name>programfileslibosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/osx/lib/plpgsqlo.so"/>
                    </distributionFileList>
                </folder>
                <!-- MAC: plpgsqlo.sql -->
                <folder>
                    <description>SQL Files</description>
                    <destination>${installdir}/share</destination>
                    <name>programfilesshareosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/osx/share/plpgsqlo.sql"/>
                    </distributionFileList>
                </folder>
                <!-- WIN: README -->
                <folder>
                    <description>README</description>
                    <destination>${installdir}/doc</destination>
                    <name>programfilesdocosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile origin="staging/osx/doc/README.plsecure"/>
                    </distributionFileList>
                </folder>



            </folderList>
        </component>
        <include file="staging/registration_plus_component.xml"/>
    </componentList>
    <parameterList>
        <!-- Registration Parameters -->
        <include file="staging/registration_plus_already_registered_parameter.xml"/>
        <include file="staging/registration_plus_authentication_parameter.xml"/>

        <!-- Install Directory -->
        <parameterGroup name="PostgresInstallationDetails" title="${msg(pg.server.title)}" description="Installer.Parameter.pg.installdir"
            explanation="Installer.Parameter.installdir.pg.explanation">
            <parameterList>
                <directoryParameter>
                    <name>installdir</name>
                    <value>${default_installdir}</value>
                    <default/>
                    <allowEmptyValue>1</allowEmptyValue>
                    <ask>yes</ask>
                    <cliOptionName>prefix</cliOptionName>
                    <mustBeWritable>yes</mustBeWritable>
                    <mustExist>0</mustExist>
                    <width>40</width>

                    <!-- Validating whether installdir is empty -->
                    <validationActionList>
                        <actionGroup>
                            <actionList>
                                <setInstallerVariable name="installdir" value="${default_installdir}" />
                                <throwError text="${msg(plpgsqlo.installdir.empty)}"/>
                            </actionList>
                            <ruleList>
                                <compareText text="${installdir}" logic="equals" value=""/>
                            </ruleList>
                        </actionGroup>

                        <!-- Validating whether installdir contains whitespaces (non-windows) -->
                        <throwError text="${msg(plpgsqlo.installdir.error)}">
                            <ruleList>
                                <regExMatch text="${installdir}" logic="does_not_match">
                                    <pattern>^/([0-9a-zA-Z_/\.\-]*)$</pattern>
                                </regExMatch>
                                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
                            </ruleList>
						</throwError>

                        <!-- Validating whether installdir is valid (Windows) -->
                        <throwError text="${msg(plpgsqlo.installdir.error)}">
                            <ruleList>
                                <regExMatch text="${installdir}" logic="does_not_match">
                                    <pattern>^([a-zA-Z]:)\\([0-9a-zA-Z_\\\s\.\-\(\)]*)$</pattern>
                                </regExMatch>
                                <compareText text="${platform_name}" logic="equals" value="windows"/>
                            </ruleList>
						</throwError>

                        <!-- LIN | MAC : show error if the installdir is not valid -->
                        <actionGroup>
                            <actionList>
                                <throwError text="${msg(plpgsqlo.installdir.pgerror)}"/>
                            </actionList>
                            <ruleList>
                                <ruleGroup>
                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                    <ruleList>
                                        <fileTest>
                                            <path>${installdir}/bin/psql</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                        <fileTest>
                                            <path>${installdir}/bin/createdb</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                        <fileTest>
                                            <path>${installdir}/bin/createlang</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                        <fileTest>
                                            <path>${installdir}/bin/pg_config</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                    </ruleList>
                                </ruleGroup>
                                <ruleGroup>
                                    <ruleList>
                                        <compareText>
                                            <text>${platform_name}</text>
                                            <logic>does_not_equal</logic>
                                            <value>windows</value>
                                        </compareText>
                                    </ruleList>
                                </ruleGroup>
                            </ruleList>
                        </actionGroup>
                        <!-- WIN: show error if the installdir is not valid -->
                        <actionGroup>
                            <actionList>
                                <throwError text="${msg(plpgsqlo.installdir.pgerror)}"/>
                            </actionList>
                            <ruleList>
                                <ruleGroup>
                                    <ruleEvaluationLogic>or</ruleEvaluationLogic>
                                    <ruleList>
                                        <fileTest>
                                            <path>${installdir}\bin\psql.exe</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                        <fileTest>
                                            <path>${installdir}\bin\createdb.exe</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                        <fileTest>
                                            <path>${installdir}\bin\createlang.exe</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                        <fileTest>
                                            <path>${installdir}\bin\pg_config.exe</path>
                                            <condition>not_exists</condition>
                                        </fileTest>
                                    </ruleList>
                                </ruleGroup>
                                <ruleGroup>
                                    <ruleList>
                                        <compareText>
                                            <text>${platform_name}</text>
                                            <logic>equals</logic>
                                            <value>windows</value>
                                        </compareText>
                                    </ruleList>
                                </ruleGroup>
                            </ruleList>
                        </actionGroup>
                        <actionGroup>
                            <actionList>
                                <setInstallerVariableFromScriptOutput>
                                    <name>pg_version_str</name>
                                    <exec>${installdir}/bin/pg_config</exec>
                                    <execArgs>--version</execArgs>
                                    <workingDirectory>${installdir}\bin</workingDirectory>
                                    <ruleList>
                                        <compareText>
                                            <text>${platform_name}</text>
                                            <logic>does_not_equal</logic>
                                            <value>windows</value>
                                        </compareText>
                                    </ruleList>
                                </setInstallerVariableFromScriptOutput>
                                <setInstallerVariableFromScriptOutput>
                                    <name>pg_version_str</name>
                                    <exec>${installdir}\bin\pg_config.exe</exec>
                                    <execArgs>--version</execArgs>
                                    <workingDirectory>${installdir}\bin</workingDirectory>
                                    <ruleList>
                                        <compareText>
                                            <text>${platform_name}</text>
                                            <logic>equals</logic>
                                            <value>windows</value>
                                        </compareText>
                                    </ruleList>
                                </setInstallerVariableFromScriptOutput>
                                <setInstallerVariableFromRegEx>
                                    <name>pg_version</name>
                                    <text>${pg_version_str}</text>
                                    <pattern>^PostgreSQL ([0-9].[0-9]).?[\w]*$</pattern>
                                    <substitution>\1</substitution>
                                    <ruleList>
                                        <compareText>
                                            <logic>does_not_equal</logic>
                                            <text>${pg_version_str}</text>
                                            <value/>
                                        </compareText>
                                    </ruleList>
                                </setInstallerVariableFromRegEx>
                            </actionList>
                        </actionGroup>
                        <actionGroup>
                            <actionList>
                                <throwError text="${msg(plpgsqlo.incompatible.pg.error)}"/>
                            </actionList>
                            <ruleList>
                                <compareText>
                                    <logic>does_not_equal</logic>
                                    <text>${pg_version}</text>
                                    <value>PG_MAJOR_VERSION</value>
                                </compareText>
                            </ruleList>
                        </actionGroup>

                        <!-- Check if 32 bit PL/Secure installer is being tried out aginst PG x64 bit or vice versa -->
                        <actionGroup>
                            <actionList>
                                <registryGet wowMode="64" variable="pginstalldir">
                                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql-x64-PG_MAJOR_VERSION</key>
                                    <name>Base Directory</name>
                                    <ruleList>
                                        <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="does_not_equal"/>
                                    </ruleList>
                                </registryGet>
                                <registryGet wowMode="32" variable="pginstalldir">
                                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\PostgreSQL\Installations\postgresql-PG_MAJOR_VERSION</key>
                                    <name>Base Directory</name>
                                    <ruleList>
                                        <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
                                    </ruleList>
                                </registryGet>

                                <stringModify variable="dos_path_installdir" logic="toupper" text="${installdir.dos}"/>
                                <stringModify variable="dos_path_pginstalldir" logic="toupper" text="${pginstalldir.dos}"/>
                                <actionGroup>
                                    <actionList>
                                        <throwError text="${msg(plpgsqlo.incompatible.pg64.error)}">
                                            <ruleList>
                                                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="does_not_equal"/>
                                            </ruleList>
                                        </throwError>
                                        <throwError text="${msg(plpgsqlo.incompatible.pg32.error)}">
                                            <ruleList>
                                                <compareValues value1="@@WINDIR@@" value2="windows-x64" logic="equals"/>
                                            </ruleList>
                                        </throwError>
                                    </actionList>
                                    <ruleList>
                                        <compareValues logic="equals" value1="${dos_path_installdir}" value2="${dos_path_pginstalldir}"/>
                                    </ruleList>
                                </actionGroup>

                            </actionList>
                            <ruleList>
                                <platformTest type="windows-x64"/>
                                <isFalse value="${extract_mode}"/>
                            </ruleList>
                        </actionGroup>

                    </validationActionList>
                </directoryParameter>
            </parameterList>
            <ruleList>
                <compareText text="${plpgsqloVersion}" logic="equals" value=""/>
            </ruleList>
        </parameterGroup>

        <booleanParameter name="admin_rights" cliOptionName="require-admin" default="0" ask="0" cliOptionShow="0"/>
        <stringParameter name="originalplatform" ask="0" cliOptionShow="0"/>
        <stringParameter name="branding" cliOptionName="branding" ask="0" cliOptionShow="0"/>
        <!-- Explain that we're using an existing installation directory -->
        <labelParameter>
            <name>upgrade</name>
            <title>${msg(upgrade.existing.installation.title)}</title>
            <description>${msg(upgrade.existing.installation.description)}</description>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${plpgsqloVersion}</text>
                    <value/>
                </compareText>
            </ruleList>
        </labelParameter>
    </parameterList>
</project>
