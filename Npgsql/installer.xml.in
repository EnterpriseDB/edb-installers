<project>
    <!-- Package details -->
    <shortName>npgsql</shortName>
    <fullName>Npgsql</fullName>
    <version>PG_VERSION_NPGSQL-PG_BUILDNUM_NPGSQL</version>
    <!-- These options are used on Windows -->
    <startMenuGroupName>${branding}</startMenuGroupName>
    <!-- Product Specific Options -->
    <productComments>Npgsql - .Net Data Provider for Postgresql packaged by EnterpriseDB</productComments>
    <productDisplayName>${product_fullname} ${productVersion}</productDisplayName>
    <requireInstallationByRootUser>${admin_rights}</requireInstallationByRootUser>
    <!-- The options are used for RPM registration -->
    <description>Npgsql - .Net Data Provider for Postgresql</description>
    <summary>Npgsql - .Net Data Provider for Postgresql distributed by EnterpriseDB</summary>
    <vendor>EnterpriseDB</vendor>

    <!-- Installer Size -->
    <width>550</width>
    <height>400</height>

    <!-- Misc options -->
    <installerFilename>${product_shortname}-${product_version}-${platform_name}.${platform_exec_suffix}</installerFilename>
    <wrapLicenseFileText>0</wrapLicenseFileText>
    <compressionAlgorithm>lzma</compressionAlgorithm>
    <unattendedModeUI>minimal</unattendedModeUI>
    <enableRollback>0</enableRollback>
    <saveRelativePaths>1</saveRelativePaths>
    <uninstallerName>uninstall-${product_shortname}</uninstallerName>
    <outputDirectory>../output</outputDirectory>
    <installationLogFile>${system_temp_directory}/install-${product_shortname}.log</installationLogFile>
    <uninstallationLogFile>${system_temp_directory}/uninstall-${product_shortname}.log</uninstallationLogFile>
    <allowWindowResize>1</allowWindowResize>
    <windowsSoftwareRegistryPrefix/>
    <!-- macOS 64bit App -->
    <osxPlatforms>osx-intel osx-x86_64</osxPlatforms>

    <!-- Images -->
    <disableSplashScreen>1</disableSplashScreen>
    <leftImage>../resources/pg-side.png</leftImage>

    <!-- i18n files for the UI -->
    <allowedLanguages>en</allowedLanguages>
    <customLanguageFileList>
        <language>
            <code>en</code>
            <encoding>iso8859-1</encoding>
            <file>i18n/en.lng</file>
        </language>
    </customLanguageFileList>

  <!-- Custom functions -->
  <functionDefinitionList>
    <actionDefinition name="createTempDir">
       <actionList>
         <globalVariables names="random_number"/>
         <actionGroup>
           <actionList>
            <setInstallerVariable name="iteration" value="0"/>
            <!-- Create a random number to use unique filenames -->
             <while>
               <actionList>
                 <generateRandomValue length="10" variable="random_number"/>
                 <runProgram>
                   <program>sh</program>
                   <programArguments>-c &lt;&lt;EOF '
                                     umask 0077
                                     mkdir "${system_temp_directory}/${dirPrefix}_${random_number}"
                                     if [ $? -ne 0 ];
                                     then
                                        exit 100
                                     fi
                                     '
EOF
                   </programArguments>
                 </runProgram>
                 <break>
                   <ruleList>
                    <compareText logic="equals" text="0" value="${program_exit_code}"/>
                   </ruleList>
                 </break>
                <actionGroup>
                  <actionList>
                    <throwError text="${msg(cannot.create.tmp.dir)}" abortOnError="1">
                      <ruleList>
                        <compareValues value1="${iteration}" logic="equals" value2="9"/>
                      </ruleList>
                    </throwError>
                  </actionList>
                </actionGroup>
                 <mathExpression text="${iteration}+1" variable="iteration"/>
               </actionList>
               <conditionRuleList>
                 <compareValues value1="${iteration}" logic="less" value2="10"/>
               </conditionRuleList>
             </while>
             <setInstallerVariable name="random_number" value="${random_number}"/>
           </actionList>
           <ruleList>
             <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
           </ruleList>
         </actionGroup>
         <actionGroup>
           <actionList>
             <generateRandomValue length="10" variable="random_number"/>
             <createDirectory path="${system_temp_directory}/${dirPrefix}_${random_number}"/>
             <setInstallerVariable name="random_number" value="${random_number}"/>
           </actionList>
           <ruleList>
             <compareText logic="equals" text="${platform_name}" value="windows"/>
           </ruleList>
         </actionGroup>
       </actionList>
       <parameterList>
         <stringParameter name="dirPrefix" allowEmptyValue="0"/>
       </parameterList>
    </actionDefinition>
  </functionDefinitionList>
    <preShowHelpActionList>
    	<!-- MAC : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PostgreSQL/Npgsql</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- LIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PostgreSQL/Npgsql</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- WIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PostgreSQL\Npgsql</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
    </preShowHelpActionList>
    <!-- Prebuild Actons-->
    <preBuildActionList>
      <setInstallerVariable name="originalplatform" value="${platform_name}"/>
      <setInstallerVariable name="originalplatform" value="linux-x32">
          <ruleList>
              <compareText text="${platform_name}" value="linux"/>
          </ruleList>
      </setInstallerVariable>
    </preBuildActionList>
    <initializationActionList>
        <setInstallerVariable name="project.parameter(extract_mode).ask" value="0"/>
	<setInstallerVariable name="productVersion" persist="1" value="PG_VERSION_NPGSQL" />
	<setInstallerVariable name="productFullName" persist="1" value="Npgsql for Mono 3.x">
          <ruleList>
              <compareText>
		<logic>does_not_equal</logic>
                <text>${platform_name}</text>
                <value>windows</value>
              </compareText>
          </ruleList>
        </setInstallerVariable>
	<setInstallerVariable name="productFullName" persist="1" value="Npgsql for Microsoft .Net 4.5">
          <ruleList>
              <compareText>
                <logic>equals</logic>
                <text>${platform_name}</text>
                <value>windows</value>
              </compareText>
          </ruleList>
        </setInstallerVariable>
	<!-- Abort Installation as trying to  run a 32-bit installer on 64-bit machine -->
        <throwError>
          <customErrorMessage>${msg(platform.not.match)}</customErrorMessage>
          <text>Unknown Error</text>
          <ruleList>
            <platformTest type="linux-x64"/>
            <compareText text="${originalplatform}" value="linux-x32"/>
          </ruleList>
        </throwError>
        <!-- The Directory structer of Npgsql is different from 2.0.14 to 2.2.3. Throwing an error before upgradation. -->
        <actionGroup>
            <actionList>
                <iniFileGet file="/etc/postgres-reg.ini" section="Npgsql" key="Version" variable="NPGSQL_INSTALLED_VERSION" />
                <iniFileGet file="/etc/postgres-reg.ini" section="Npgsql" key="InstallationDirectory" variable="NPGSQL_INSTALLED_DIRECTORY" />
                <throwError text="${msg(upgrade.major.version.error)}">
		<ruleEvaluationLogic>or</ruleEvaluationLogic>
                  <ruleList>
                    <compareText logic="contains" text="${NPGSQL_INSTALLED_VERSION}" value="2.0"/>
		    <compareText logic="contains" text="${NPGSQL_INSTALLED_VERSION}" value="2.2."/>
                  </ruleList>
                 </throwError>
             </actionList>
             <ruleList>
                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
                <fileExists path="/etc/postgres-reg.ini" />
             </ruleList>
        </actionGroup>
	
        <actionGroup>
            <actionList>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\Npgsql</key>
                    <name>Location</name>
                    <variable>npgsqlLocation</variable>
                </registryGet>
                <registryGet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\Npgsql</key>
                    <name>Version</name>
                    <variable>npgsqlVersion</variable>
                </registryGet>
                <throwError text="${msg(upgrade.major.version.error.windows)}">
		<ruleEvaluationLogic>or</ruleEvaluationLogic>
                    <ruleList>
                       <compareText logic="contains" text="${npgsqlVersion}" value="2.0"/>
		       <compareText logic="contains" text="${npgsqlVersion}" value="2.2."/>
                    </ruleList>
                </throwError>
            </actionList>
            <ruleList>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>
        <!-- LIN : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="${platform_install_prefix}/PostgreSQL/Npgsql"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- WIN : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="${platform_install_prefix}\PostgreSQL\Npgsql"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC : Set the default values for unattended mode -->
        <actionGroup>
            <actionList>
                <setInstallerVariable name="installdir" value="/Library/PostgreSQL/Npgsql"/>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${installer_ui}</text>
                    <value>unattended</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
	<!-- MAC : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>/Library/PostgreSQL/Npgsql</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- LIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}/PostgreSQL/Npgsql</value>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
        <!-- WIN : Set the default installation directory -->
        <setInstallerVariable>
            <name>default_installdir</name>
            <persist>1</persist>
            <value>${platform_install_prefix}\PostgreSQL\Npgsql</value>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </setInstallerVariable>
    </initializationActionList>
    <preInstallationActionList>
     <!-- Creating a temporary directory -->
     <createTempDir dirPrefix="${product_shortname}"/>
        <actionGroup>
            <actionList>
                <setInstallerVariable name="branding" value=""/>
                <!-- Do not create uninstaller in case of extract-only mode -->
                <setInstallerVariable name="createUninstaller" value="0" persist="1"/>
            </actionList>
            <ruleList>
                <isTrue value="${extract_mode}"/>
            </ruleList>
        </actionGroup>
        <!-- Do not perform the below actions in case of extract-only mode -->
        <actionGroup>
            <actionList>
                <!-- Abort installation if not super-user and not running in extract-only mode-->
                <throwError text="${msg(Installer.Warning.RootPrivileges)}">
                    <ruleList>
                        <isFalse value="${installer_is_root_install}"/>
                    </ruleList>
                </throwError>
                <setInstallerVariable name="project.windowsSoftwareRegistryPrefix" value="${project.vendor}\${project.fullName}"/>
                <!-- Creates the ini file if not exits -->
                <touchFile path="/etc/postgres-reg.ini">
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </touchFile>
                <!-- LIN & MAC : Check Previous Installation of npgsql-->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>Branding</key>
                            <variable>iBranding</variable>
                        </iniFileGet>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>Version</key>
                            <variable>npgsqlVersion</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        
                <!-- WIN : Check Previous Installation of npgsql-->
                <actionGroup>
                    <actionList>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\Npgsql</key>
                            <name>Branding</name>
                            <variable>iBranding</variable>
                        </registryGet>
                        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\Npgsql</key>
                            <name>Version</name>
                            <variable>npgsqlVersion</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        
        	<!-- If there appears to be an existing installation, with no Branding value. --> 
        	<!-- force the default value. Otherwise, set the branding to whatever we read, -->
        	<!-- or, set the default -->
        	
        	<!-- Existing, old install (version, but no branding) -->
        	<setInstallerVariable>
        		<name>branding</name>
        		<persist>0</persist>
        		<value>PostgreSQL</value>
        		<ruleList>
        			<compareText>
        				<logic>does_not_equal</logic>
        				<text>${npgsqlVersion}</text>
        				<value></value>
        			</compareText>
        			<compareText>
        				<logic>equals</logic>
        				<text>${iBranding}</text>
        				<value></value>
        			</compareText>
        		</ruleList>
        	</setInstallerVariable>
        	
        	<!-- Existing install, with branding -->
        	<setInstallerVariable>
        		<name>branding</name>
        		<persist>0</persist>
        		<value>${iBranding}</value>
        		<ruleList>
        			<compareText>
        				<logic>does_not_equal</logic>
        				<text>${iBranding}</text>
        				<value></value>
        			</compareText>
        		</ruleList>
        	</setInstallerVariable>
        	
        	<!-- New install, nothing set on the command line -->
        	<setInstallerVariable>
        		<name>branding</name>
        		<persist>0</persist>
        		<value>Postgres Plus Add-ons</value>
        		<ruleList>
        			<compareText>
        				<logic>equals</logic>
        				<text>${branding}</text>
        				<value></value>
        			</compareText>
        		</ruleList>
        	</setInstallerVariable>
        	
                <logMessage>
                    <text>Using branding: ${branding}</text>
                </logMessage>        
        
		<actionGroup>
		    <actionList>
			<setInstallerVariable name="installationType" value="upgrade" />
		    </actionList>
		    <ruleList>
			<compareText>
			    <text>${npgsqlVersion}</text>
			    <logic>does_not_equal</logic>
			    <value/>
			</compareText>
		    </ruleList>
		</actionGroup>

                <!-- Set the installation directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
                        <iniFileGet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>InstallationDirectory</key>
                            <variable>installdir</variable>
                        </iniFileGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${npgsqlVersion}</text>
                            <value/>
                        </compareText>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        
        	<!-- Set the installation directory in case of re-install/upgrade -->
                <actionGroup>
                    <actionList>
        	        <registryGet>
                            <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\Npgsql</key>
                            <name>Location</name>
                            <variable>installdir</variable>
                        </registryGet>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${npgsqlVersion}</text>
                            <value/>
                        </compareText>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
            </actionList>
            <ruleList>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </actionGroup>
    </preInstallationActionList>
    <postInstallationActionList>
        <!-- Do not perform the below actions in case of extract-only mode -->
         <actionGroup>
             <actionList>
                <actionGroup>
                    <actionList>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>Description</key>
                            <value>${product_fullname}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>InstallationDirectory</key>
                            <value>${installdir}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>Version</key>
                            <value>${product_version}</value>
                        </iniFileSet>
                        <iniFileSet>
                            <file>/etc/postgres-reg.ini</file>
                            <section>Npgsql</section>
                            <key>Branding</key>
                            <value>${branding}</value>
                        </iniFileSet>
                        <runProgram>
                            <program>${installdir}/installer/npgsql/createshortcuts.sh</program>
                            <programArguments>"${installdir}" "${branding}" "${system_temp_directory}/${product_shortname}_${random_number}"</programArguments>
                            <progressText>${msg(progress.text.creating.shortcuts)}</progressText>
                            <workingDirectory>${installdir}/installer/npgsql</workingDirectory>
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <logic>does_not_equal</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </actionGroup>
        	    <registrySet>
                    <key>HKEY_LOCAL_MACHINE\SOFTWARE\EnterpriseDB\Npgsql</key>
                    <name>Branding</name>
                    <value>${branding}</value>
                    <ruleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${platform_name}</text>
                            <value>windows</value>
                        </compareText>
                    </ruleList>
                </registrySet>
            </actionList>
            <ruleList>
                <isFalse value="${extract_mode}"/>
            </ruleList>
        </actionGroup>
      <deleteFile path="${system_temp_directory}/${product_shortname}_${random_number}" >
            <ruleList>
                <fileExists path="${system_temp_directory}/${product_shortname}_${random_number}" />
            </ruleList>
      </deleteFile>

    </postInstallationActionList>
    <installationAbortedActionList>
      <deleteFile path="${system_temp_directory}/${product_shortname}_${random_number}" >
        <ruleList>
          <fileExists path="${system_temp_directory}/${product_shortname}_${random_number}" />
        </ruleList>
      </deleteFile>
    </installationAbortedActionList>

    <!-- preUninstallation actions -->
    <preUninstallationActionList>

        <!-- Abort uninstallation if not super-user/Administrator -->
        <actionGroup>
            <actionList>
                <showWarning text="${msg(Installer.Warning.UninstallerAdministratorPrivileges)}"/>
                <exit/>
            </actionList>
            <ruleList>
                <isFalse value="${installer_is_root_install}"/>
                <compareText logic="equals" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>
        <actionGroup>
            <actionList>
                <showWarning text="${msg(Installer.Warning.UninstallerRootPrivileges)}"/>
                <exit/>
            </actionList>
            <ruleList>
                <isFalse value="${installer_is_root_install}"/>
                <compareText logic="does_not_equal" text="${platform_name}" value="windows"/>
            </ruleList>
        </actionGroup>

        <actionGroup>
            <actionList>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>Npgsql</section>
                    <key>Description</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>Npgsql</section>
                    <key>InstallationDirectory</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>Npgsql</section>
                    <key>Version</key>
                    <value/>
                </iniFileSet>
                <iniFileSet>
                    <file>/etc/postgres-reg.ini</file>
                    <section>Npgsql</section>
                    <key>Branding</key>
                    <value/>
                </iniFileSet>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${platform_name}</text>
                    <value>windows</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- LIN : Remove Menu shortcuts -->
        <actionGroup>
            <actionList>
                <runProgram>
                    <program>${installdir}/installer/npgsql/removeshortcuts.sh</program>
                    <programArguments>"${installdir}" "${branding}"</programArguments>
                    <workingDirectory>${installdir}/installer/npgsql</workingDirectory>
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                </runProgram>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>contains</logic>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </ruleList>
        </actionGroup>
        <!-- MAC : Remove Menu shortcuts -->
        <actionGroup>
            <actionList>
                <deleteFile>
                    <path>/Applications/${branding}/Npgsql</path>
                </deleteFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${platform_name}</text>
                    <value>osx</value>
                </compareText>
            </ruleList>
        </actionGroup>
    </preUninstallationActionList>
    <!-- Components -->
    <componentList>
        <component>
            <name>default</name>
            <description>Default Component</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <!-- LIN- Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>^M
                            <origin>staging/linux/bin</origin>^M
                        </distributionDirectory>^M
			<distributionFile origin="staging/linux/LICENSE.txt"/>	
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Scripts</description>
                    <destination>${installdir}</destination>
                    <name>installscriptslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Menu Scripts</description>
                    <destination>${installdir}</destination>
                    <name>menuscriptslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- LIN-X64 - Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>^M
                            <origin>staging/linux-x64/bin</origin>^M
                        </distributionDirectory>^M
			<distributionFile origin="staging/linux-x64/LICENSE.txt"/>	
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Scripts</description>
                    <destination>${installdir}</destination>
                    <name>installscriptslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Menu Scripts</description>
                    <destination>${installdir}</destination>
                    <name>menuscriptslinux-x64</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-x64/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
               <!-- LIN-PPC64 - Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux-ppc64</name>
                    <platforms>linux-ppc</platforms>
                    <distributionFileList>
                        <distributionDirectory>^M
                            <origin>staging/linux-ppc64/bin</origin>^M
                        </distributionDirectory>^M
			<distributionFile origin="staging/linux-ppc64/LICENSE.txt"/>	
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Scripts</description>
                    <destination>${installdir}</destination>
                    <name>installscriptslinux-ppc64</name>
                    <platforms>linux-ppc</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-ppc64/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Menu Scripts</description>
                    <destination>${installdir}</destination>
                    <name>menuscriptslinux-ppc64</name>
                    <platforms>linux-ppc</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/linux-ppc64/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- MAC Program Files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                         <distributionDirectory>^M
                            <origin>staging/osx/bin</origin>^M
                         </distributionDirectory>^M
			 <distributionFile origin="staging/osx/LICENSE.txt"/>	
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Installer Scripts</description>
                    <destination>${installdir}</destination>
                    <name>installscriptsosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/installer</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Menu Scripts</description>
                    <destination>${installdir}</destination>
                    <name>menuscriptsosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/osx/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
                <!-- WIN - Program files -->
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>^M
                            <origin>staging/windows/bin</origin>^M
                        </distributionDirectory>^M
			<distributionFile origin="staging/windows/LICENSE.txt"/> 
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Menu Scripts</description>
                    <destination>${installdir}</destination>
                    <name>menuscriptswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionDirectory>
                            <origin>staging/windows/scripts</origin>
                        </distributionDirectory>
                    </distributionFileList>
                </folder>
            </folderList>
            <!-- WIN: Start Menu -->
            <startMenuShortcutList>
	      <startMenuFolder>
		<name>Npgsql</name>
                <platforms>windows</platforms>
                <startMenuShortcutList>
		     <!-- Launch npgsql Docs API -->
	             <startMenuLinkShortcut>
			<comment>Npgsql Docs API</comment>
                        <name>Docs API</name>
	                <runInTerminal>0</runInTerminal>
	                <url>http://npgsql.projects.postgresql.org/docs/api</url>
		        <windowsIcon>${installdir}\scripts\images\pg-launchDocsAPI.ico</windowsIcon>
                        <ruleList>
                            <stringTest text="${branding}" type="not_empty"/>
                        </ruleList>
		     </startMenuLinkShortcut>  
		     <!-- Launch npgsql User Manual -->
                     <startMenuLinkShortcut>
	                <comment>Npgsql User Manual</comment>
	                <name>User Manual</name>
		        <runInTerminal>0</runInTerminal>
		        <url>http://npgsql.projects.postgresql.org/docs/manual/UserManual.html</url>
			<windowsIcon>${installdir}\scripts\images\pg-launchUserManual.ico</windowsIcon>
                        <ruleList>
                            <stringTest text="${branding}" type="not_empty"/>
                        </ruleList>
                     </startMenuLinkShortcut>  
	        </startMenuShortcutList>
	      </startMenuFolder>
	    </startMenuShortcutList>
        </component>
    </componentList>
    <!-- Install Directory -->
    <parameterList>
	<stringParameter name="originalplatform" ask="0" cliOptionShow="0"/>
        <booleanParameter name="extract_mode" cliOptionName="extract-only" default="0" ask="1" cliOptionShow="1"/>
        <booleanParameter name="admin_rights" cliOptionName="require-admin" default="0" ask="0" cliOptionShow="0"/>
	<stringParameter name="branding" cliOptionName="branding" ask="0" cliOptionShow="0"/>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value>${default_installdir}</value>
            <default/>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>40</width>
            <ruleList>
                <compareText>
                    <text>${npgsqlVersion}</text>
                    <logic>equals</logic>
                    <value/>
                </compareText>
            </ruleList>
	    <!-- Validating whether installdir is empty -->
            <validationActionList>
                <actionGroup>
                    <actionList>
                        <setInstallerVariable name="installdir" value="${default_installdir}" />
                        <throwError>
                            <text>${msg(npgsql.installdir.empty)}</text>
                        </throwError>
                    </actionList>
                    <ruleList>
                        <compareText>
                            <text>${installdir}</text>
                            <logic>equals</logic>
                            <value />
                        </compareText>
                    </ruleList>
                </actionGroup>
            </validationActionList>
            <!-- Validating whether installdir contains whitespaces (Linux) -->
            <postShowPageActionList>
                <actionGroup>
                    <actionList>  
                        <showWarning>
                            <text>${msg(npgsql.installdir.error)}</text>
                        </showWarning>
                        <setInstallerVariable name="next_page" value="installdir"/>
                    </actionList>
                    <ruleList>
                       <regExMatch>
                           <text>${installdir}</text>
                           <logic>does_not_match</logic>
                           <pattern>^/([0-9a-zA-Z_/\.\-]*)$</pattern>
                       </regExMatch>
                       <compareText>
                           <logic>does_not_equal</logic>
                           <text>${platform_name}</text>
                           <value>windows</value>
                       </compareText>
                    </ruleList>
	        </actionGroup>
                <!-- Validating whether installdir is valid (Windows) -->
                <actionGroup>
                   <actionList>
                     <setInstallerVariable name="installdir" value="${default_installdir}" />
                     <showWarning>
                        <text>${msg(npgsql.installdir.error)}</text>
                     </showWarning>
                     <setInstallerVariable name="next_page" value="installdir"/>
                   </actionList>
                   <ruleList>
                       <regExMatch>
                         <text>${installdir}</text>
                         <logic>does_not_match</logic>
                         <pattern>^([a-zA-Z]:)\\([0-9a-zA-Z_\\\s\.\-\(\)]*)$</pattern>
                       </regExMatch>
                       <compareText>
                         <text>${platform_name}</text>
                         <logic>equals</logic>
                         <value>windows</value>
                       </compareText>
                   </ruleList>
                 </actionGroup>
            </postShowPageActionList>
        </directoryParameter>
	<!-- Explain that we're using an existing installation directory -->
        <labelParameter>
            <name>upgrade</name>
            <title>${msg(upgrade.existing.installation.title)}</title>
            <description>${msg(upgrade.existing.installation.description)}</description>
            <ruleList>
		<compareText>
                    <text>${npgsqlVersion}</text>
                    <logic>does_not_equal</logic>
                    <value/>
                </compareText>
                <isFalse value="${extract_mode}" />
            </ruleList>
        </labelParameter>
    </parameterList>
</project>
