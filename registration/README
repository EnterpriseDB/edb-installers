MODULE (Registration):
---------------------
- An easy to use plug & play module for the enterprisedb registration for its installers.
- Enables the installer to act as an registration required installer.
- Introduces the following parameters in the installer:
  --existing-user <existing-user> Email address
  --existing-password <existing-password> Password
  --register 1|0 (HIDDEN)

CONTENTS:
--------
* build scripts (shell scripts - Build utilities used by this module)
  i.e. validateUserClient (linux/linux-x64/osx/windows), dbserver_guid(windows)
* bitrock installer scripts (XMLs)
  1. initialization.xml.in
    - Initialize the proxyHost and proxyPort from the environment variable

  2. preinstallation.xml.in
    - Read registry/ini (in case of upgrade mode) for registration done or not.
    - Check if given value for existing-email and existing-password are valid (in case of unattended mode)

  3. postinstallation.xml.in
    - Set the existing-email in registry/ini

  4. preuninstallation.xml.in
    - Unset the exising-email from registry/ini

  5. component.xml.in
    - User validation component to be used by the registration

  6. already_registered_parameter.xml.in
    - Custom page to check, if the user is registered with enterprisedb or not, otherwise open browser the promotional create user url

  7. authentication_parameter.xml.in
    - Page for the registration validation

HOW TO USE:
----------

1. Call _registration_postprocess function before calling platform specific post-process functions from component's build.sh

  - Provide following parameter while calling this function:
    STAGING_DIRECTORY  : Staging directory of the component
    COMPONENT_NAME     : Name of the component
    VERSION_VARIABLE   : Version Variable through which we check the upgrade mode
    INI                : Ini file name for linux, linux-x64 & osx
    REGISTRY_PREFIX    : INI Section name
    REGISTRY_PREFIX_WIN: Windows registry prefix
    TEMP_DIRECTORY     : Temporary Directory to be used during installation for unpack the user-validation scripts & executables
    COMPONENT_TYPE     : Type of component (used to create valid promotional create-user url)

    i.e. _registration_postprocess "$WD/pphq/staging" "PPHQ" "pphqVersion" "/etc/postgres-reg.ini" "pphq" "Postgres Plus HQ" "pphq_installer" "pphq"

  - Creates UserValidation directory in selected platform and copies the userValidation executables and script into them.
  - Generates few intermediate xmls used by the installer's xml for registration.
      i.e. registration_already_registered_parameter.xml
           registration_authentication_parameter.xml
           registration_component.xml
           registration_initialization.xml
           registration_postinstallation.xml
           registration_preinstallation.xml
           registration_preuninstallation.xml

2. Add the xmls at proper places in the component's installer xml.
     i.e. Add registration_initialization.xml  in the          <initializationActionList>
          Add registration_preinstallation.xml at the end of   <preInstallationActionList>
          Add registration_postinstallation.xml at the end of  <postInstallationActionList>
          Add registration_preuninstallation.xml at the end of <preUninstallationActionList>
          Add registration_component.xml in the                <componentList>
          Add registration_already_registered_parameter.xml in <parameterList>
          Add registration_authentication_parameter.xml in the <parameterList>

3. Put installdir directoryParameter under parameterGroup (if you want to make sure that - the registration pages will be asked ahead of the installation directory)
  i.e. <parameterGroup name="installationDirectory"
                        description="Installer.Parameter.installdir.description"
                        explanation="Installer.Parameter.installdir.explanation"
                        title="${msg(pphq.installation.dir)}">
            <parameterList>
                <directoryParameter>
                    <name>installdir</name>
                    <value>${default_installdir}</value>
                    <default/>
                    <allowEmptyValue>0</allowEmptyValue>
                    <ask>yes</ask>
                    <cliOptionName>prefix</cliOptionName>
                    <mustBeWritable>yes</mustBeWritable>
                    <mustExist>0</mustExist>
                    ...
                <directoryParameter>
            </parameterList>
        </parameterGroup>

4. Set custom translation messages for the registration in the language files.
  (NOTE: You can use the following values. Top management may be interested in changing the 'registration.explanation.value' message for each installers.)

  i.e.
  registration.error.invalid.email.value=Invalid email address. You must provide a valid email address.  Please try again.
  registration.error.invalid.password.value=Password is empty or contains invalid characters. Please enter valid password.
  registration.existingemail.authentication.explanation.value=Please enter the email address and password for your enterprisedb.com user account.
  registration.existingemail.authentication.title.value=EnterpriseDB User Account Information
  registration.existingemail.no=I do not have an enterprisedb.com user account.
  registration.existingemail.yes=I already have an enterprisedb.com user account.
  registration.explanation.value=If you do not have an account, click 'Next' to register at the EnterpriseDB website.  Registration will also give you access to many free assets at\nEnterpriseDB including:\n\n- PostgreSQL Performance Tuning (Bruce Momjian On-Demand Webcasts)\n- Top 5 Ways to Supercharge your Database (On-Demand Webcast)\n- Data Processing Inside PostgreSQL (Bruce Momjian On-Demand Webcasts)
  registration.title.value=Registration required at www.enterprisedb.com
  registration.userAuth.email.value=Email address
  registration.userAuth.password.value=Password
  registration.validatinguser.ws.error=Connection to the WebService failed. Please re-check the internet connection.
  registration.ws.email.already.exists=This email address already exists.  Please use Existing User fields or enter a new email address to continue.
  registration.ws.email.not.authenticated=The email and/or password are not valid. Please try again.
  registration.ws.email.not.validated=The email address has not been validated. An email has been sent to the email address that you provided. Please follow the steps in the email to validate your email address.
  registration.ws.exception.from.server=An error occured. Please try again.
  registration.ws.internet.not.connected=Error in calling web service. Please check the internet connection and try again.
  registration.emailpassword.not.provided=Please provide the email address and password for your EnterpriseDB user account.

That's it...
Done...

-- Ashesh
